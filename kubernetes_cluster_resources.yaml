apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-28T18:51:40Z"
    generateName: ingress-nginx-controller-5955dc6c59-
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
      app.kubernetes.io/version: 1.12.3
      helm.sh/chart: ingress-nginx-4.12.3
      pod-template-hash: 5955dc6c59
    name: ingress-nginx-controller-5955dc6c59-4gdfr
    namespace: ingress-nginx
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ingress-nginx-controller-5955dc6c59
      uid: b893fa4a-7281-4be8-b743-7007cac1fdf3
    resourceVersion: "8538"
    uid: f7e6099c-ed9f-4571-a8b8-343fe3a6edae
  spec:
    containers:
    - args:
      - /nginx-ingress-controller
      - --publish-service=$(POD_NAMESPACE)/ingress-nginx-controller
      - --election-id=ingress-nginx-leader
      - --controller-class=k8s.io/ingress-nginx
      - --ingress-class=nginx
      - --configmap=$(POD_NAMESPACE)/ingress-nginx-controller
      - --validating-webhook=:8443
      - --validating-webhook-certificate=/usr/local/certificates/cert
      - --validating-webhook-key=/usr/local/certificates/key
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: LD_PRELOAD
        value: /usr/local/lib/libmimalloc.so
      image: registry.k8s.io/ingress-nginx/controller:v1.12.3@sha256:ac444cd9515af325ba577b596fe4f27a34be1aa330538e8b317ad9d6c8fb94ee
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - /wait-shutdown
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: 10254
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: controller
      ports:
      - containerPort: 80
        name: http
        protocol: TCP
      - containerPort: 443
        name: https
        protocol: TCP
      - containerPort: 8443
        name: webhook
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 10254
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 100m
          memory: 90Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - ALL
        readOnlyRootFilesystem: false
        runAsGroup: 82
        runAsNonRoot: true
        runAsUser: 101
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /usr/local/certificates/
        name: webhook-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xcx67
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-0-31-168.ec2.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ingress-nginx
    serviceAccountName: ingress-nginx
    terminationGracePeriodSeconds: 300
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: webhook-cert
      secret:
        defaultMode: 420
        secretName: ingress-nginx-admission
    - name: kube-api-access-xcx67
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-28T18:51:44Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-28T18:51:40Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-28T18:52:00Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-28T18:52:00Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-28T18:51:40Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://fc3bf86778cb68e152d7019d669ad315fe6b2e44009a2ee7a308fbccac0c5c2e
      image: sha256:158e2f2d90f2171e72d1eff54855d96dca71c4f3223d47d5d823fdee6fd256d8
      imageID: registry.k8s.io/ingress-nginx/controller@sha256:ac444cd9515af325ba577b596fe4f27a34be1aa330538e8b317ad9d6c8fb94ee
      lastState: {}
      name: controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-28T18:51:44Z"
      volumeMounts:
      - mountPath: /usr/local/certificates/
        name: webhook-cert
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xcx67
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.31.168
    hostIPs:
    - ip: 10.0.31.168
    phase: Running
    podIP: 10.0.21.32
    podIPs:
    - ip: 10.0.21.32
    qosClass: Burstable
    startTime: "2025-06-28T18:51:40Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-28T18:14:30Z"
    generateName: aws-node-
    labels:
      app.kubernetes.io/instance: aws-vpc-cni
      app.kubernetes.io/name: aws-node
      controller-revision-hash: 5ff5d9c6b8
      k8s-app: aws-node
      pod-template-generation: "1"
    name: aws-node-42x5w
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: aws-node
      uid: b7f80207-698d-4663-a8aa-5627491a47fd
    resourceVersion: "1691"
    uid: 930b1c37-631e-4a09-a010-847a41b5b99b
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-31-168.ec2.internal
    containers:
    - env:
      - name: ADDITIONAL_ENI_TAGS
        value: '{}'
      - name: ANNOTATE_POD_IP
        value: "false"
      - name: AWS_VPC_CNI_NODE_PORT_SUPPORT
        value: "true"
      - name: AWS_VPC_ENI_MTU
        value: "9001"
      - name: AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG
        value: "false"
      - name: AWS_VPC_K8S_CNI_EXTERNALSNAT
        value: "false"
      - name: AWS_VPC_K8S_CNI_LOGLEVEL
        value: DEBUG
      - name: AWS_VPC_K8S_CNI_LOG_FILE
        value: /host/var/log/aws-routed-eni/ipamd.log
      - name: AWS_VPC_K8S_CNI_RANDOMIZESNAT
        value: prng
      - name: AWS_VPC_K8S_CNI_VETHPREFIX
        value: eni
      - name: AWS_VPC_K8S_PLUGIN_LOG_FILE
        value: /var/log/aws-routed-eni/plugin.log
      - name: AWS_VPC_K8S_PLUGIN_LOG_LEVEL
        value: DEBUG
      - name: CLUSTER_NAME
        value: ex-eks-managed-node-group
      - name: DISABLE_INTROSPECTION
        value: "false"
      - name: DISABLE_METRICS
        value: "false"
      - name: DISABLE_NETWORK_RESOURCE_PROVISIONING
        value: "false"
      - name: ENABLE_IPv4
        value: "true"
      - name: ENABLE_IPv6
        value: "false"
      - name: ENABLE_POD_ENI
        value: "false"
      - name: ENABLE_PREFIX_DELEGATION
        value: "false"
      - name: ENABLE_SUBNET_DISCOVERY
        value: "true"
      - name: NETWORK_POLICY_ENFORCING_MODE
        value: standard
      - name: VPC_CNI_VERSION
        value: v1.19.0
      - name: VPC_ID
        value: vpc-05a88beaee88182b9
      - name: WARM_ENI_TARGET
        value: "1"
      - name: WARM_PREFIX_TARGET
        value: "1"
      - name: MY_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: MY_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni:v1.19.0-eksbuild.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /app/grpc-health-probe
          - -addr=:50051
          - -connect-timeout=5s
          - -rpc-timeout=5s
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: aws-node
      ports:
      - containerPort: 61678
        hostPort: 61678
        name: metrics
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /app/grpc-health-probe
          - -addr=:50051
          - -connect-timeout=5s
          - -rpc-timeout=5s
        failureThreshold: 3
        initialDelaySeconds: 1
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        requests:
          cpu: 25m
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /host/var/log/aws-routed-eni
        name: log-dir
      - mountPath: /var/run/aws-node
        name: run-dir
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jw5b4
        readOnly: true
    - args:
      - --enable-ipv6=false
      - --enable-network-policy=false
      - --enable-cloudwatch-logs=false
      - --enable-policy-event-logs=false
      - --log-file=/var/log/aws-routed-eni/network-policy-agent.log
      - --metrics-bind-addr=:8162
      - --health-probe-bind-addr=:8163
      - --conntrack-cache-cleanup-period=300
      env:
      - name: MY_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon/aws-network-policy-agent:v1.1.5-eksbuild.1
      imagePullPolicy: Always
      name: aws-eks-nodeagent
      resources:
        requests:
          cpu: 25m
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /sys/fs/bpf
        name: bpf-pin-path
      - mountPath: /var/log/aws-routed-eni
        name: log-dir
      - mountPath: /var/run/aws-node
        name: run-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jw5b4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - env:
      - name: DISABLE_TCP_EARLY_DEMUX
        value: "false"
      - name: ENABLE_IPv6
        value: "false"
      image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init:v1.19.0-eksbuild.1
      imagePullPolicy: Always
      name: aws-vpc-cni-init
      resources:
        requests:
          cpu: 25m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jw5b4
        readOnly: true
    nodeName: ip-10-0-31-168.ec2.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: aws-node
    serviceAccountName: aws-node
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /sys/fs/bpf
        type: ""
      name: bpf-pin-path
    - hostPath:
        path: /opt/cni/bin
        type: ""
      name: cni-bin-dir
    - hostPath:
        path: /etc/cni/net.d
        type: ""
      name: cni-net-dir
    - hostPath:
        path: /var/log/aws-routed-eni
        type: DirectoryOrCreate
      name: log-dir
    - hostPath:
        path: /var/run/aws-node
        type: DirectoryOrCreate
      name: run-dir
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - name: kube-api-access-jw5b4
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-28T18:14:37Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-28T18:14:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-28T18:14:43Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-28T18:14:43Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-28T18:14:30Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://5855d21d70501f97025870b5ed90f7dccff17f857cccd3d8e58d127e02d1c941
      image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon/aws-network-policy-agent:v1.1.5-eksbuild.1
      imageID: 602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon/aws-network-policy-agent@sha256:f3280f090b6c5d3128357d8710db237931f5e1089e8017ab3d9cece429d77954
      lastState: {}
      name: aws-eks-nodeagent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-28T18:14:42Z"
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /sys/fs/bpf
        name: bpf-pin-path
      - mountPath: /var/log/aws-routed-eni
        name: log-dir
      - mountPath: /var/run/aws-node
        name: run-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jw5b4
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://051e783853b13722e1c6287f04b8796072f8648de09acc026912ff59d27b6050
      image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni:v1.19.0-eksbuild.1
      imageID: 602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni@sha256:efada7e5222a3376dc170b43b569f4dea762fd58186467c233b512bd6ab5415b
      lastState: {}
      name: aws-node
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-28T18:14:40Z"
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /host/var/log/aws-routed-eni
        name: log-dir
      - mountPath: /var/run/aws-node
        name: run-dir
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jw5b4
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.31.168
    hostIPs:
    - ip: 10.0.31.168
    initContainerStatuses:
    - containerID: containerd://1ad8cdf7116f319f5482420ec1bf4211d838cb019f959247aa9dee34ac64f890
      image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init:v1.19.0-eksbuild.1
      imageID: 602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init@sha256:ce36e6fc8457a3c79eab29ad7ca86ebc9220056c443e15502eeab7ceeef8496f
      lastState: {}
      name: aws-vpc-cni-init
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://1ad8cdf7116f319f5482420ec1bf4211d838cb019f959247aa9dee34ac64f890
          exitCode: 0
          finishedAt: "2025-06-28T18:14:37Z"
          reason: Completed
          startedAt: "2025-06-28T18:14:37Z"
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jw5b4
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.0.31.168
    podIPs:
    - ip: 10.0.31.168
    qosClass: Burstable
    startTime: "2025-06-28T18:14:30Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-28T18:15:37Z"
    generateName: coredns-748f495494-
    labels:
      eks.amazonaws.com/component: coredns
      k8s-app: kube-dns
      pod-template-hash: 748f495494
    name: coredns-748f495494-d4z6z
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-748f495494
      uid: 2853400f-23f1-438a-8595-c20347cfde4d
    resourceVersion: "1982"
    uid: c1f7741c-7558-4635-8760-c52164ad1693
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
            - key: kubernetes.io/arch
              operator: In
              values:
              - amd64
              - arm64
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.11.4-eksbuild.14
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dz2c8
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: ip-10-0-31-168.ec2.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          k8s-app: kube-dns
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - name: kube-api-access-dz2c8
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-28T18:15:41Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-28T18:15:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-28T18:15:42Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-28T18:15:42Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-28T18:15:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e227153caee69ecd85c18b307c7130db4653cc38baa9e711e73093e38d10927f
      image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.11.4-eksbuild.14
      imageID: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns@sha256:d0b6289af4cc69e8190d037a4263ae30dec79011f4d1dd4edb5b7d5bf233073c
      lastState: {}
      name: coredns
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-28T18:15:41Z"
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dz2c8
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.31.168
    hostIPs:
    - ip: 10.0.31.168
    phase: Running
    podIP: 10.0.25.151
    podIPs:
    - ip: 10.0.25.151
    qosClass: Burstable
    startTime: "2025-06-28T18:15:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-28T18:15:37Z"
    generateName: coredns-748f495494-
    labels:
      eks.amazonaws.com/component: coredns
      k8s-app: kube-dns
      pod-template-hash: 748f495494
    name: coredns-748f495494-qgvbm
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-748f495494
      uid: 2853400f-23f1-438a-8595-c20347cfde4d
    resourceVersion: "1954"
    uid: 739b08da-fc0d-4e85-b506-b0a15918fd1c
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
            - key: kubernetes.io/arch
              operator: In
              values:
              - amd64
              - arm64
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.11.4-eksbuild.14
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zzwk7
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: ip-10-0-31-168.ec2.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          k8s-app: kube-dns
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - name: kube-api-access-zzwk7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-28T18:15:41Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-28T18:15:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-28T18:15:41Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-28T18:15:41Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-28T18:15:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://71ba0372a47b45276328ac909a83a7140d011f2766c1d0690288c2a47083e9e1
      image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.11.4-eksbuild.14
      imageID: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns@sha256:d0b6289af4cc69e8190d037a4263ae30dec79011f4d1dd4edb5b7d5bf233073c
      lastState: {}
      name: coredns
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-28T18:15:41Z"
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zzwk7
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.31.168
    hostIPs:
    - ip: 10.0.31.168
    phase: Running
    podIP: 10.0.24.213
    podIPs:
    - ip: 10.0.24.213
    qosClass: Burstable
    startTime: "2025-06-28T18:15:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-28T18:15:38Z"
    generateName: eks-node-monitoring-agent-
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: eks-node-monitoring-agent
      app.kubernetes.io/managed-by: EKS
      app.kubernetes.io/name: eks-node-monitoring-agent
      app.kubernetes.io/version: 1.3.0
      controller-revision-hash: 74bf9c4d7
      pod-template-generation: "1"
    name: eks-node-monitoring-agent-g86tw
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: eks-node-monitoring-agent
      uid: 8c02a4eb-b55c-4fca-adb4-45144ced7cbb
    resourceVersion: "2006"
    uid: 4cd7eea6-4f6d-4553-ad16-945a1a757d06
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-31-168.ec2.internal
    containers:
    - args:
      - --probe-address=:8002
      - --metrics-address=:8003
      env:
      - name: HOST_ROOT
        value: /host
      - name: MY_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/eks-node-monitoring-agent:v1.3.0-eksbuild.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8002
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: eks-node-monitoring-agent
      resources:
        limits:
          cpu: 250m
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 30Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host
        name: host-root
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fs5xf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: ip-10-0-31-168.ec2.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: eks-node-monitoring-agent
    serviceAccountName: eks-node-monitoring-agent
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /
        type: ""
      name: host-root
    - name: kube-api-access-fs5xf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-28T18:15:44Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-28T18:15:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-28T18:15:44Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-28T18:15:44Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-28T18:15:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f0456600a1ca5f96da41f160dd82c692486fbbd07d82acc5ec540ba53ba078ec
      image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/eks-node-monitoring-agent:v1.3.0-eksbuild.2
      imageID: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/eks-node-monitoring-agent@sha256:97c470198e11b90de50511e07a3b4a3d88877c1051b3469068b23d04c213c04a
      lastState: {}
      name: eks-node-monitoring-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-28T18:15:43Z"
      volumeMounts:
      - mountPath: /host
        name: host-root
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fs5xf
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.31.168
    hostIPs:
    - ip: 10.0.31.168
    phase: Running
    podIP: 10.0.31.168
    podIPs:
    - ip: 10.0.31.168
    qosClass: Burstable
    startTime: "2025-06-28T18:15:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-28T18:14:30Z"
    generateName: eks-pod-identity-agent-
    labels:
      app.kubernetes.io/instance: eks-pod-identity-agent
      app.kubernetes.io/name: eks-pod-identity-agent
      controller-revision-hash: 84d4b9c495
      pod-template-generation: "1"
    name: eks-pod-identity-agent-lrzpx
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: eks-pod-identity-agent
      uid: 93b0341b-e397-495d-a7c9-d0614ccae781
    resourceVersion: "1648"
    uid: 5b51c1b2-30f8-4626-8197-201fbfabd950
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-31-168.ec2.internal
    containers:
    - args:
      - --port
      - "80"
      - --cluster-name
      - ex-eks-managed-node-group
      - --probe-port
      - "2703"
      command:
      - /go-runner
      - /eks-pod-identity-agent
      - server
      env:
      - name: AWS_REGION
        value: us-east-1
      image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/eks-pod-identity-agent:v0.1.29
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          host: localhost
          path: /healthz
          port: probes-port
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: eks-pod-identity-agent
      ports:
      - containerPort: 80
        hostPort: 80
        name: proxy
        protocol: TCP
      - containerPort: 2703
        hostPort: 2703
        name: probes-port
        protocol: TCP
      readinessProbe:
        failureThreshold: 30
        httpGet:
          host: localhost
          path: /readyz
          port: probes-port
          scheme: HTTP
        initialDelaySeconds: 1
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources: {}
      securityContext:
        capabilities:
          add:
          - CAP_NET_BIND_SERVICE
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rdcqj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /go-runner
      - /eks-pod-identity-agent
      - initialize
      image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/eks-pod-identity-agent:v0.1.29
      imagePullPolicy: Always
      name: eks-pod-identity-agent-init
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rdcqj
        readOnly: true
    nodeName: ip-10-0-31-168.ec2.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - name: kube-api-access-rdcqj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-28T18:14:35Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-28T18:14:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-28T18:14:38Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-28T18:14:38Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-28T18:14:30Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3dff91287b7644ad3fb55ad83451ba6cc1fea055687fa36f319e1ff034e2fd0b
      image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/eks-pod-identity-agent:v0.1.29
      imageID: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/eks-pod-identity-agent@sha256:00a1acdec7ba92dace2866f5a4b46a4393ee9e9975f286c8aa821957956da5c9
      lastState: {}
      name: eks-pod-identity-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-28T18:14:37Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rdcqj
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.31.168
    hostIPs:
    - ip: 10.0.31.168
    initContainerStatuses:
    - containerID: containerd://4bcd2b1986505ec0421d04660d8138f0388884066b35e3230c163b5a698af050
      image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/eks-pod-identity-agent:v0.1.29
      imageID: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/eks-pod-identity-agent@sha256:00a1acdec7ba92dace2866f5a4b46a4393ee9e9975f286c8aa821957956da5c9
      lastState: {}
      name: eks-pod-identity-agent-init
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://4bcd2b1986505ec0421d04660d8138f0388884066b35e3230c163b5a698af050
          exitCode: 0
          finishedAt: "2025-06-28T18:14:35Z"
          reason: Completed
          startedAt: "2025-06-28T18:14:35Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rdcqj
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.0.31.168
    podIPs:
    - ip: 10.0.31.168
    qosClass: BestEffort
    startTime: "2025-06-28T18:14:30Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-28T18:15:43Z"
    generateName: kube-proxy-
    labels:
      controller-revision-hash: 6b64d7658f
      k8s-app: kube-proxy
      pod-template-generation: "2"
    name: kube-proxy-r2fhp
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: 12b098ad-e344-4f8a-a9d4-f9bc90e5ba22
    resourceVersion: "2024"
    uid: 0232dc01-de65-47ce-869d-701158ba8355
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-31-168.ec2.internal
    containers:
    - command:
      - kube-proxy
      - --v=2
      - --config=/var/lib/kube-proxy-config/config
      - --hostname-override=$(NODE_NAME)
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.31.9-minimal-eksbuild.2
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/log
        name: varlog
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/lib/kube-proxy/
        name: kubeconfig
      - mountPath: /var/lib/kube-proxy-config/
        name: config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fd869
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: ip-10-0-31-168.ec2.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/log
        type: ""
      name: varlog
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kubeconfig
    - configMap:
        defaultMode: 420
        name: kube-proxy-config
      name: config
    - name: kube-api-access-fd869
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-28T18:15:46Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-28T18:15:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-28T18:15:46Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-28T18:15:46Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-28T18:15:43Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b1ced3a1e69d921b4a2469ac6eaf8ddddc3ff59f9297751ac93df8d106ac0201
      image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.31.9-minimal-eksbuild.2
      imageID: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy@sha256:723c011b721e90f60bddf26a94ed6219c85ce05e9008a867f9d9bdffc12f000d
      lastState: {}
      name: kube-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-28T18:15:45Z"
      volumeMounts:
      - mountPath: /var/log
        name: varlog
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/lib/kube-proxy/
        name: kubeconfig
      - mountPath: /var/lib/kube-proxy-config/
        name: config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fd869
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.31.168
    hostIPs:
    - ip: 10.0.31.168
    phase: Running
    podIP: 10.0.31.168
    podIPs:
    - ip: 10.0.31.168
    qosClass: Burstable
    startTime: "2025-06-28T18:15:43Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-29T18:55:53Z"
    generateName: nginx-hello-friend-64554bb999-
    labels:
      app: nginx-hello
      pod-template-hash: 64554bb999
    name: nginx-hello-friend-64554bb999-w74zs
    namespace: nginx-hello-friend
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: nginx-hello-friend-64554bb999
      uid: 7edef504-3edc-4198-9c55-04e815bc70b4
    resourceVersion: "249314"
    uid: 97d6fdc0-3797-4ce8-9f54-8cd3a2a6ca6b
  spec:
    containers:
    - image: public.ecr.aws/i6m7c7y9/demo:latest
      imagePullPolicy: IfNotPresent
      name: nginx-hello
      ports:
      - containerPort: 80
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fndc4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-0-31-168.ec2.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-fndc4
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-29T18:55:56Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-29T18:55:53Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-29T18:55:56Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-29T18:55:56Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-29T18:55:53Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b4e3d447800be1ed4891b671f7a93e384c4f1816d62df6a43420e822a63a31a1
      image: public.ecr.aws/i6m7c7y9/demo:latest
      imageID: public.ecr.aws/i6m7c7y9/demo@sha256:47696ec657110db7b0345967990977e456b978a093fa5cd2ee13f734fac4ecc1
      lastState: {}
      name: nginx-hello
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-29T18:55:55Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fndc4
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.31.168
    hostIPs:
    - ip: 10.0.31.168
    phase: Running
    podIP: 10.0.24.18
    podIPs:
    - ip: 10.0.24.18
    qosClass: BestEffort
    startTime: "2025-06-29T18:55:53Z"
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2025-06-28T18:23:21Z"
    labels:
      app: demo
    name: demo
    namespace: default
    resourceVersion: "3446"
    uid: e04e84d2-70ea-4f04-a70e-c7b849493c10
  spec:
    clusterIP: 172.20.218.186
    clusterIPs:
    - 172.20.218.186
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 80
      protocol: TCP
      targetPort: 80
    selector:
      app: demo
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "200"
    uid: 5cf21b38-ca2b-4525-ae0f-2dc16de19481
  spec:
    clusterIP: 172.20.0.1
    clusterIPs:
    - 172.20.0.1
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: ingress-nginx
      meta.helm.sh/release-namespace: ingress-nginx
    creationTimestamp: "2025-06-28T18:20:32Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
      app.kubernetes.io/version: 1.12.3
      helm.sh/chart: ingress-nginx-4.12.3
    name: ingress-nginx-controller
    namespace: ingress-nginx
    resourceVersion: "2920"
    uid: c51886d4-8b5b-4e15-91a7-4d670b32fc94
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 172.20.39.75
    clusterIPs:
    - 172.20.39.75
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - appProtocol: http
      name: http
      nodePort: 32184
      port: 80
      protocol: TCP
      targetPort: http
    - appProtocol: https
      name: https
      nodePort: 32640
      port: 443
      protocol: TCP
      targetPort: https
    selector:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - hostname: ac51886d48b5b4e1591a74d670b32fc9-846705458.us-east-1.elb.amazonaws.com
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: ingress-nginx
      meta.helm.sh/release-namespace: ingress-nginx
    creationTimestamp: "2025-06-28T18:20:32Z"
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
      app.kubernetes.io/version: 1.12.3
      helm.sh/chart: ingress-nginx-4.12.3
    name: ingress-nginx-controller-admission
    namespace: ingress-nginx
    resourceVersion: "2854"
    uid: 4dcbc4cb-3fdf-4b7d-a959-552f14558bdd
  spec:
    clusterIP: 172.20.105.241
    clusterIPs:
    - 172.20.105.241
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - appProtocol: https
      name: https-webhook
      port: 443
      protocol: TCP
      targetPort: webhook
    selector:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2025-06-28T18:07:16Z"
    name: eks-extension-metrics-api
    namespace: kube-system
    resourceVersion: "269"
    uid: 42c529d0-fbcb-4398-92dd-cef029b3763a
  spec:
    clusterIP: 172.20.54.215
    clusterIPs:
    - 172.20.54.215
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: metrics-api
      port: 443
      protocol: TCP
      targetPort: 10443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/port: "9153"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-06-28T18:09:31Z"
    labels:
      eks.amazonaws.com/component: kube-dns
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: CoreDNS
    name: kube-dns
    namespace: kube-system
    resourceVersion: "686"
    uid: 847bedde-d51b-45fd-9cee-bbdd3ce85c65
  spec:
    clusterIP: 172.20.0.10
    clusterIPs:
    - 172.20.0.10
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    - name: metrics
      port: 9153
      protocol: TCP
      targetPort: 9153
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: nginx-hello-friend
      meta.helm.sh/release-namespace: nginx-hello-friend
    creationTimestamp: "2025-06-29T18:39:07Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: service-nginx-hello
    namespace: nginx-hello-friend
    resourceVersion: "246416"
    uid: 7003e5c1-9969-4d8c-85ea-e9f73b26518f
  spec:
    clusterIP: 172.20.154.72
    clusterIPs:
    - 172.20.154.72
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 80
      protocol: TCP
      targetPort: 80
    selector:
      app: nginx-hello
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-28T18:09:32Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: aws-vpc-cni
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: aws-node
      app.kubernetes.io/version: v1.19.0
      helm.sh/chart: aws-vpc-cni-1.19.0
      k8s-app: aws-node
    name: aws-node
    namespace: kube-system
    resourceVersion: "8968"
    uid: b7f80207-698d-4663-a8aa-5627491a47fd
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: aws-node
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: aws-vpc-cni
          app.kubernetes.io/name: aws-node
          k8s-app: aws-node
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - arm64
                - key: eks.amazonaws.com/compute-type
                  operator: NotIn
                  values:
                  - fargate
                  - hybrid
                  - auto
        containers:
        - env:
          - name: ADDITIONAL_ENI_TAGS
            value: '{}'
          - name: ANNOTATE_POD_IP
            value: "false"
          - name: AWS_VPC_CNI_NODE_PORT_SUPPORT
            value: "true"
          - name: AWS_VPC_ENI_MTU
            value: "9001"
          - name: AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG
            value: "false"
          - name: AWS_VPC_K8S_CNI_EXTERNALSNAT
            value: "false"
          - name: AWS_VPC_K8S_CNI_LOGLEVEL
            value: DEBUG
          - name: AWS_VPC_K8S_CNI_LOG_FILE
            value: /host/var/log/aws-routed-eni/ipamd.log
          - name: AWS_VPC_K8S_CNI_RANDOMIZESNAT
            value: prng
          - name: AWS_VPC_K8S_CNI_VETHPREFIX
            value: eni
          - name: AWS_VPC_K8S_PLUGIN_LOG_FILE
            value: /var/log/aws-routed-eni/plugin.log
          - name: AWS_VPC_K8S_PLUGIN_LOG_LEVEL
            value: DEBUG
          - name: CLUSTER_NAME
            value: ex-eks-managed-node-group
          - name: DISABLE_INTROSPECTION
            value: "false"
          - name: DISABLE_METRICS
            value: "false"
          - name: DISABLE_NETWORK_RESOURCE_PROVISIONING
            value: "false"
          - name: ENABLE_IPv4
            value: "true"
          - name: ENABLE_IPv6
            value: "false"
          - name: ENABLE_POD_ENI
            value: "false"
          - name: ENABLE_PREFIX_DELEGATION
            value: "false"
          - name: ENABLE_SUBNET_DISCOVERY
            value: "true"
          - name: NETWORK_POLICY_ENFORCING_MODE
            value: standard
          - name: VPC_CNI_VERSION
            value: v1.19.0
          - name: VPC_ID
            value: vpc-05a88beaee88182b9
          - name: WARM_ENI_TARGET
            value: "1"
          - name: WARM_PREFIX_TARGET
            value: "1"
          - name: MY_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni:v1.19.0-eksbuild.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /app/grpc-health-probe
              - -addr=:50051
              - -connect-timeout=5s
              - -rpc-timeout=5s
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: aws-node
          ports:
          - containerPort: 61678
            name: metrics
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /app/grpc-health-probe
              - -addr=:50051
              - -connect-timeout=5s
              - -rpc-timeout=5s
            failureThreshold: 3
            initialDelaySeconds: 1
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            requests:
              cpu: 25m
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /host/opt/cni/bin
            name: cni-bin-dir
          - mountPath: /host/etc/cni/net.d
            name: cni-net-dir
          - mountPath: /host/var/log/aws-routed-eni
            name: log-dir
          - mountPath: /var/run/aws-node
            name: run-dir
          - mountPath: /run/xtables.lock
            name: xtables-lock
        - args:
          - --enable-ipv6=false
          - --enable-network-policy=false
          - --enable-cloudwatch-logs=false
          - --enable-policy-event-logs=false
          - --log-file=/var/log/aws-routed-eni/network-policy-agent.log
          - --metrics-bind-addr=:8162
          - --health-probe-bind-addr=:8163
          - --conntrack-cache-cleanup-period=300
          env:
          - name: MY_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon/aws-network-policy-agent:v1.1.5-eksbuild.1
          imagePullPolicy: Always
          name: aws-eks-nodeagent
          resources:
            requests:
              cpu: 25m
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /host/opt/cni/bin
            name: cni-bin-dir
          - mountPath: /sys/fs/bpf
            name: bpf-pin-path
          - mountPath: /var/log/aws-routed-eni
            name: log-dir
          - mountPath: /var/run/aws-node
            name: run-dir
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - env:
          - name: DISABLE_TCP_EARLY_DEMUX
            value: "false"
          - name: ENABLE_IPv6
            value: "false"
          image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init:v1.19.0-eksbuild.1
          imagePullPolicy: Always
          name: aws-vpc-cni-init
          resources:
            requests:
              cpu: 25m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /host/opt/cni/bin
            name: cni-bin-dir
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: aws-node
        serviceAccountName: aws-node
        terminationGracePeriodSeconds: 10
        tolerations:
        - operator: Exists
        volumes:
        - hostPath:
            path: /sys/fs/bpf
            type: ""
          name: bpf-pin-path
        - hostPath:
            path: /opt/cni/bin
            type: ""
          name: cni-bin-dir
        - hostPath:
            path: /etc/cni/net.d
            type: ""
          name: cni-net-dir
        - hostPath:
            path: /var/log/aws-routed-eni
            type: DirectoryOrCreate
          name: log-dir
        - hostPath:
            path: /var/run/aws-node
            type: DirectoryOrCreate
          name: run-dir
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 1
    desiredNumberScheduled: 1
    numberAvailable: 1
    numberMisscheduled: 0
    numberReady: 1
    observedGeneration: 1
    updatedNumberScheduled: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-28T18:15:38Z"
    generation: 1
    labels:
      k8s-app: dcgm-server
      version: v1
    name: dcgm-server
    namespace: kube-system
    resourceVersion: "1909"
    uid: 2304eef5-da93-4138-9297-6970f244c4f2
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: dcgm-server
        version: v1
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: dcgm-server
          version: v1
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: node.kubernetes.io/instance-type
                  operator: In
                  values:
                  - g3.16xlarge
                  - g3.4xlarge
                  - g3.8xlarge
                  - g3s.xlarge
                  - g4dn.12xlarge
                  - g4dn.16xlarge
                  - g4dn.2xlarge
                  - g4dn.4xlarge
                  - g4dn.8xlarge
                  - g4dn.metal
                  - g4dn.xlarge
                  - g5.12xlarge
                  - g5.16xlarge
                  - g5.24xlarge
                  - g5.2xlarge
                  - g5.48xlarge
                  - g5.4xlarge
                  - g5.8xlarge
                  - g5.xlarge
                  - g6.12xlarge
                  - g6.16xlarge
                  - g6.24xlarge
                  - g6.2xlarge
                  - g6.48xlarge
                  - g6.4xlarge
                  - g6.8xlarge
                  - g6.xlarge
                  - g6e.12xlarge
                  - g6e.16xlarge
                  - g6e.24xlarge
                  - g6e.2xlarge
                  - g6e.48xlarge
                  - g6e.4xlarge
                  - g6e.8xlarge
                  - g6e.xlarge
                  - gr6.4xlarge
                  - gr6.8xlarge
                  - p2.16xlarge
                  - p2.8xlarge
                  - p2.xlarge
                  - p3.16xlarge
                  - p3.2xlarge
                  - p3.8xlarge
                  - p4d.24xlarge
                  - p5.48xlarge
                  - p5e.48xlarge
                - key: eks.amazonaws.com/compute-type
                  operator: NotIn
                  values:
                  - fargate
                  - auto
                - key: sagemaker.amazonaws.com/compute-type
                  operator: NotIn
                  values:
                  - hyperpod
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
        containers:
        - args:
          - -c
          - nv-hostengine -n -b ALL || true; sleep infinity
          command:
          - /bin/sh
          image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/observability/dcgm-exporter:4.1.1-4.0.4-ubuntu22.04
          imagePullPolicy: IfNotPresent
          name: eks-node-monitoring-agent-dcgm
          ports:
          - containerPort: 5555
            hostPort: 5555
            protocol: TCP
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-28T18:15:37Z"
    generation: 1
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: eks-node-monitoring-agent
      app.kubernetes.io/managed-by: EKS
      app.kubernetes.io/name: eks-node-monitoring-agent
      app.kubernetes.io/version: 1.3.0
    name: eks-node-monitoring-agent
    namespace: kube-system
    resourceVersion: "8974"
    uid: 8c02a4eb-b55c-4fca-adb4-45144ced7cbb
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: eks-node-monitoring-agent
        app.kubernetes.io/name: eks-node-monitoring-agent
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: controller
          app.kubernetes.io/instance: eks-node-monitoring-agent
          app.kubernetes.io/managed-by: EKS
          app.kubernetes.io/name: eks-node-monitoring-agent
          app.kubernetes.io/version: 1.3.0
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: eks.amazonaws.com/compute-type
                  operator: NotIn
                  values:
                  - fargate
                  - auto
                - key: sagemaker.amazonaws.com/compute-type
                  operator: NotIn
                  values:
                  - hyperpod
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - arm64
        containers:
        - args:
          - --probe-address=:8002
          - --metrics-address=:8003
          env:
          - name: HOST_ROOT
            value: /host
          - name: MY_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/eks-node-monitoring-agent:v1.3.0-eksbuild.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8002
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: eks-node-monitoring-agent
          resources:
            limits:
              cpu: 250m
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 30Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /host
            name: host-root
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: eks-node-monitoring-agent
        serviceAccountName: eks-node-monitoring-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        volumes:
        - hostPath:
            path: /
            type: ""
          name: host-root
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 1
    desiredNumberScheduled: 1
    numberAvailable: 1
    numberMisscheduled: 0
    numberReady: 1
    observedGeneration: 1
    updatedNumberScheduled: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-28T18:12:35Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: eks-pod-identity-agent
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: eks-pod-identity-agent
      app.kubernetes.io/version: 0.1.25
      helm.sh/chart: eks-pod-identity-agent-1.3.7
    name: eks-pod-identity-agent
    namespace: kube-system
    resourceVersion: "8978"
    uid: 93b0341b-e397-495d-a7c9-d0614ccae781
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: eks-pod-identity-agent
        app.kubernetes.io/name: eks-pod-identity-agent
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: eks-pod-identity-agent
          app.kubernetes.io/name: eks-pod-identity-agent
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - arm64
                - key: eks.amazonaws.com/compute-type
                  operator: NotIn
                  values:
                  - fargate
                  - hybrid
                  - auto
        containers:
        - args:
          - --port
          - "80"
          - --cluster-name
          - ex-eks-managed-node-group
          - --probe-port
          - "2703"
          command:
          - /go-runner
          - /eks-pod-identity-agent
          - server
          env:
          - name: AWS_REGION
            value: us-east-1
          image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/eks-pod-identity-agent:v0.1.29
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: localhost
              path: /healthz
              port: probes-port
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: eks-pod-identity-agent
          ports:
          - containerPort: 80
            name: proxy
            protocol: TCP
          - containerPort: 2703
            name: probes-port
            protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              host: localhost
              path: /readyz
              port: probes-port
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources: {}
          securityContext:
            capabilities:
              add:
              - CAP_NET_BIND_SERVICE
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /go-runner
          - /eks-pod-identity-agent
          - initialize
          image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/eks-pod-identity-agent:v0.1.29
          imagePullPolicy: Always
          name: eks-pod-identity-agent-init
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 1
    desiredNumberScheduled: 1
    numberAvailable: 1
    numberMisscheduled: 0
    numberReady: 1
    observedGeneration: 1
    updatedNumberScheduled: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "2"
    creationTimestamp: "2025-06-28T18:09:31Z"
    generation: 2
    labels:
      eks.amazonaws.com/component: kube-proxy
      k8s-app: kube-proxy
    name: kube-proxy
    namespace: kube-system
    resourceVersion: "8970"
    uid: 12b098ad-e344-4f8a-a9d4-f9bc90e5ba22
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-proxy
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-proxy
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - arm64
                - key: eks.amazonaws.com/compute-type
                  operator: NotIn
                  values:
                  - fargate
                  - auto
        containers:
        - command:
          - kube-proxy
          - --v=2
          - --config=/var/lib/kube-proxy-config/config
          - --hostname-override=$(NODE_NAME)
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.31.9-minimal-eksbuild.2
          imagePullPolicy: IfNotPresent
          name: kube-proxy
          resources:
            requests:
              cpu: 100m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log
            name: varlog
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
          - mountPath: /var/lib/kube-proxy/
            name: kubeconfig
          - mountPath: /var/lib/kube-proxy-config/
            name: config
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kube-proxy
        serviceAccountName: kube-proxy
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        volumes:
        - hostPath:
            path: /var/log
            type: ""
          name: varlog
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /lib/modules
            type: ""
          name: lib-modules
        - configMap:
            defaultMode: 420
            name: kube-proxy
          name: kubeconfig
        - configMap:
            defaultMode: 420
            name: kube-proxy-config
          name: config
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 1
    desiredNumberScheduled: 1
    numberAvailable: 1
    numberMisscheduled: 0
    numberReady: 1
    observedGeneration: 2
    updatedNumberScheduled: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: ingress-nginx
      meta.helm.sh/release-namespace: ingress-nginx
    creationTimestamp: "2025-06-28T18:20:32Z"
    generation: 1
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
      app.kubernetes.io/version: 1.12.3
      helm.sh/chart: ingress-nginx-4.12.3
    name: ingress-nginx-controller
    namespace: ingress-nginx
    resourceVersion: "8544"
    uid: 81bf868c-7a8e-45a6-b255-1b93d13e0cac
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: controller
          app.kubernetes.io/instance: ingress-nginx
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: ingress-nginx
          app.kubernetes.io/part-of: ingress-nginx
          app.kubernetes.io/version: 1.12.3
          helm.sh/chart: ingress-nginx-4.12.3
      spec:
        containers:
        - args:
          - /nginx-ingress-controller
          - --publish-service=$(POD_NAMESPACE)/ingress-nginx-controller
          - --election-id=ingress-nginx-leader
          - --controller-class=k8s.io/ingress-nginx
          - --ingress-class=nginx
          - --configmap=$(POD_NAMESPACE)/ingress-nginx-controller
          - --validating-webhook=:8443
          - --validating-webhook-certificate=/usr/local/certificates/cert
          - --validating-webhook-key=/usr/local/certificates/key
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: LD_PRELOAD
            value: /usr/local/lib/libmimalloc.so
          image: registry.k8s.io/ingress-nginx/controller:v1.12.3@sha256:ac444cd9515af325ba577b596fe4f27a34be1aa330538e8b317ad9d6c8fb94ee
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                - /wait-shutdown
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: controller
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          - containerPort: 443
            name: https
            protocol: TCP
          - containerPort: 8443
            name: webhook
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 100m
              memory: 90Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsGroup: 82
            runAsNonRoot: true
            runAsUser: 101
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local/certificates/
            name: webhook-cert
            readOnly: true
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ingress-nginx
        serviceAccountName: ingress-nginx
        terminationGracePeriodSeconds: 300
        volumes:
        - name: webhook-cert
          secret:
            defaultMode: 420
            secretName: ingress-nginx-admission
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-28T18:20:32Z"
      lastUpdateTime: "2025-06-28T18:20:53Z"
      message: ReplicaSet "ingress-nginx-controller-5955dc6c59" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-06-28T18:52:00Z"
      lastUpdateTime: "2025-06-28T18:52:00Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-06-28T18:09:31Z"
    generation: 2
    labels:
      eks.amazonaws.com/component: coredns
      k8s-app: kube-dns
      kubernetes.io/name: CoreDNS
    name: coredns
    namespace: kube-system
    resourceVersion: "1987"
    uid: b97a7703-dc2f-4c63-8b40-31bfbcab31e6
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        eks.amazonaws.com/component: coredns
        k8s-app: kube-dns
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          eks.amazonaws.com/component: coredns
          k8s-app: kube-dns
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - arm64
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.11.4-eksbuild.14
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        - key: CriticalAddonsOnly
          operator: Exists
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              k8s-app: kube-dns
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-06-28T18:14:39Z"
      lastUpdateTime: "2025-06-28T18:14:39Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-06-28T18:09:31Z"
      lastUpdateTime: "2025-06-28T18:15:42Z"
      message: ReplicaSet "coredns-748f495494" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      meta.helm.sh/release-name: nginx-hello-friend
      meta.helm.sh/release-namespace: nginx-hello-friend
    creationTimestamp: "2025-06-29T18:39:07Z"
    generation: 2
    labels:
      app.kubernetes.io/managed-by: Helm
    name: nginx-hello-friend
    namespace: nginx-hello-friend
    resourceVersion: "249329"
    uid: aeb02b53-122f-48f2-a2f1-ae6bc8a37b6d
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: nginx-hello
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: nginx-hello
      spec:
        containers:
        - image: public.ecr.aws/i6m7c7y9/demo:latest
          imagePullPolicy: IfNotPresent
          name: nginx-hello
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-29T18:55:56Z"
      lastUpdateTime: "2025-06-29T18:55:56Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-06-29T18:55:53Z"
      lastUpdateTime: "2025-06-29T18:55:56Z"
      message: ReplicaSet "nginx-hello-friend-64554bb999" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: ingress-nginx
      meta.helm.sh/release-namespace: ingress-nginx
    creationTimestamp: "2025-06-28T18:20:32Z"
    generation: 1
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
      app.kubernetes.io/version: 1.12.3
      helm.sh/chart: ingress-nginx-4.12.3
      pod-template-hash: 5955dc6c59
    name: ingress-nginx-controller-5955dc6c59
    namespace: ingress-nginx
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ingress-nginx-controller
      uid: 81bf868c-7a8e-45a6-b255-1b93d13e0cac
    resourceVersion: "8541"
    uid: b893fa4a-7281-4be8-b743-7007cac1fdf3
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        pod-template-hash: 5955dc6c59
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: controller
          app.kubernetes.io/instance: ingress-nginx
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: ingress-nginx
          app.kubernetes.io/part-of: ingress-nginx
          app.kubernetes.io/version: 1.12.3
          helm.sh/chart: ingress-nginx-4.12.3
          pod-template-hash: 5955dc6c59
      spec:
        containers:
        - args:
          - /nginx-ingress-controller
          - --publish-service=$(POD_NAMESPACE)/ingress-nginx-controller
          - --election-id=ingress-nginx-leader
          - --controller-class=k8s.io/ingress-nginx
          - --ingress-class=nginx
          - --configmap=$(POD_NAMESPACE)/ingress-nginx-controller
          - --validating-webhook=:8443
          - --validating-webhook-certificate=/usr/local/certificates/cert
          - --validating-webhook-key=/usr/local/certificates/key
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: LD_PRELOAD
            value: /usr/local/lib/libmimalloc.so
          image: registry.k8s.io/ingress-nginx/controller:v1.12.3@sha256:ac444cd9515af325ba577b596fe4f27a34be1aa330538e8b317ad9d6c8fb94ee
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                - /wait-shutdown
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: controller
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          - containerPort: 443
            name: https
            protocol: TCP
          - containerPort: 8443
            name: webhook
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 100m
              memory: 90Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsGroup: 82
            runAsNonRoot: true
            runAsUser: 101
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local/certificates/
            name: webhook-cert
            readOnly: true
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ingress-nginx
        serviceAccountName: ingress-nginx
        terminationGracePeriodSeconds: 300
        volumes:
        - name: webhook-cert
          secret:
            defaultMode: 420
            secretName: ingress-nginx-admission
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-06-28T18:15:37Z"
    generation: 2
    labels:
      eks.amazonaws.com/component: coredns
      k8s-app: kube-dns
      pod-template-hash: 748f495494
    name: coredns-748f495494
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: coredns
      uid: b97a7703-dc2f-4c63-8b40-31bfbcab31e6
    resourceVersion: "1986"
    uid: 2853400f-23f1-438a-8595-c20347cfde4d
  spec:
    replicas: 2
    selector:
      matchLabels:
        eks.amazonaws.com/component: coredns
        k8s-app: kube-dns
        pod-template-hash: 748f495494
    template:
      metadata:
        creationTimestamp: null
        labels:
          eks.amazonaws.com/component: coredns
          k8s-app: kube-dns
          pod-template-hash: 748f495494
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - arm64
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.11.4-eksbuild.14
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        - key: CriticalAddonsOnly
          operator: Exists
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              k8s-app: kube-dns
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-28T18:09:31Z"
    generation: 3
    labels:
      eks.amazonaws.com/component: coredns
      k8s-app: kube-dns
      pod-template-hash: 789f8477df
    name: coredns-789f8477df
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: coredns
      uid: b97a7703-dc2f-4c63-8b40-31bfbcab31e6
    resourceVersion: "1970"
    uid: d02d5dc4-c442-464d-901e-09280308450a
  spec:
    replicas: 0
    selector:
      matchLabels:
        eks.amazonaws.com/component: coredns
        k8s-app: kube-dns
        pod-template-hash: 789f8477df
    template:
      metadata:
        creationTimestamp: null
        labels:
          eks.amazonaws.com/component: coredns
          k8s-app: kube-dns
          pod-template-hash: 789f8477df
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - arm64
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.11.3-eksbuild.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        - key: CriticalAddonsOnly
          operator: Exists
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              k8s-app: kube-dns
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
      meta.helm.sh/release-name: nginx-hello-friend
      meta.helm.sh/release-namespace: nginx-hello-friend
    creationTimestamp: "2025-06-29T18:55:53Z"
    generation: 1
    labels:
      app: nginx-hello
      pod-template-hash: 64554bb999
    name: nginx-hello-friend-64554bb999
    namespace: nginx-hello-friend
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: nginx-hello-friend
      uid: aeb02b53-122f-48f2-a2f1-ae6bc8a37b6d
    resourceVersion: "249315"
    uid: 7edef504-3edc-4198-9c55-04e815bc70b4
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: nginx-hello
        pod-template-hash: 64554bb999
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: nginx-hello
          pod-template-hash: 64554bb999
      spec:
        containers:
        - image: public.ecr.aws/i6m7c7y9/demo:latest
          imagePullPolicy: IfNotPresent
          name: nginx-hello
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: nginx-hello-friend
      meta.helm.sh/release-namespace: nginx-hello-friend
    creationTimestamp: "2025-06-29T18:39:07Z"
    generation: 2
    labels:
      app: nginx-hello
      pod-template-hash: fc75dd9c7
    name: nginx-hello-friend-fc75dd9c7
    namespace: nginx-hello-friend
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: nginx-hello-friend
      uid: aeb02b53-122f-48f2-a2f1-ae6bc8a37b6d
    resourceVersion: "249328"
    uid: ba7c712d-4192-4b3f-9b3f-05612ff7d261
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: nginx-hello
        pod-template-hash: fc75dd9c7
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: nginx-hello
          pod-template-hash: fc75dd9c7
      spec:
        containers:
        - image: nginx-hello-friend:latest
          imagePullPolicy: IfNotPresent
          name: nginx-hello
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
kind: List
metadata:
  resourceVersion: ""
apiVersion: v1
items:
- apiVersion: v1
  kind: Namespace
  metadata:
    creationTimestamp: "2025-06-28T18:34:37Z"
    labels:
      kubernetes.io/metadata.name: 2048-game
    name: 2048-game
    resourceVersion: "5400"
    uid: adb36402-4003-4237-94be-118a2219b3ee
  spec:
    finalizers:
    - kubernetes
  status:
    phase: Active
- apiVersion: v1
  kind: Namespace
  metadata:
    creationTimestamp: "2025-06-28T18:07:12Z"
    labels:
      kubernetes.io/metadata.name: default
    name: default
    resourceVersion: "18"
    uid: 7cbe29e2-307b-4a1a-aab5-e7c5864dc2fd
  spec:
    finalizers:
    - kubernetes
  status:
    phase: Active
- apiVersion: v1
  kind: Namespace
  metadata:
    creationTimestamp: "2025-06-28T18:20:27Z"
    labels:
      kubernetes.io/metadata.name: ingress-nginx
      name: ingress-nginx
    name: ingress-nginx
    resourceVersion: "2789"
    uid: dfad5b64-6082-426e-8ad7-fee38350bc17
  spec:
    finalizers:
    - kubernetes
  status:
    phase: Active
- apiVersion: v1
  kind: Namespace
  metadata:
    creationTimestamp: "2025-06-28T18:07:12Z"
    labels:
      kubernetes.io/metadata.name: kube-node-lease
    name: kube-node-lease
    resourceVersion: "25"
    uid: 4d819163-76fa-44f8-a498-429b4cd8bdca
  spec:
    finalizers:
    - kubernetes
  status:
    phase: Active
- apiVersion: v1
  kind: Namespace
  metadata:
    creationTimestamp: "2025-06-28T18:07:12Z"
    labels:
      kubernetes.io/metadata.name: kube-public
    name: kube-public
    resourceVersion: "11"
    uid: 69503d8e-ca29-4410-8836-ff2296f963cf
  spec:
    finalizers:
    - kubernetes
  status:
    phase: Active
- apiVersion: v1
  kind: Namespace
  metadata:
    creationTimestamp: "2025-06-28T18:07:12Z"
    labels:
      kubernetes.io/metadata.name: kube-system
    name: kube-system
    resourceVersion: "5"
    uid: 13de68bb-5ffa-4831-ba45-54d83de83e42
  spec:
    finalizers:
    - kubernetes
  status:
    phase: Active
- apiVersion: v1
  kind: Namespace
  metadata:
    creationTimestamp: "2025-06-29T18:39:06Z"
    labels:
      kubernetes.io/metadata.name: nginx-hello-friend
      name: nginx-hello-friend
    name: nginx-hello-friend
    resourceVersion: "246410"
    uid: 41c2d4e7-6320-4c24-ad36-e00f5d6069c8
  spec:
    finalizers:
    - kubernetes
  status:
    phase: Active
kind: List
metadata:
  resourceVersion: ""
apiVersion: v1
items:
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDBTCCAe2gAwIBAgIIEsMui+0zA50wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczAeFw0yNTA2MjgxODAxNTNaFw0zNTA2MjYxODA2NTNaMBUx
      EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQDdyYNAsCSzsr2TGMR4UezwTn3Cwm7UM0w/CL+R+LU80iiuu3+V6uSye787
      F9Gktdvdddqr5iGKvmh0IVuJDhfFgW0oYpbDMd1TPGBLMkVIrQg6/yap8Bj30Xy0
      BjiIrzbOhV4LgDqF7D6tq2URZ7/k6y3fayCbVfK9ZEoWMlORJZiYZwYECst9+CDy
      YXGWLDzJVeRaMWNPhQjYHuTGBy3B+tRTrZ0cCQkYZGnFw7wYqnbGLJ+FBlYyKrTx
      fH3GgXa05AH6uQ3LdNg7KOdvE+ch7nVeb3U/0YXiN+qc0V8Uu6IuPR/OtnhWXLpo
      ypGJ/lnoEXN8iuQ32T71IshOsh/hAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBS8OSscYEq/bIXm25P+Szqv4urqdjAV
      BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQBDZhhiEmqF
      FvhJ0fow6W1up9LKRZnsagZJwEC0/2a+xiz23OEiC4SI2YEXSAgrmGHTqGFMbKYV
      yMB0HZUy8EG87KYPQHXd6HAZtM3s6seefnJzeCHUqfEcXA4pUym2MFnqUTNH/vkJ
      b3rwmmMTHCCeNLQVroTanBD5bgrOTBwWz5NjiNwfqCmWGafVHmn+RUzXDaiuKPgk
      puEef1HJgfGW21RENz6Lw0JYedDqxetTq7bl3ce3gXi1lBDNVHSVRWwb+/n6MWn/
      hdL3qapcgXJNfNF100YHPiNbMf/MHFgLGaRThYSZsiW79qDKsCMyAYn+he6v/ERD
      zZjKfypTAU1w
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2025-06-28T18:34:37Z"
    name: kube-root-ca.crt
    namespace: 2048-game
    resourceVersion: "5401"
    uid: 572b28d9-9f25-44d9-9e7c-2a640d93c1d6
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDBTCCAe2gAwIBAgIIEsMui+0zA50wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczAeFw0yNTA2MjgxODAxNTNaFw0zNTA2MjYxODA2NTNaMBUx
      EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQDdyYNAsCSzsr2TGMR4UezwTn3Cwm7UM0w/CL+R+LU80iiuu3+V6uSye787
      F9Gktdvdddqr5iGKvmh0IVuJDhfFgW0oYpbDMd1TPGBLMkVIrQg6/yap8Bj30Xy0
      BjiIrzbOhV4LgDqF7D6tq2URZ7/k6y3fayCbVfK9ZEoWMlORJZiYZwYECst9+CDy
      YXGWLDzJVeRaMWNPhQjYHuTGBy3B+tRTrZ0cCQkYZGnFw7wYqnbGLJ+FBlYyKrTx
      fH3GgXa05AH6uQ3LdNg7KOdvE+ch7nVeb3U/0YXiN+qc0V8Uu6IuPR/OtnhWXLpo
      ypGJ/lnoEXN8iuQ32T71IshOsh/hAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBS8OSscYEq/bIXm25P+Szqv4urqdjAV
      BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQBDZhhiEmqF
      FvhJ0fow6W1up9LKRZnsagZJwEC0/2a+xiz23OEiC4SI2YEXSAgrmGHTqGFMbKYV
      yMB0HZUy8EG87KYPQHXd6HAZtM3s6seefnJzeCHUqfEcXA4pUym2MFnqUTNH/vkJ
      b3rwmmMTHCCeNLQVroTanBD5bgrOTBwWz5NjiNwfqCmWGafVHmn+RUzXDaiuKPgk
      puEef1HJgfGW21RENz6Lw0JYedDqxetTq7bl3ce3gXi1lBDNVHSVRWwb+/n6MWn/
      hdL3qapcgXJNfNF100YHPiNbMf/MHFgLGaRThYSZsiW79qDKsCMyAYn+he6v/ERD
      zZjKfypTAU1w
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2025-06-28T18:07:23Z"
    name: kube-root-ca.crt
    namespace: default
    resourceVersion: "373"
    uid: 0e813f42-25da-409a-b688-04d0e9bc8917
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: ingress-nginx
      meta.helm.sh/release-namespace: ingress-nginx
    creationTimestamp: "2025-06-28T18:20:32Z"
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
      app.kubernetes.io/version: 1.12.3
      helm.sh/chart: ingress-nginx-4.12.3
    name: ingress-nginx-controller
    namespace: ingress-nginx
    resourceVersion: "2846"
    uid: 685ac50c-225d-4e67-8cd2-4719cc0717cd
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDBTCCAe2gAwIBAgIIEsMui+0zA50wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczAeFw0yNTA2MjgxODAxNTNaFw0zNTA2MjYxODA2NTNaMBUx
      EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQDdyYNAsCSzsr2TGMR4UezwTn3Cwm7UM0w/CL+R+LU80iiuu3+V6uSye787
      F9Gktdvdddqr5iGKvmh0IVuJDhfFgW0oYpbDMd1TPGBLMkVIrQg6/yap8Bj30Xy0
      BjiIrzbOhV4LgDqF7D6tq2URZ7/k6y3fayCbVfK9ZEoWMlORJZiYZwYECst9+CDy
      YXGWLDzJVeRaMWNPhQjYHuTGBy3B+tRTrZ0cCQkYZGnFw7wYqnbGLJ+FBlYyKrTx
      fH3GgXa05AH6uQ3LdNg7KOdvE+ch7nVeb3U/0YXiN+qc0V8Uu6IuPR/OtnhWXLpo
      ypGJ/lnoEXN8iuQ32T71IshOsh/hAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBS8OSscYEq/bIXm25P+Szqv4urqdjAV
      BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQBDZhhiEmqF
      FvhJ0fow6W1up9LKRZnsagZJwEC0/2a+xiz23OEiC4SI2YEXSAgrmGHTqGFMbKYV
      yMB0HZUy8EG87KYPQHXd6HAZtM3s6seefnJzeCHUqfEcXA4pUym2MFnqUTNH/vkJ
      b3rwmmMTHCCeNLQVroTanBD5bgrOTBwWz5NjiNwfqCmWGafVHmn+RUzXDaiuKPgk
      puEef1HJgfGW21RENz6Lw0JYedDqxetTq7bl3ce3gXi1lBDNVHSVRWwb+/n6MWn/
      hdL3qapcgXJNfNF100YHPiNbMf/MHFgLGaRThYSZsiW79qDKsCMyAYn+he6v/ERD
      zZjKfypTAU1w
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2025-06-28T18:20:27Z"
    name: kube-root-ca.crt
    namespace: ingress-nginx
    resourceVersion: "2790"
    uid: 98a42e47-d8fa-48dc-a958-a9153b02aab0
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDBTCCAe2gAwIBAgIIEsMui+0zA50wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczAeFw0yNTA2MjgxODAxNTNaFw0zNTA2MjYxODA2NTNaMBUx
      EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQDdyYNAsCSzsr2TGMR4UezwTn3Cwm7UM0w/CL+R+LU80iiuu3+V6uSye787
      F9Gktdvdddqr5iGKvmh0IVuJDhfFgW0oYpbDMd1TPGBLMkVIrQg6/yap8Bj30Xy0
      BjiIrzbOhV4LgDqF7D6tq2URZ7/k6y3fayCbVfK9ZEoWMlORJZiYZwYECst9+CDy
      YXGWLDzJVeRaMWNPhQjYHuTGBy3B+tRTrZ0cCQkYZGnFw7wYqnbGLJ+FBlYyKrTx
      fH3GgXa05AH6uQ3LdNg7KOdvE+ch7nVeb3U/0YXiN+qc0V8Uu6IuPR/OtnhWXLpo
      ypGJ/lnoEXN8iuQ32T71IshOsh/hAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBS8OSscYEq/bIXm25P+Szqv4urqdjAV
      BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQBDZhhiEmqF
      FvhJ0fow6W1up9LKRZnsagZJwEC0/2a+xiz23OEiC4SI2YEXSAgrmGHTqGFMbKYV
      yMB0HZUy8EG87KYPQHXd6HAZtM3s6seefnJzeCHUqfEcXA4pUym2MFnqUTNH/vkJ
      b3rwmmMTHCCeNLQVroTanBD5bgrOTBwWz5NjiNwfqCmWGafVHmn+RUzXDaiuKPgk
      puEef1HJgfGW21RENz6Lw0JYedDqxetTq7bl3ce3gXi1lBDNVHSVRWwb+/n6MWn/
      hdL3qapcgXJNfNF100YHPiNbMf/MHFgLGaRThYSZsiW79qDKsCMyAYn+he6v/ERD
      zZjKfypTAU1w
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2025-06-28T18:07:23Z"
    name: kube-root-ca.crt
    namespace: kube-node-lease
    resourceVersion: "374"
    uid: dee77db6-8eda-4878-aee8-741c86f3c4c4
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDBTCCAe2gAwIBAgIIEsMui+0zA50wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczAeFw0yNTA2MjgxODAxNTNaFw0zNTA2MjYxODA2NTNaMBUx
      EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQDdyYNAsCSzsr2TGMR4UezwTn3Cwm7UM0w/CL+R+LU80iiuu3+V6uSye787
      F9Gktdvdddqr5iGKvmh0IVuJDhfFgW0oYpbDMd1TPGBLMkVIrQg6/yap8Bj30Xy0
      BjiIrzbOhV4LgDqF7D6tq2URZ7/k6y3fayCbVfK9ZEoWMlORJZiYZwYECst9+CDy
      YXGWLDzJVeRaMWNPhQjYHuTGBy3B+tRTrZ0cCQkYZGnFw7wYqnbGLJ+FBlYyKrTx
      fH3GgXa05AH6uQ3LdNg7KOdvE+ch7nVeb3U/0YXiN+qc0V8Uu6IuPR/OtnhWXLpo
      ypGJ/lnoEXN8iuQ32T71IshOsh/hAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBS8OSscYEq/bIXm25P+Szqv4urqdjAV
      BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQBDZhhiEmqF
      FvhJ0fow6W1up9LKRZnsagZJwEC0/2a+xiz23OEiC4SI2YEXSAgrmGHTqGFMbKYV
      yMB0HZUy8EG87KYPQHXd6HAZtM3s6seefnJzeCHUqfEcXA4pUym2MFnqUTNH/vkJ
      b3rwmmMTHCCeNLQVroTanBD5bgrOTBwWz5NjiNwfqCmWGafVHmn+RUzXDaiuKPgk
      puEef1HJgfGW21RENz6Lw0JYedDqxetTq7bl3ce3gXi1lBDNVHSVRWwb+/n6MWn/
      hdL3qapcgXJNfNF100YHPiNbMf/MHFgLGaRThYSZsiW79qDKsCMyAYn+he6v/ERD
      zZjKfypTAU1w
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2025-06-28T18:07:23Z"
    name: kube-root-ca.crt
    namespace: kube-public
    resourceVersion: "375"
    uid: 26c6a3a4-5c16-4511-add9-57f0655dab0b
- apiVersion: v1
  data:
    branch-eni-cooldown: "60"
    enable-network-policy-controller: "false"
    enable-windows-ipam: "false"
    enable-windows-prefix-delegation: "false"
    minimum-ip-target: "3"
    warm-ip-target: "1"
    warm-prefix-target: "0"
  kind: ConfigMap
  metadata:
    creationTimestamp: "2025-06-28T18:09:32Z"
    labels:
      app.kubernetes.io/instance: aws-vpc-cni
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: aws-node
      app.kubernetes.io/version: v1.19.0
      helm.sh/chart: aws-vpc-cni-1.19.0
      k8s-app: aws-node
    name: amazon-vpc-cni
    namespace: kube-system
    resourceVersion: "708"
    uid: 0e404f21-d342-4295-83ba-d5999189dc8c
- apiVersion: v1
  data:
    mapRoles: |
      - groups:
        - system:bootstrappers
        - system:nodes
        rolearn: arn:aws:iam::738136494567:role/db_node_group-eks-node-group-2025062818014736510000000d
        username: system:node:{{EC2PrivateDNSName}}
  kind: ConfigMap
  metadata:
    creationTimestamp: "2025-06-28T18:14:05Z"
    name: aws-auth
    namespace: kube-system
    resourceVersion: "9178"
    uid: a840a952-a3cc-4c43-be0d-6532cd403246
- apiVersion: v1
  data:
    Corefile: |
      .:53 {
          errors
          health {
              lameduck 5s
            }
          ready
          kubernetes cluster.local in-addr.arpa ip6.arpa {
            pods insecure
            fallthrough in-addr.arpa ip6.arpa
          }
          prometheus :9153
          forward . /etc/resolv.conf
          cache 30
          loop
          reload
          loadbalance
      }
  kind: ConfigMap
  metadata:
    creationTimestamp: "2025-06-28T18:09:31Z"
    labels:
      eks.amazonaws.com/component: coredns
      k8s-app: kube-dns
    name: coredns
    namespace: kube-system
    resourceVersion: "679"
    uid: 253d4106-2bd2-446d-98cf-7f340cf42c2e
- apiVersion: v1
  data:
    client-ca-file: |
      -----BEGIN CERTIFICATE-----
      MIIDBTCCAe2gAwIBAgIILz/cMsgtm/MwDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczAeFw0yNTA2MjgxODAxNTZaFw0zNTA2MjYxODA2NTZaMBUx
      EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQDAkOJT4Rk+QASHZlKw9rStD/SVsU8cJOICzPd6ozTbcUtL8XgAjd/NG5hJ
      cMo0sCTrRYu7zq920SdSEky11+TYzhReI+ia4nMUGOYwJClRoIr772SdW3or4x0U
      2O6sAC6nQKslwO9pENvsONN1MvAHSS98XnGgKJ0T7Usy79N7F9GLha4H74pIoYMG
      dbk5u84ANwYbSiG/0jYmrQkXcHrW2EDY81ul5jJ/RQPCtG/JywV1NjbXi5Ev6/py
      AD1q15AeyKQ+1fOi8pLEwoWpZoUgfRByhuPsLFlux1oFUj1WpnWP7JeYwwHS9Wzx
      igJ+DxquIPOSFQucnbRiyFlyIA91AgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBTk65CW5EeKm6Q/pt3YGj9dU6RGqzAV
      BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQBoipaYxfe0
      af97ARSakHfvgEvIecRuCzSary7xkZYeFecghkz1f89skuzrmUUYJlhk/NzoelVf
      gQguHbshDsq2gj8NFmnP9Z9TJl0Qr45FFRj2L9LTRzM4c4JkSffa4yB17dIv+Iav
      akW2uWrZmxNeogsQvgjk5COMq7vc1POh6J9Qxu8TqnTunQRbMWMsdColWbrbba8p
      noL93mOfIAXvvJQ+GgYrBPVld+wtl5Bly/ZjMCvbGHk9gw1Mjj12hUU7UZ+nQG4J
      cwXA204KnTqeU0fXzciyn1ixavO9y6AXcbfGJhiE6AlfbzYRJM19NhaX6DnAz93L
      TNiY+mkxyupU
      -----END CERTIFICATE-----
      -----BEGIN CERTIFICATE-----
      MIIDBTCCAe2gAwIBAgIIBRfvXImvg1MwDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczAeFw0yNTA2MjgxODA5MDFaFw0zNTA2MjYxODE0MDFaMBUx
      EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQDCVFjGcCeoqZ+ZB+jJx+/gsgJvv4qLx/FZJLvxBFqCiPruhjiwzaTNiTNE
      2sqReJeWpwvODHSaDWclFSJcrxtyngL57hy9BGB9jqDZohWOpKIRyKFJSC6yA1YE
      Uoc6SLYX6ZgtoN//PY8K6INbL9dBZhbkHgtfxrsVaJXAggD48Tn1/DUwa9zUuWQX
      S9N2pe5bZ27EwKLHrpayKkJBKp9Xr5GKlunTb7S4zQSM2aflaE7BK1a6x0JalO2Q
      VFaUnzsmS4ncljWfbPcuXhwBP9DcfdCdoEO/edNinm2HQB0ihR/6KsWp03axnwvJ
      dF7sLuCAlO/Qq+yY2LBwVvgcw3vzAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBQrsdPf7ahvaiyElPrlLuMe3t9cUjAV
      BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQAt4CCqmT5s
      ZsyVsnYpqxL7tHlx5r4fF2469qTXnuwolw/xZ0CO+xzRUXR3HsK0VZm0BiALXMqn
      94O8RL+mffLsp8mIyEspguRRuH3BYqaQLooXRzRx7g6leZykSnDV+L3xd+nfkeuO
      xKNUKXI/9F09pjuaakrVmkMePfw+X9LHfBDu9jqByB5rApYYfxCeCyEAB+virQcH
      eGilSv+8OMXemHIulw8Mh82nhdIrMrAjHwOQjzWeNvpZfkqCDVv3CtGuvFeqD4Hp
      vbstjP2iec6nfrIOrVKdM0SBZvb4uk2XCZ1LUlCj148hWvL7/jMnln43rtp1R9r4
      aSZ7DO3p0azm
      -----END CERTIFICATE-----
    requestheader-allowed-names: '["front-proxy-client"]'
    requestheader-client-ca-file: |
      -----BEGIN CERTIFICATE-----
      MIIDETCCAfmgAwIBAgIIc4DSafbO26owDQYJKoZIhvcNAQELBQAwGTEXMBUGA1UE
      AxMOZnJvbnQtcHJveHktY2EwHhcNMjUwNjI4MTgwMTUzWhcNMzUwNjI2MTgwNjUz
      WjAZMRcwFQYDVQQDEw5mcm9udC1wcm94eS1jYTCCASIwDQYJKoZIhvcNAQEBBQAD
      ggEPADCCAQoCggEBAOfBug/EK+FJoCnOQS3G+sdHRNVms1OamDNAzL7tgxXK88VN
      qgMYkHxInF8eJqmvy3G7w23YJ5J+qnnxkZBvMoZdqQ52/Jd/AemsJP2YNKLgb5GM
      wLClDiizHHtyu/D0w61XevNC7DCygGJAcCwHk6L1GpWxRJNFzlV/XojZoalMLKHo
      CqgU868V/Cu32KuCg6Es824ppypw6GW6GU8ZtNOajA3skL4PkZ9DZPxvaPJsuqzk
      kvcyH/QNdYYMxd5A4x3ltRmq1Fswk9jlKf0RIALLGxYdQQFR/f/tbKsHt8yCK+eD
      1iR3Y/IhLwd/T7cLRVRWh5txX4opNtReT3MUuoECAwEAAaNdMFswDgYDVR0PAQH/
      BAQDAgKkMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFAgAjhiXfgMSK3sZdJJh
      K5XC7I7fMBkGA1UdEQQSMBCCDmZyb250LXByb3h5LWNhMA0GCSqGSIb3DQEBCwUA
      A4IBAQAlKCujoq3BiSXKONinbSu1035jM37UV6rcv6zJpvc4SdIsH3pE9BxYVSAV
      zaMKWjx6K0G5bxWa8iKSJJ2Z1jV0EILqjPWMfXnjep51AHTxqkeplL4x1pEnEMOj
      hJoGTi1t1uLfyhnGw7NddB3h3KYa1kBz214RBCLqnjdUZRNmljW7pnR4ppFAWx0J
      eZJ87o0sq9l2B2H5WF3pmCJ1FtcxFUnBjvGwOyqh+rZGkit0FwHgkBITuyOpgRJD
      IT/aZ05ir9y0seDNmsohwrWXlqBk51y+3Ro5gbcdYvGnBZh9aZL98aY25AtiQEz8
      yb353mfxxxufsvQ3QdOyqBzMkdqa
      -----END CERTIFICATE-----
    requestheader-extra-headers-prefix: '["X-Remote-Extra-"]'
    requestheader-group-headers: '["X-Remote-Group"]'
    requestheader-username-headers: '["X-Remote-User"]'
  kind: ConfigMap
  metadata:
    creationTimestamp: "2025-06-28T18:07:12Z"
    name: extension-apiserver-authentication
    namespace: kube-system
    resourceVersion: "1507"
    uid: a16825fe-328d-4403-9c76-34b46848886d
- apiVersion: v1
  data:
    since: "2025-06-28"
  kind: ConfigMap
  metadata:
    creationTimestamp: "2025-06-28T18:07:12Z"
    name: kube-apiserver-legacy-service-account-token-tracking
    namespace: kube-system
    resourceVersion: "38"
    uid: d23eaac0-71e4-4b1e-a25f-438d02bd3a24
- apiVersion: v1
  data:
    kubeconfig: |-
      kind: Config
      apiVersion: v1
      clusters:
      - cluster:
          certificate-authority: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          server: https://163d1cead096d6b334addb1aa6561be0.gr7.us-east-1.eks.amazonaws.com
        name: default
      contexts:
      - context:
          cluster: default
          namespace: default
          user: default
        name: default
      current-context: default
      users:
      - name: default
        user:
          tokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
  kind: ConfigMap
  metadata:
    creationTimestamp: "2025-06-28T18:09:31Z"
    labels:
      eks.amazonaws.com/component: kube-proxy
      k8s-app: kube-proxy
    name: kube-proxy
    namespace: kube-system
    resourceVersion: "669"
    uid: 48de6777-f754-43d2-9074-02ff5f919717
- apiVersion: v1
  data:
    config: |-
      apiVersion: kubeproxy.config.k8s.io/v1alpha1
      bindAddress: 0.0.0.0
      clientConnection:
        acceptContentTypes: ""
        burst: 10
        contentType: application/vnd.kubernetes.protobuf
        kubeconfig: /var/lib/kube-proxy/kubeconfig
        qps: 5
      clusterCIDR: ""
      configSyncPeriod: 15m0s
      conntrack:
        maxPerCore: 32768
        min: 131072
        tcpCloseWaitTimeout: 1h0m0s
        tcpEstablishedTimeout: 24h0m0s
      enableProfiling: false
      healthzBindAddress: 0.0.0.0:10256
      hostnameOverride: ""
      iptables:
        masqueradeAll: false
        masqueradeBit: 14
        minSyncPeriod: 0s
        syncPeriod: 30s
      ipvs:
        excludeCIDRs: null
        minSyncPeriod: 0s
        scheduler: ""
        syncPeriod: 30s
      kind: KubeProxyConfiguration
      metricsBindAddress: 0.0.0.0:10249
      mode: "iptables"
      nodePortAddresses: null
      oomScoreAdj: -998
      portRange: ""
  kind: ConfigMap
  metadata:
    creationTimestamp: "2025-06-28T18:09:31Z"
    labels:
      eks.amazonaws.com/component: kube-proxy
      k8s-app: kube-proxy
    name: kube-proxy-config
    namespace: kube-system
    resourceVersion: "670"
    uid: d5fae87c-d845-40c7-b292-297ea54c6c55
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDBTCCAe2gAwIBAgIIEsMui+0zA50wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczAeFw0yNTA2MjgxODAxNTNaFw0zNTA2MjYxODA2NTNaMBUx
      EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQDdyYNAsCSzsr2TGMR4UezwTn3Cwm7UM0w/CL+R+LU80iiuu3+V6uSye787
      F9Gktdvdddqr5iGKvmh0IVuJDhfFgW0oYpbDMd1TPGBLMkVIrQg6/yap8Bj30Xy0
      BjiIrzbOhV4LgDqF7D6tq2URZ7/k6y3fayCbVfK9ZEoWMlORJZiYZwYECst9+CDy
      YXGWLDzJVeRaMWNPhQjYHuTGBy3B+tRTrZ0cCQkYZGnFw7wYqnbGLJ+FBlYyKrTx
      fH3GgXa05AH6uQ3LdNg7KOdvE+ch7nVeb3U/0YXiN+qc0V8Uu6IuPR/OtnhWXLpo
      ypGJ/lnoEXN8iuQ32T71IshOsh/hAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBS8OSscYEq/bIXm25P+Szqv4urqdjAV
      BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQBDZhhiEmqF
      FvhJ0fow6W1up9LKRZnsagZJwEC0/2a+xiz23OEiC4SI2YEXSAgrmGHTqGFMbKYV
      yMB0HZUy8EG87KYPQHXd6HAZtM3s6seefnJzeCHUqfEcXA4pUym2MFnqUTNH/vkJ
      b3rwmmMTHCCeNLQVroTanBD5bgrOTBwWz5NjiNwfqCmWGafVHmn+RUzXDaiuKPgk
      puEef1HJgfGW21RENz6Lw0JYedDqxetTq7bl3ce3gXi1lBDNVHSVRWwb+/n6MWn/
      hdL3qapcgXJNfNF100YHPiNbMf/MHFgLGaRThYSZsiW79qDKsCMyAYn+he6v/ERD
      zZjKfypTAU1w
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2025-06-28T18:07:23Z"
    name: kube-root-ca.crt
    namespace: kube-system
    resourceVersion: "376"
    uid: a5c03b7e-be3b-4b23-ae05-f247a9176971
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDBTCCAe2gAwIBAgIIEsMui+0zA50wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczAeFw0yNTA2MjgxODAxNTNaFw0zNTA2MjYxODA2NTNaMBUx
      EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQDdyYNAsCSzsr2TGMR4UezwTn3Cwm7UM0w/CL+R+LU80iiuu3+V6uSye787
      F9Gktdvdddqr5iGKvmh0IVuJDhfFgW0oYpbDMd1TPGBLMkVIrQg6/yap8Bj30Xy0
      BjiIrzbOhV4LgDqF7D6tq2URZ7/k6y3fayCbVfK9ZEoWMlORJZiYZwYECst9+CDy
      YXGWLDzJVeRaMWNPhQjYHuTGBy3B+tRTrZ0cCQkYZGnFw7wYqnbGLJ+FBlYyKrTx
      fH3GgXa05AH6uQ3LdNg7KOdvE+ch7nVeb3U/0YXiN+qc0V8Uu6IuPR/OtnhWXLpo
      ypGJ/lnoEXN8iuQ32T71IshOsh/hAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBS8OSscYEq/bIXm25P+Szqv4urqdjAV
      BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQBDZhhiEmqF
      FvhJ0fow6W1up9LKRZnsagZJwEC0/2a+xiz23OEiC4SI2YEXSAgrmGHTqGFMbKYV
      yMB0HZUy8EG87KYPQHXd6HAZtM3s6seefnJzeCHUqfEcXA4pUym2MFnqUTNH/vkJ
      b3rwmmMTHCCeNLQVroTanBD5bgrOTBwWz5NjiNwfqCmWGafVHmn+RUzXDaiuKPgk
      puEef1HJgfGW21RENz6Lw0JYedDqxetTq7bl3ce3gXi1lBDNVHSVRWwb+/n6MWn/
      hdL3qapcgXJNfNF100YHPiNbMf/MHFgLGaRThYSZsiW79qDKsCMyAYn+he6v/ERD
      zZjKfypTAU1w
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2025-06-29T18:39:06Z"
    name: kube-root-ca.crt
    namespace: nginx-hello-friend
    resourceVersion: "246413"
    uid: ab92551a-d8a6-47d0-ab6e-fb86fe77a096
kind: List
metadata:
  resourceVersion: ""
apiVersion: v1
items:
- apiVersion: v1
  data:
    ca: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJkakNDQVJ5Z0F3SUJBZ0lSQU5XYU1XU3dpYXo4VUJnWjF6MWNMRm93Q2dZSUtvWkl6ajBFQXdJd0R6RU4KTUFzR0ExVUVDaE1FYm1sc01UQWdGdzB5TlRBMk1qZ3hPREUxTWpsYUdBOHlNVEkxTURZd05ERTRNVFV5T1ZvdwpEekVOTUFzR0ExVUVDaE1FYm1sc01UQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJKYTNEVS94CklWRVMyeml5WVpudStKb1QzeFUvQlVFbitSVHlSOUlLZlA2bXNRcnRCZ0lvRlA0ZE9RNkpZL0tYdFM1ZnhsUWUKZ0NBcTN0bSt6NUVaSkZDalZ6QlZNQTRHQTFVZER3RUIvd1FFQXdJQ0JEQVRCZ05WSFNVRUREQUtCZ2dyQmdFRgpCUWNEQVRBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRcVFoVThMbktzQWcxSWhkYlVMWm51ClN1QmxtakFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUE4akZOMHBOb2Fpa05mejFEZkx6eEVnWnF4NDVSM3RKTmcKZlgyQ0doeENEd0loQUtsTk5rUzgvREJVd0UxM1hiN1JxQTNneE9wcFBkNWtxZVl2bjBPUFZHWDEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    cert: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJ1akNDQVdDZ0F3SUJBZ0lRUmh6b2xqbHMwT295M2pBV0Z1dWZpVEFLQmdncWhrak9QUVFEQWpBUE1RMHcKQ3dZRFZRUUtFd1J1YVd3eE1DQVhEVEkxTURZeU9ERTRNVFV5T1ZvWUR6SXhNalV3TmpBME1UZ3hOVEk1V2pBUApNUTB3Q3dZRFZRUUtFd1J1YVd3eU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRSswcVV5SE1CCnVuNUxMblloa2lhayt0U1p3cXJ5RkdSVnBTZy92YjhNRXdjOVZ2N2RHcU5qT1VMSHM5UGsySjNSWTBIYnBKMXgKQ1hwcENDanc3aHBSMHFPQm16Q0JtREFPQmdOVkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJS3dZQgpCUVVIQXdFd0RBWURWUjBUQVFIL0JBSXdBREJqQmdOVkhSRUVYREJhZ2lKcGJtZHlaWE56TFc1bmFXNTRMV052CmJuUnliMnhzWlhJdFlXUnRhWE56YVc5dWdqUnBibWR5WlhOekxXNW5hVzU0TFdOdmJuUnliMnhzWlhJdFlXUnQKYVhOemFXOXVMbWx1WjNKbGMzTXRibWRwYm5ndWMzWmpNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJUURnLzgzRwo0Y1ZmRU5oaGdGMG9HV1BseXQ1c2dxQXhnZW9BM0lWVG5jNW4rQUlnUVAxY1VPUyttRkhBNFFQZHBiT045OFZICnArMjJpbDRHZDY5QStVUC8zN289Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUJ3SDEwY0JCa2FpblZlQjQyZHVyS21Nc2Z5L0YyeXU4dlNvK3MwQWhSbWVvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFKzBxVXlITUJ1bjVMTG5ZaGtpYWsrdFNad3FyeUZHUlZwU2cvdmI4TUV3YzlWdjdkR3FOagpPVUxIczlQazJKM1JZMEhicEoxeENYcHBDQ2p3N2hwUjBnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
  kind: Secret
  metadata:
    creationTimestamp: "2025-06-28T18:20:29Z"
    name: ingress-nginx-admission
    namespace: ingress-nginx
    resourceVersion: "2821"
    uid: a7582305-555c-41c9-aa5a-e36c2a5df4e8
  type: Opaque
- apiVersion: v1
  data:
    release: SDRzSUFBQUFBQUFDLyt6OVdaUGF5Tll2RG4rVkNyOFg1K0xaN3BaRVVkczQ0cmxBRkpxS2tvMG9OT1M3VDV6UWdKRWdKYlJMWWhBbnpuZi9SNmJtQ2NSUWR2ZCtmTkhSTGhDcEhOWmF1YWJmV3YvM2s2ZTdpMDlmUHpuZThuMFJCSis5cGVNZFB2M2prK1A5Mkh6NituOC8vWERlZy9EL1dBc2ZicUtGOWVucko0cWcrcCtKcDgvVWx6Znl5MWVLK0VvOS9kSC9RdlI3QStMcENYejZ4eWVvWC9nRGF3RVhJWDRVL3hHWTc0NGZPaHZ2MDlkUHZCZUVPb1FQNXNiMTBVT2YvdkVwQ1BWd0czejYraWw3eFQ4K2VadHdnVDU2c3hjUHBZVThtQnN2Zk45QXVIaC9zUFhnd1Znc3ZBY25IblJoL2ZFdmp3OGZYRDE2Q1BYMTRrRi8rTEhZUDdpT3R3MFh3Y09QemZ0RGFDOGU0RWEzSGd3ZDZwNjVlSC9ndnorRW13ZGo4YUR2ZEFmcUJsejg4UzlQMjJ3ZlROMTcyT3VoYWVNZnhaTjhNS0tIOTYzbk9kN3k0WCt0dDhiQ0RPSERjaEUrQkl2M25XTXVIajUvUnJzZitMcFpuWGZwcjgrRlZYeit2Tm1HL2paODJEc1dHZ0MvODMvOXkvdVhOL1FlRmdjZDdkTURILy82SWJSMXRMNzFJbmpZQm91SHpRODh1WHkwci8veUhoNTAzNUVYNzRHejhiNCtlSXR3djNsZk85N3lqL1dYNEE5bjgrZU9STStzSGMvNm1nNkxQbkFYb1c3cG9ZNUhlSGhBeS9pYXZqNy9DSy9zNjhPUHpRWjlGdmdMTTNrK1dkNEk2a0VnNHQvaWhjWmZ2bS9oSWtnZWZIajQvR0J2Z3ZEcnczNi8veU41d1IvbXhrMi9mbml3dzlEL212LzU4T0Ryb1IyVVBrR2pvRS9mSW4veDllSDcrK0tIY3loLy8vQmc2T1o2NFZsZnE1OC9wS2ZWOEUxbDRiUDR3YWJuL00xNzJEakF3NE8zZFkzRis5ZUhMMFQxZXpUbHJ3OS94aC8vL3g3ZWJDZDRDQlltNG8wSEozalllREI2ZUYvOGUrdThMNndINThmRDIyU0dQbzhKZE9FaDZyUXlPaTRjM3NORENLc2JYTnl3eisyYkhTek05MFVvRmxmOU9ZUUJvajgrbTBETHEvL3hvRC9NOE84eENlb09aZ3hNa1l2MzBQbmhtSHE0ZU5BOTYyRzlpQjdjYlJBKzZEREFpL0hmTnp2SFdxRFRxWkpza1VEajBjL1JaenpoWmhvdC9DYUV3Ui9tZS9qMTRWOWJndWlaaGg0c25oNGZGcDY1c1JZV25qTCtZcEUvdlY1RUxVK3ZGMUgrY0lpcEVNbURkMjhSTGpDYjRTbDkrbi8vK0dUYStudUlCRys2QXZUdkZobHRiL0RIaUFHQ3IzLyt1WFJDZTJ1Zzgvb3pIL3pQNm8rQ3pmYmRSTkx5LzMvUkQvLzNQejd0NGkzLzlQWFQ0eDhrOVVldlFWckhZcWNncmhBSnZHUmpQbXdEZE9RaXk0dnFneDQ4NkEvdkN6UXFQdUJEaE0rK0pHOC8vZVBUZWhIdE4rOFdubkF5SlNUeDAwbTV1b05KYWZHT25zaTJ5dlIxVHc4M24vN2ZQN0tQV04xY2x6NEl3dmVOdDF3ZGk1K0Yrb2FrZW8vOXA2ZW5YcS8zNmYvOTczOThja3k4dUhTenRqNmE0Ujk3WisyNEM4dlIvOWk4TC85RWYvbm9yei9OamV0dXZPRFAwTjY2eHAvbW4yYi9UeEhOOWYvQXpYTHpSN0JiL3RrbkNQL3d1ZnpoSDc2My9QU1BUemxkZi9yNmFVZmhUL3o4RXpMZGR0M3pOcUdPZGoxQTVLRWo3dEZOZklqTzVrL1QxcjBsdmc4L1A4eDlDekZWY2pMeFd4K1NneXljMCtkZFBQYS9QRFI2ZVRqL2ZmRytnQXM5UVB2elE0ZkJBdEVwSXBSOFpqRngvemY1QjBYK1FYd20wQU53WTY0L2ZmVzJFUDdqVTdod2ZhampPem8vb3V6RFA4VnZiK1BaSCtFaFJCU0ZTZjZUek5xUVorRVc5QVJvOWw1RHc3Vjh3MXN1Tldxd3RUaGhaN0FIYURyMFJsTmZsNW9yUThPaGZjTVRDVTA1QkVDWmJrZEwvNStMaUZqcWloYi9obVY4dzN0ZDh1ditEckR5MU9nSkJPOE10N0xMQkpZaUh5ZXV1RE04S1RLb1F3QlVmbXRTY21TNWNBVm1mV0toMHBEbnlNRm9iVUZyUkJNNk8xOXFLcjAzV0xqU1ZNazNxTWVsTEF1dlBDdjBlVTRnRGJmdkc2NjV0RmdibXRRY3ZUODBGR1lMdU5lbjRyeGUyUDdPR2cwM1FDSDNGcmRlVGlDd0RVNkdadFJmR1ZTZk1OMUJZTEJ5TlBGRWFIckExNmo1MW5BSGF5RFRPOU9UamhQWEppeHU2TC9NNk1HUDZXYkpzL0tqeVE0aWEwVHpNaU5OVmFML1hSckxQK2Jqd1V4K0p2KzVpRHF0ZDJ0UUVweWpjYmpYcmM1SmhEbEM0OGZ6QnNyaENEcTlqMWkvc0NHcHVmTEtZdmRMUU1rRXoyWHJXRTVtNUZaVFNHajJhQnY5dmVnRlMxM3Byd3hPWG9QWjBOR1Z2bWU2OHRHTXlDMmc0SFl4NmhlZmQvalI0L0tIU25UNVhYa3ZYVUFhN0FHUGhjNGZuU3MvSWtLakp4TW1KeE04Nng4TnFyL1hWR256ZlNiOGMrS0plNkM4YnZFNk9kRjRaWWppR1F4NFovMnk2QVVoejhwYlVOaW4rNTB2Zlh5WnJkRmFYL2dSRFJjYyttNjZuREhTZk02SVA5N1dnN0VrRDZadnBERC9yb2IvNUVkOVJWTU9KRkJmdDJWZTZSK0JLbEM2SXNLSm0vT0FHZlUzRmlmdHphamJHYy9Kd2JjM1FtSlVrdjQraDlPQk1MTGZMVVdBV2s4S2VCYnpSL1lldks4dUV3SlYzR3ZvYnk3OEorSnBqVHFRZ0owdmViZkczOXZTOCtuNWRQaGRaYTJ1cFJ3Q1BOYU1YMDRjZXZCak5nd255b0MwT0pxMFJ2Uy9UV3F3TlZtRzBKOEpaeEgxanlZcnJ5WmV2Ty9La2JHS2UvUmp4dnNqTC96blpFWkR3NTNXemlJNUEySCtURGdOKzRINXlZeE92dCszV0RrMHlXQ3Z6dnBIaTJVSUM1MmZJcTB4TFZOeU1pZG1EVGkwYmhIUm5UTmE0dk5aNmV5WEpRK0JiMUtRNEZrc0U1NG0wWmYxSXVISG1Vd1B2am5TUDJPYUtaNmZOT0E1YWNlenpFcWpFTS9RZmFNblJ6ekw3RTMyNEdzVVEraktZTXR6d05kbThmbFBIQjZ2WGFQc0hUOFNGRjBWZld0RXh6UjAzT3dta2ZUUGJEODQ0a25nd2dhNnVmeTk4K2pSeWM2QUU5SGQ0UElzbG1HMnJ2U1AvRWg0TlNobVBYV1pRRlA2SzZEeVRpZGU4S1MreWM3eG1jN1U2ZEpRbUQ3UFNiYU81UGFNZG9GcUxnMEZiaTBWblNIdEdqMGV5M1dlUGV3MFpiclU4dmN0Wi9Kd2FiRmZscHFMN2dkZzY4ckIxdHdEbkN4OVlQVFFQY0JzZWM2eUxWYmM4SnkwQVRNNlBldWw1cTJYcGlkdkRVVGIwZERUZTdJREZKRXdSclFIMU9reWw4K0lqdnEyb2NoSGsyVldZRWIvY3hIUnZ1R0tnYVZJa0I4SnZ1RmFFVkRGNDBUcGU3clNmNXk0eGVkVGZ1anl1L0lkQVR3NU1GZzBWaTUvSnpOeVo2blMzbEtuUzR1Q2F6dy9OVjZqc0MvSkV4ODROSlo3bWdLM1pqUjBwdFNCTkhzU05OZHd5anZEVHZMUjR1QStsazAraC9ZbFBvc0szVER5N0cxRU80c1pIVmxLZjR2dUJMemZLcUliY1djb3BHMjQwdkhic2lUZnBtK0U5T050ellqU1d5TWY3dzFLT3Q1TnBvMkkwS1RrQUo5eGo4ZjZ4TVRGOTJWa3VES0JhRlpYdnV6d2I5L0lqbWVjblV2UU5oN2lGWXRsdGhvMUg2Qzdjd0lGYUxDeWJWTHo3UnVXbDRnMkRyYkpEYmVZQmxWaEN6RHQ5MzBqR3F3TWl0d2JWQjhhM25SUTVxbk84aTBFcW1RRGxpRzBXWHluSS9uSzQ3UEk5WVg0VEVqWDZBazlUUlhXOTl0M2ZyMGc2ZThTTS9nMm5aUE1qeG0vL1BZOGZIeDkzankrRGsvSzA4UHJ5dHkramg3M2s5WDRDZjltUkJOR2hQUVJFYjEzdVZBR3BPblF0c25SZ2E2SXRzWENuZUVVNUZaeWQ0eld6QmJSbmFhUWU0T2RMMmVaem9KMFM0YmdXZExXS2ZuSWN6TGlteDF3RXAyenVOK3J6VXM4N25DdHE2THlPaHMrZlovUlI2Q1FGRkNGWjNST21pcEFmc1QvMS9lM01aS0Z6enJMUk5hb1Q1c2NyUUJWT0NKZVNlNHkyMlJoOXRrM2gwWm4zak42d2p2aW5Za2JQQ2JuVDcxaW5TRDBEWGY2eEkrelBVZGo1T2Y2dG5uaFI4TWxIOHVLcDhKYUM1OG44dWh0c3dUdVlEZHloa3QrUkdlNkUxREhTNEdGUjNrMVhnS1hDWkFlSGM4Vi9aNUJlaElSNjk3OW1JOUgrUGVZWjAyM0R5MFc2Ymh3TjZHeU9TSmFzYzNlNnhPbW5mYTdJZU90YWZ4OC9sNnVwZ05ndlNGOWY2d0hRcGNmU2I1SmFnZHNNOFRycW93cGZrTjAvODJoVCtya21TNUxpSUdtaXNlNUt4L1JQUm5yaVFtdlRvdnZUblhRK0RQVGt3T2d2ajdGYzBEL0VVdWRIUnl0NTgzUzZsbTlpWnVkQzlxRE1IOXV1TVI2LzNOeWp1bC9IRzFickYzWTcreS9NUGx1am15bGJ3NDlOVjNaMWRYbFMrVTV0QmVPcG9qdlFPbXZHOGFKNTUzZWRXK2JsNmJ2MFgreFhOd3NnV3JiaGtvSFFNN3VpTmJmWUpueTNENG1QNkszbGtJNlFPV2YrT2ZsdnJnZitSaElwbTJXazMweTk0aWU2eXc4SXR0RzY4VzJvSzYrTGcycUg2RDdCNmdNcWFzQ0JDTjgvODNmbUZmOGZhb25BS1dQZFFRd0t1Z1dKYjVDK3k0RjVqR2Y5MlJHYjR5ZVNCUS9pOC9BNmxsUkh5NVlKalRaQThUME5DM3NNWjZqQUsxeGpTOURpejBjUjB0ZktNN3h6TndDbmgwdjU1UzhNbDFrTjJXNldHYjc4aXc2RThrSExyYVQwVDJONlBNZHFPdWxvY3BIYTBUYkJpZnVlRmFBUEVkSFJnLzRnSlVSWFRUSnBMTHNZWksxWUpsTlFvdGwxcG9xMlNsTjFlaGpSaElHOTNwUy9wUmtGOXJ6cUw4eXZla1QvM3h3TkZXRTRtcUs5bVNGOUhrd29sZEFGWWp2eWZ2US9rM2NFQzdlTnN2dnJJRHVVMG9jSVZraElqdGl6YlBvdTBlMExpTGhrYnFzNmttQnVkLzhkOGtmbFRsSi9vKzlnUDdpUGZnajlHSHVKMW4wZ3QyTFExTzZRanloODdWR3RLc3JCNGoxcERjeXRGU1IwQlJ4ZzliNTRnd1NHKy9MdjBkcnBQZmc4OEIzU3lKUENuZU5iWnZlZER0eU5qc2s2Mkw1SWtHQTd0a1Q5am52RE1QeTh3eHBjTlBsWkMxdU5GVWdKbXRNZTBWZEQvL3VyUWVnNlFrK3VzdC9qR2dDNmNKYU5LUmVJL29MejBtUnJwQnZsZ0tRVEZueUR1SHdJN0pnci9iWDhkK2JGN3dmUy8vWmRHWGJ5dGVScnM5R3N0dHk1Y2lrME4xTTIyWkVreWFGemtmb0p6cjVLcjRuNlVCVEJHaU1IbC95ZlNPV2dKVmRYZW0zNmN0NGphVTk0T2hJVi9vRWNJYU9vTDZHZ3ZwYXZJdnhQVkQ0TzZOM250c3ZUVmZlRzFobkh6b3ZFYi9rNFJjSGZXNWhIOVByVWx5OXhudmx3bkRlazEzZ3drZCt4SWZsTTBCM1F2dzMxaGVpemN1MEo4Q1lIOGQ0UFpvcUI0aHVrTTI4bU5FSFMyRUNYUUUrUVBhTlN1K1RlM3c3Z2haRVoyRXAvWlNmQ2Y1Wk8vSXNYdmNSOGJGR01TUzZxMDFxZ1BaN1VxVHhaSndsY0NFMFdPbklzMHdFWmtoWElwRit1TVkySVNkdGtPeDV5YzlqL0FaZjhmbkZlanoyeC9pVDVlYmZreDQ1U0hTck5WQ0FiN2pOZW1EWmJpRkxQcG9DSGVZK2cva0E2VkNSam5YdC9QbXp6MTUrTmxpdm1hanBPb2JybUU2eExvZldaRnZLZ1dpZ2wweDNPVFhmcXU5VFlGUGVxK3I4aFRtTitqT2dIQ0NTZHltdlhzNlB5TjQ3eXdPMTk2VHp1NTcvei8yZHlRZG13U1d5QU45VEpYczZrNEdtaSt3ejVnaG1qeTlUZE40OTY4aXoyVjdqZTA1WHAraitpSGlXSkExTzhpdTIrUnFvZEdEMFlBaVVQbUVpR3c3YndDU1NuL2dPd2VmS3ZWNHNaM00vS0ZtU1RURXZEN2Z6Yk80eHphUisxcXJjalQrWHYyT1o2Q0w3UGQ1dnhPT1l0Mk9hOWcxWkpJRUwvTVZvNkV4bWZJRm1ZMzBZLzcxTTc1YVNIcHZUb0N0SHNRNGlSN29xOVJPZEFTNjRpKzZaaWo4MzB6dWdDZk94cC9pZDhxTTFLczNWQnlkOC9zVjVJcjNHVWdYZjR1QXplaDlRYmFLNDF4WTdBSnBDQmlmc2lNelhBVlRoRFNnaWFicVFXTXl6TlpmM2tCTlQza1Y3VDV0RWYyZEFZV2YwcHVmdEZZWHh3S3hmL1IyMlVSQWZUVlZSUmpyMWVYdUR0QUUxM3haL2cyMFlUeUNOTlhPVWVzTE9Vb2NYenNlS2pKNjh4K080VEdDd2c5NmNFM3pMaFFGUUxDaXA0a3BURHJHdHZOcGdmejdTTlZ0OVFTNE1OY1dDazNOak9lZlhxVkYyWkZBRElsN2plZnJJOW9lU1Y4aGVNaGs2TWlqZ0c0bi9zT0h6ZUs4NGFhY29UR2lNcmh4N1JDTmJjSTFrQ1AvTUw4dDNPL2FGclRTVnRqVVhCcm9xK2FuTkJ6aGhsOWh3SVQ5bVh0K3dyc3lzUWZaWm41R1p3V2cyNzQ5VlVtVG1FQWhUQXRsUGROUDkySElPNHNaMEJ6c3J0VHU1Mi9jUno0MFJ3WndjME5LWUZONldtd2JiTzN2bWVjWUkzOS9JYVRadkxPOWp1b1dhSW4wMzNFTi9qdVk0UnUrUWp3dFZKQURXbDd2Uk1WQ1k5UnV5NTJURVZ4S0w5R3V6QjQ4V0s0Y0Yyc25sWUt0Y2pPTWpKaXV2a0g2bG9mc0F2V1BhWFpkSjlxNnV4MlRuMEg3dlp2VHVETk54Mm1RUUh0ZEVjdCtUWEg3RVF6UGlsK21aMSs1VzdvbzF6K2kxcmxqUTdFMHYwSy9qOTBzczlJQXFsdlZzN0hmcHIzUXVsbjFWbVErUzMwelRQV2hjcHpCTWRKTmtidEp6dzNnWkRUYnBjTWs4MHJVVmY3YzNYYmkxV0czSnI0Zkpma28rb0pBZDNLeXZuL3Y3S24yK0hEL0hPc0JrNmF0Z2x1aGNGRU1nTzhrYVlkMEw2eWRtUkR0QUVXMUxGU0hQaVR1a284MUt2dUY0SEo1Rjd6aXN6WWkyVFhlK05GZ1k2aXEybFFrRCt6YmhrUi9aem1JVzYxZlN1UDhXNjE1d0M2S1lSbDVtRjlsYkorSVRiWFJNNEwxL09lTTdyc1E2L0JOeUlsNzdQZXd5YXJBMWUwajNFZ2wwbHBiUzkwMVZob2pHZ0NMaTJNWnNQdDJPb0h3RTJONFNiY05CZERXZ3NPN1BNdHVDZm9yT1kyYzZOSG9HTG1LZnRHK05hS1Q3ci9BZHVZWmpUSzg0TnJKZVdoU3p0VVkwcFN2anBkYSszdEx2dFdGMzJYVnFuTkxlakNRMERsUDYvbmt6cU1velpNTUFWbzU0WjdnNWt3TlFpUWV2U3pZWHRrT3c3NjR2U0tPcTdkVXdsNDU3VTZmQjZWSW9uMlVIUFZwRWZMbEs4MDZ3LzdIb2orTm9Vbk1QdmtrdHd6eEcrUGd5V2d1SmZnMmc0Y1YrU1l1MWZUT2llN3B5Q0hoTzlBMlZSdklCMit0NHJPZEQwYmI0cjhueFVMN3pzVzB6LzY4NGRrc1c0NWdKL3c5aVdwcjZlUTRBYTBHa1QydFlEankrM0VpNytiaGxtbldNSHRhRnp0SHUzbEtFUUZmRnpUelBkOEc1SHJuL1NWNWViWXQ0NlZuWWIrazg1L2k4K0RLOXNiS2J2WDhlMjd6ZlZsVTU5UVhMS2Q2WmJ1Ymp3VmdsK3ZUYlhINmJqNWxuYWJaMitKRjlTK3pXTDlLbWtPWGx5Rk8wRjVqWENyNDdBZjBiWnMvVWZCQ1g3L0Y4V2RWUitKRjBMTy9aZFg0L2d5SkRST3NHeXpoQU9Sd3ZPTXZZMzhlOXB1L1lBT1VRVGp4eE02Rml2MTVzUDUyTm1hYyt3RzJxRjUyTFUrWnhZT0UxbjhQanNxTGJOTWJ2RXJ0cWI0NzZEZjVrdE44aTR2MVUxMjBaWTc4MFZYbG5GYzhsdHkzYVlzRjc3TTlWQm02eUx3VEFzUVNrUDV6MEQ1K2VNMFhhaHN0NFFKbUdtcmRPNTUzN2ltQ2VRMWJabnlJOWhvWXkyTDRsTkpBODEyYXpsNTZ0NnJLbjd1dDVJWDUvQmIwZGszdG5aNjRQdHViS0FkWUoxVk43azhSdHVzYSswMXlQOWpOTWNpYjdPQTdTbWcvUXdjK2UrOUhtUzRQUzB2aFB5UStVMzA4NFpyNnpFTjlqbjY5OHZNUUd5c2FaTThoK0pBMVArbGFQUFpScG92NmI2VlpMOWVaNFRXa2N0ZWhIdTF5dnlPM2xUSjVORlhHRjdpY3I1UUd1eWVacWZMK1QvNXUvZk95ejlxaUliRnVzN3hmbFBiNHJ1RFdTQ2JiQlFsZFg1RFhQTW10RGdjY2tidElEaXJBeHFNSDczejAyb0NsU3FLc2lsb015SlRzNk85anB2ZGRmWlV2WWdDVjlzNGRrZGw5Tjl6ajExZDQxOXRPa3Q4M293dnNmbDFhNkh4R043dStWUHFML2JWRDM0K08ydlVjNnJrWmR4K2NkOXpOWlR5TWZyVktaaG5rbHkwc3AyZ1RuZEs4Q3IwQUxhcTY5TTZqd1dNMDlmcG1kOEVWZnZEZlRRazVJUFE2VDVxOFUrWngzczM4N2Q5N0RYeU9MMHZ5R0VaMmNJZjRlMDJ5OE40OHZNckoxTUErSmNYeFluV0plaXVQRUdFdXcwbFNjZDNVMEtCTHk0MUlPWFJwSFJ2TUlBUGU2eERsVzdNRTNGRWdBWllyek9tSTdhN2pSdkhXU015RjltOGMrRWh3ek1uczAxS0wxSlRHUHRqTkkxaW0vQVVXTWdDcTlHTlI5L1NEZDVPTlZNcTF4N3NuKzNpTUdkUWQ2b21NYmwvVjMydC9lVjlZaWs3eDRqZG5aRW1pdEZiMm15WWZweU1mSlRENTI4TDIwbmY4cDNha1NhN2hvN3ZlL0t6djRWUXZmWi9sdGYvdThpWFJOWThIV3FCRHgyRS9UaTVyZS9RR3lvVEgzcWZFc0M5Z2xMYnZuTUsraWM3dUFEMU5aSkkzU3NmUDhkcGxPOWFtM091OVZZbXJkeHBtNDZWcmI5WUNYYXB6SVpWWTZoZmpoOGpNczZ6UmQ1NWprZlRURlZCcjFMeUg3OTBUSjZNTTVSei9kZEthenVTUGpiQjVzTnZhOWN4eXk5VTJ6c3ppYlQzQXF0K21hOFlxMFJ4Z2t0QTFsZjg4eEw4cDVhRHJQU3I3Q040UHF6L0o0ZnB5eklLc2lORmVwYitQazNNdDVDNlI4QkNwZnpLSGdUSGRBbXM5WGpIVkZEa1RIOFcyRFBld3NrbzUwRmNlMlBUQ1hqeHJGQkNrdXRjMU9Pcm1mZDhsdmFPRDlOR2ZBRXlIaWZVT2xwNlk3d1BtcVNJNWo3Qk9MNU9vd2F2TERhUlN6MXhUQk4xaEk2SXFjNEhla3lPZ05jYjdEWkViVGIrUDlDOUlyd1hpd05UaUk2VUZDKzZ5S2ZiTW5RZVB0c3ZPN1greGZmclE0d2VaWmNnYzRuSmZmS2crQWFoT215NGdHSlpFR2kzVXNMTHNuaWIyZTV2R1VNQUJ4ZmtSUFY2VU5uODAveFhERys1NzZyOUU5Z25OTGU2SnZzWU5vZ1o2THNhTVJVT21kU1VIQzZDRTlnc1FZb1F3UG1qNmpXTDdaaytMZnpRWjRMbWsrd1E4Vlk1WFNNM3ZDZSsxSk5vaVMzMWZpNHo5VWNvaWZ5V0xoNlhNRkxFT0cyWnJpY3k3UTgxcFhSYXdub2pzMngxc01RMzQwOEEwWEVpcVY3UGUwa0VPQzVFN3hXVTdjNUw4alY0VXhTTFBIN3d4MnNOS1UvVTV6NFhaQ3dhMnVTajhNWmJDMmxBT2k1VTArcDhLYzYxaVJZcTdHbVp5MWRJeUc3eEw1VS9CbG41VzU1ZnloOG55eS9JM3l2aUtkWldlcHdnclp2TW56eGM5cWZHOW0yQlQ1V09GbG9qeCtjWS9BenVEa0VNeEpyQWZrZUFZaXk5OVA5OW5jWnhpZkVPdGVETkw5bDAvOGFCQ21mSUxPR28xVDU4SC9ic3VwOS9WMzNhMm4xSis3bnZlYUt0aUdtb2FLTm9oVWt1L0lnc3BYY3Vua1lqaUdoYmU2ZmxMWXhWVHBiNDJlRkY4TFNGeXhjSjFDbnVJdHhmQkxhTGlNWTdEelVDcys3NUNVcGh4OHdNYVF5TzhLRW5jaWJBNXRuTDhhQ2xDUVpMMUVtS3ZKWktZbVQ5Uk1UUjRJSXp1SFZNcmlkRG9YbVJjc0xzNkYwSnF1ampwc3YzVXRHTlp3b3RRQkp6c0dDNDg2azhOSzgvVjFLcEdRN0xtODdwbzZXUHp0Z3BPUWFXY2JvOG80OFhsbTRkUGlYc1lzTDRjbWU4QnVxdzdwRmZVd3JJeFpwaEphakZYdGs2bCtCZmd0TmhOVVlhc3ArMGFheVBaMlJHWnVRVnlXZ0pPZ29kSkJIRzQ1SDY2dW4xRVNtazdPZnFKQUpBNGp3MldDOW5CZGdWYXpGSS9IVUZlbWc4dkxScFRTTnJJOW5HQTRkbW51WVFJekhGVFVqR3I2WkhKKzRyUEJNa2VURktCSkRValRGV0Y1TDRTWUwyZDBtMnAvZXR3bzM0UENHbGY0dXlONUVmeXdpZWV5OWJ2QUJ4UnBtN2pNU05GVTQ5Y3ZUQTYzblpNMFBTWG1QbjhtRFJ1NDBIdFRtUDFiQ2ZKTERpYTlPNVNDYU41SFF1c044eldwMHNvczBERGVNNnJ2Nm9vVmF1cHdVQTNUTmN1NkUybk1IaHEvbjQ0cGFpcGRTdFAvb1JLN0RqVGFVT2FDUk90b0xVbFNtQThKdU9KNjVmWEhyaGVOL3lIclJldm9zdDZxVEZzWlBScE9YSG1yS1VJQWxBSTlKK1VMU2xDT3Q5dnAycVRFbmNuT3k3RDA4L2ZZeG5BSHhLbFNGaG8xMkJmdnBGTmhwYVk1Rk5NWVR1N0JqTXhURmxibnlnbWRmMC9ibVduWTVkSzYzdGhFOGFSdkJpWEJXWFlmSFFUelZIbzlPemhhNHo2ME9HdG51a0ZoblFKTVNnM2dNaTNGZTJXaXdQMUVTVXV1bkpIblhqTE9HSmVORVpEcWplLzRNZHlmUE9QTHd5Wk5Pa05CMSt0N0V6VjFrUWVEYjk3SkZQZlcwQjR1ajNWKy9GQkR1Z1VPbytCdzJwazdyeTBzV29FSmQzaXZUc245TStXTzJ0YUc0Y2VuNks5OS9xUzlZSkYrTDcwaUdXbDRJcHhSY3I4dzMxQlRiWFRQcmlmS0Fla3NXNU9hZDVscjlyczNGcTZBMGorQ2VRZ1hWYmRrVjVnS0s5c0dKMjJtbEEwMUt1U05ubGc4eXcxUW1NQmk3YWVKWXUvTTN2VE1tZGxRVXc2RVBoWTNRQkhmWjRpUFJxZm1SVytOM25UNXdzcUhFK3RONS9Dc3MvSktKN0ZldXVTZFFUWTMzbGtYOUl0a0RpTnloWitQeUxnODErazliWHpIZGVkZTBha0lvWituUnJYb1ZoSHBMSklTWjk5VktiS1UrUlYzVkN5RHMvSWdwT1ZickwyelZLbW0yMWtVVGdzb3pnTzdnb3llVEV5VVdIKzdlaDR1Q1MxTzhMWGVhN01kbUh3MlViTG56dEJVMjNpWDAzcjZlNWtkN0EzcXNBTTlTRnNVRXdGWlFQdUV3KzA1SFNWMy9Zd2tqQjY5TTlpQnQ1aVJObjUrUmtab3I5RCtYYjlQa205U1dEYS9BblJ2cUVLZU51NFU3V1o0VE9ZUnhNL3hSZnRrWUhFQ0NhN2FpeXlOZlM2UDk4VjFaN2JMUkpVSTQwd3B3S1p4bXZiQ2RKa3RvT1pMZ1VXeWFyOFV1SGhmY1Byd2lSVDVCU2RGMnB5SlFGSmFKVTc1Ly9KdmZvekxnZTB0WENJQ0hua3VwZmZwMGtybXlyT0RLUDU4bVpXRjBkVFg1UHY1c2hpR1M4dkl2SXdrS3JHaHZ2QWNReHE5R0twdHNQTDJaWmE0bW1QWmlQWmxyYWN5M2F1NkMrdlB4RElvRy84a0xLb3AxTnpzbHRJdDF3a0NaK045M2k4TWU3TlpCMythaS9md3M2dDcrbkx4L2tla3V6Vi8xWG0vUjJzcVJ3ZmZSOXR2OGYwL1RsSjJDL3hZaGl5ZDkzbDFIUjg5WXlseU5IZGxOL0c5cmZoeElkV0RFNkhCZ3FPdVdGdWswOCtTNXljakRMM2VtYTRFVFFlSGJiTTBMMjFHeDVDd3NValhTNWFBbmJuY3JIaE85QUdWbERiSjArSVNlNm52Vlg5bjd2MXErUkpjTG1TaUZOYWlmTmxacS9HTFRzRXRlTjVrY3gyNWxYSW1iUGUwMzRZU2JYR1pNWWRNOXlSTTkzRGtKR1ZTRXYyOFczcDdReW01cVorWFFZcjMveTE1RjVvejRwdHdnczhwaDRMdzdIZzVKY2JMYVZsL1hGcXFtS2JBNFBuVzlyVllnby9MOU1FWFRhVjlPUzNyc2Rvc01kMk15RkJUK2phZzhCMittL1MwdzhoTlMxZVZ4NzM3bm1Nb0pvblAvS1AydVZUSzUwN3pCQncrbnlKazRPSzBMalRXbThKc05jWEM5aHJpTFh6T28vN2FVb1UwTGU5TEtSVnhOVDErZXg3dTlXYzZmT1ZlblNva2dSL1I2RjBrVUlVWlVMU2twRlV4SEhadVArdis0NG1LYUZVTFRRcDZoaXV2SjhnMjZjblFYR1locDUyeFR2WjNKS3kwV1Q5TERadlU5OWRCYzlKVjhYbjZ0bG5HZHpnK0oxSnpmYWoxcHVtY2Q2WnIyWVlMbitybHk0WmhROG5qbDhtTUNFZk82ekpQUjJLMi9EaVpxNU9Vak9Qa0k4QmxwWEE1Uk1mb2dRcjBpbjZlem1JWmhHRzRjZW9hNHJONFg1UHYvbEp5SzZiTjVOeHgyZEVpUE8zcDJoS0FvN2lrTHo0UGpScW41M0pNMGhDLzNVWlRPSDBodG91SEZWMGdsWU5zV1E3R3NRRTVhcng3bkt6Y3RKL0ZFSkx5WVVoV2pseG1yOHNGbUE4ZVk0ckxUU2Y4bDVUdDg5K1JmZm5Ob1o5TE5ERDFLMlg3THVHcGJtbk9hZmp2cnlBRE82YXpwaklubDFmMXRJeExmQnRpZmc4Vm5sdmpzOW9XWk83eXg2amtZM3dVajlxbE1yR0RuZEoxcm9tTWdRSUVUcVhVWUllU0ZsZnBkQzJoNHp4Y1hTaE5YU2p6ZHFYdkdOOU5KYm5mVkVxUmxiWW1FZE5pS3Fzbjl5bWZHeGIzS0U5SHVFZTVhN0lJNWRoZVdWNDlDOGZmbzh6NlJDbW1XZmV2TEZ2Y1Axb3VMamQ2dEJUaDM4aXV6VXIrOVFSUFUvcit3bzFqM3BXU2lmWHhpL05aMXRMOS9ydXpiYmJhR0o5OVBUVHRQMDI0RGNMRisvc0dMdjVDUmxxS0dibkhHS1lyMkZxVVkyUmU3bVRZNVhOYlp4akkwc1hHQ1k2bXZHNDFWU1owZGhEcHFwOG9rdjMzYjl4clRTbkpha3REeENUekYwT1JDVTJSYkl1Tkwvd0xCRWZIL1BWVVdMVFVwblZ0YUxERTFxU1d1OWg0NUo5NGpvN0FqTXo2Vmt6aXYwbVR0U0pOa2VDRW8zZG1ieG9tTlpzRFkzVFlHejJSbUtqeUh2UUVHNlQxZEVkQ0Fhc2NPOGdCS3dkQWxlQkVwWGNHQzFlTEdmL0Vzd0lFN2dDOUkxWmlsZGh3eG80aE52NmQyWk5YR2lWRHdNcHJ2RThKcnJWUzQvYTAwcFZpYVRIanR3cjBMaldtbjhyWURESlR3SXVYZ2tWQlFyK0JwbzBpOXJjNGJwWmo5ZGlTUTFXdkNWeXN1VHVaNFJxbWNkNG9WNjdEVzV5VDZjcGVuTWVXbkVWYWJ6bkplU3JtVnBXTUJhNlFGT1JhMmQ2a0FmUk1lZkhTT3JJQW1xNVFNVGlzdUlacU5xYThSOHBnelFIWm1rUFZWU0Fham1jNTN2SzNYUHdMeVVWNWhHZ2F5YnhiakxjTGxXcmJjUHM3aTYxZTBqVVo1bnpEOVVIbUpmbUgvclpVMmpOZFpnMW1pVHhVNE5ic1NiYkI3Z01UQjZoeUdacnduS096Y21ETStrZDlORWhrbndRTlZpYkFETW1hZzYvMTF1aDlEbERBRHI4VHkyaXlnQ004eEw5VFJWS2pSQWdVQ1FKY1R5M0I3cWZyU09xZm5WWnNDbmgvN0FqcCs0WXJJWG0zRkF2MXU5dHErT01jYkhhQWFJUDQ1cFF3dTJIbW5Od1hsZlhZWVg0dHZpcWZiN3NSY0Y1eHoycXlJYnJMREJaazJPWjFCYy9TTXFLZnpKQTFPUGxvc2Nod0dNVDV2UjlFczJaUGRuUlhYbGxjSnRmVE9ielZzSy9EaXcyVHkvRzE0eXBQMVd0YVg2dndWNHlmYTJRKytwZjV2dEREUmR5Tzc2OHQ4YytsMTNSMWN4YlRiM0RvbythU2R2Rzd5NjR6ZCtCOGhPUk5LMXVrMWRuUmV6N1dMWE5memZmRHBmYXRrdEV0ci9VZW1pT2ZWaHpQTk1YVWxYT1NpNE5TeGFDMmQ3RnRGV1V3Q21kbnVQTFdldDZVdE5KQ3VrMXh2aW5DNU5wcUFlbDhxL3VRSTh4TzNJaVZNSFRCRlNnUkJpTkNyUGx5SWcwOENacHI0QnN1UE9xc3ZQN21ESEUzaDBJS2Rickg5YTRsOTVIZUhaRDVqOVU5T0YyZCtKd0d5ZzdXSmNpQVY5aGpwRTJVdit0Y21mYXE5NWJvY0htQzVwUDlybGlaOTlDa3ZoWG81bTQ4TVBwSXEzUFlSYk42Ykh5KzJ2bWxSME90b3BIZVJGdWM0QnU5cEJvMlRvSEtFYnRaWjVUbVo2NE5JNmJ5WW0rNmNKY2dtbkFhMDF1SHpqZE42WlV4UWsyZVdzb2hTTy9Gb2thTHUvUW9qQWRrR3QyVEtkOGUwK3BtRFFqWXh1ZmJ6NnVPdUlycHNvQUc4NHBlQXF4cHB1R1kxTEtzZE9RcHltUTdCS3JnZ1J1cXltUlZnZk0xZWdZN2NEUmxuMzduVitrdjI3ZE1YbXJMSkIzMnFLdlN6dlRXQ1Nxd0JYV1lRRkFLejhUZUVQeTdPQzA4cXp5Y0lSTGpQVXpTV3dsTk1WUGtZYW5hTDNwbUd0TmZFWEZZUkNnMjdXZnpkd21LY3M3SmdjRWtYclczSzhOQ21XV1ZJbUl4RFUwVG5hYmgzVGhkNnFuZWtZaFlwcnBlMDNlVEdZazdCWDFYN3g1U0NPNGZFbmhzVEttZmVDS2w3UnM2VGxVNnduMmZOVmJLckhWN2l0TyswMHBCYVlybXZiMGN4Yk9UdDlacTB6Q1BqTGRyVUlxbXpsTkpDaHhydW9Pd3JYTldVaUdrRUE1cytDK3BQRE5QT2xrVlBPT2xjSG1GeDI4SUs4YklaMG5wVTJWNVc3bFB6M2RVYUUySmoxTUs1YTFWMHozR1VZTzhhcGJETjY4elNVT1QwN0EwcmtaemJFVGsxdVJPSjZUdlhTb3NtVTJkTGNwMzF1SFZxWjlUMHoxYi91NHFPRVB6SEV0bzR0b1puVVFpWCt4eGJiS1Z2UnlPWjBabHZmTDFqZTk4YjZCMVdDd1RXWVg3NG8zcXM1b0NBMHNWY2g3aldpckEvRXdQMGgzMHhMaDd0WmhVd1I2VWVZL0YwSmkzSEVKME0zMm42NHM3bGhmaFJaZllIM2RZdDhVT0FwQkhXMG8wVVBudWJuWlg3WjAvZWMzTmNxUnczaDhqMDNLYVBsdnBvSDBQN3VUbHhQOVM0dTkrZXpsL3VwY3pYcWVkemZjdjZPWDg1Zkg3VzcwVldwdEg2V3F2M2UrWTJlVXhzenhoMWVJazdMMHdxUDdhSkJqWFl1VkljdUZXVjhVTlRyaC9IdUllbzFrdDlxd1hjNzFINmwyU1BidlVqM1JPZTJZdTlRZ1psRVNYWXNobEwwNDF2bnl2RzZmcHZhMGV4Mlp0dWVyaEg5NGpwNmJtRWJ3SEQzeW94My9VSlZLeWJIeStiTFcxOWQvK09HOGpQNktibjduVkUrVFJrYTRNRW0wcDd4RisybnZZYUsyMmVDV0xtbmpSazVWWXE5d3B6YlR4K1l1OS9NVWFpYlhlMVprK0VPOUhrMVdlM0dFYlE1R2ppcGZ5S3E5YnFlZ1JkZGhwTGhPazM3M002bFp1NGdGTmRSYTNyVjVhcy9jekJ4S216d0FLSGkwdS9oMHViRktzMjFhc2dmYm1ZOCtveFRKZSt2dTRqbGloWnRvOHJnbFg5SHdXUGFVWGVFQ0s5Sk42SkcvMTRxZjE5UGJZKzg0T0FsMFIrdzN2dGszWE90RmZ2a29YbVpjekIrYkVQWW9HZDgvcnZLdjNNYUZEaFNTdHBMaEJWcUNyZVgwSk9HVWF2ek11Um5KWGNFYkRPNU96STkzVVc1SHBvbStuQWNTdE5vM0wrQVluUjBCT2RkcjYzZ0tsVHpXZWZ5b2Y2aDdpaG43K2RBekluWVBJb0lnV1QyaFN3NTBSSUdqd3psWThxcmo0MURlbkVDMmVsZkpubXJ4QlYxblhTZTFIeHZEQXNmRnN1Tlo2ck5kNFk2LzJiTjNIaTFDeDNid1R0UkFMNzIzeVBKeUkwdDFTUzd5RGwrRW5lcGliNTloUXE3RjRSZ1ZQNXIxMFlTYWJVNE8zOWxwUE12YnFFcG9xRU9uOThNMmh2eHRyWU92S2dUVGRuTWZhK29MY3c0NDVXWXY3dm5aTTNXdFp6SWlvZUZMdlJkOFR0K0tGZFM2elllNndic0tnRGpETmRhL1lidVh2N21lN1ZkLzVzOWQ4TmdyMGtUS3RSYTUyM0lPNzRBQzhSYmpmdksvOURYVE02RDhVQW9CTWJZc2FSRHFacWplRldsMGpHOWRGdWgyVG1kV3JTMXM0VnZIYVc2QktQYU1udk9PYVdTbVVwSXdCL3BZK2s0cmFuNWorZng4TXQxTlBhR3RMR3VWWG02WEpDYkFFRTBCLzUyN1lGRFpRVEVqRnJ0c01hakJ0Yy9PU3VIMnN4YzVETXpWcnNCdGNkbzBlZW1kU0p5ME9NdUxFaWVSM1Iwc1JWMENSMTBDWi9rNyt2Q241azk0QnBuQlZwbmhRQmF1WXJ6V1hXeGQzczVlUDk5YnVlcVBLYnBWYjk1bE9rcHJoZktIU3NGZ09PNnNCdHMvd3gwekNKK2gzTVBuM1V3RkRYS3M5ZElYWS9nMWsvZVdBclJqYzhuZXIwdkFiQ1BzYkNOc05DTXM3L0V1RG9WcEU3cWVWV1k3Sm5DaWdDazdsR1ErbzArTGZXYnJzSFVMOXY5R3JmeWxoT0VkQ0NKZDIvSW1vL3Z1ZzYzNmpYMytqWCsrRWZwMFoxQUYrSE0zN1dYbVY1R3hEbmsxSzV6RjFEOW5sNWRqdTQ0VzdVMG1wZTNnNGdzWDd6akVYdW1sdXRsNzRuM3BQbk95aS90TmNIRVZYUmdNQyt3T1U1VXZvOHZkZDhmdXV1TWRkNFRLa3hRNlNibGQxdXBQWndUdFFIbStOekRkMTc3WXRWZG9aQ282czFQbUxrWFk2SlRlMllPb3NOM2M2ZEN3OWRMeGwrbG1ieEx5bFFVSmFJRGd6OTNDUFpzeDFJTzJ4bkJTdG5vem9wTGg4WEhEUmRPV0RwY0FJS05ObDJUVEQ1a2RTc08xMXFYTVNnVXlhU1RSb2NQeElPNjMzdWpOZDJRV3FBQTFYaEJNS0Y3bEczSTkyZVdNNDhmOFh6Z0EzaGpJODBZK0xxWmZNdlJJVm10R1hsWW5NcFhpT1I3MjU0SEJ4ZjdLZWZZa1RjcXNmN1dPdEtDNVRxaWVVN2VtMFdrOW9XWk93RFpMcW5vVUl5MDFhRXRRa2VxWlE0RGR6ZFB0R1hIQTExS2h4Q0pER2xVamhjby9pTDUxNkZGZWR6eSt6Ky9XNy9qR2lENVl5SUlyNVpZMkZpeW00eGZWSFJ1UkttNUV1Um9ERnQxbTVIM2ZVcVI5MzliYngrWkY5RnhmU1M2bkFlbHZQdit0ekJqcm5JdDljemFGai84TC81QnZ0bmpmWngxa3BtUnNzdDFMU3dGVW15K0RFVGZjKzQrKzZ1MjFmQ2hya2VXOWpMR01wVFRtZ00wcGRWYmpmWkxtT0dyUFg1M0dmMzBwdVk5TFBNZ2tPNHJ1bmFORVZjdDhLOHJ0cERHczFMajYvTTltMGNHeS9sak0zbWRIUDg3Vk15K041YlJ4WnBzZFRXU3FoVEZ0cXpOV0tad0kxcVNYSHBua1o4cTA1Z2xsK1daNFh1QzgxRzVOY3hqZEdoZndJVHZRQkt6UEFCVkRyWVlUK040UHF3OVNkV25qUERLakFCNnJWdUsrVEdiSWtVcmw3OEJGUHBYZGRJVWMrMDVCSyszSkpnUFF5WkhYeGpPOFdMTTNPbVIxRTF2TzF1Y3A1STBnemJ5cTVNNzFxYmhpOWovUGxocnN5M1ErbzE5bWdUa3MzM0FrV0MwT2dERWdycS81U3ZCY2szMURrbmFWS2J3QTNLVXlyT2R6N1BmZEYySjFxbWxhcjlYWFBIQ0czZWR6Mm9HZm5uUFNPN3gvRWRkYVlKZ1FwdllzTDZVdjNSSkRXeDZ6ZXljNnRlVEVkYWdJWDVsMzF4S016THpUWHNuRlA0M3hmSTgxbFZta3p3N01lbUhyVHc4VERFdXRsT0FTanlyN3BJdHRKRUF3dnZrTnhoUklYK0tCWGFBNHhza3J2RmlMNnFMTUQwbUNuUzgyZEw0SEtrSnF5eDRYcUJhcTVPV0R1a1RLWEx4eHV1clJMbXZyNEV5Zld6UUVyUC9JamU2MHJJdkV5R3pvVGgvZWJMTTlxQTdMMlBXcjBLTVhQWUl2YjNwbFpjNFlXTzJrc0JwWXFFa0FWWWk5c0xYbm00L1RDYmpyZEw5UGRtblMwQ1Bmdnp2U3paajFwTWhzNi9QSk12VnUyMEdpV2V5M2U0OUJ3cGIxQndhMVYvaHpuV09hOXd6R09ZQWZLeitUaHhYWWE2dFE4dEZyWkk3NjM1V05PcTFKMkhwWXJSNXBYRG9VYUxEeVdhL0ZhR2ViaFpDMWhhckF6Y1VUc3d2ckI3QUZxcXBqdHowVnphcGRKWi9mcS9MTkZMMzFLdzBRaFdrS1gxekhpbllSMlM1VWhTdXNvM0tsbWZWL2laclFWZWp6ZDhMTmxyalArVEsxbHY4WmZONGJIU3pUZWRJYUFrb203aE9IVDVzQWQzblVyVForMGw5cm4yS0JiZHFoNXpSNThzMWRLSCtoaDcrandkcm9ES29DR2R6SjFvVmJaYXpLajk1M2V6NllOYmRHOVpHWjMxYms1WlhLYmtvK1Rua2hvcWtTZU9sTkxwZGRwaGFtUFBMTzRjZnJQb1MvY2hKRWFvUFBvZDVlWDhoWnc5RTVYK29SSjRRYXZwODQxMEZXeE5OZWtTV2N0YmFYaVYrcVlzbko5YVhVdkNUUzNCKzVLS2xOYnFZZEVWWTNkMkQwaDY3dlJrbk5jTHRkOEtvbmo0ekt0T21WSjNUTUw2dFllWlgrVmN0a2ZVUmE3VUl5MThaMXRNSit5VytOZVBjRzZCTExNalJlK2J5QmN2SDgyTjk0UForbnEvbWZkc3V5RmJpM2VnNnRDV0JLZjlJbzlkZ2gyUCtmOTg0Yy9rMjg2WmlpVytPaVN2UEU3NW9YZjNuZE82eUUrR1lTNDkvc0k5OHZHNTNQSEhtYXhxWGlCdXdhTWJhZ3BFalJyaFo3NEN3b2FOZEt2Lzc0NVJGZFQ4TjUwQjQ4TFdZUldZWWJOcVg0bEF6bzI1QWpTTnV2cEdyOGVDVkZjNC9KdmFualB5SldsaW9SQkVhSEpDYnNGdHc1MVZyWUJLMGRZd2JwVG1rcHlibDBkY1kzMGNtZUtEazIvQXlGYnJMai9MWEx2QXNYcDBNcGVXcG1qdnQxWXRhY0tGT2dxRnB2SGJKaXpmMi9HSXJUZThINVFOamVtcDZUNnl0NFlEVGROaklUbzlXVldvNW5vUnZWbGEzVmlGa1g2elN3L2pWbms5ZjJacFhITW44RXNKT0IrQWJNbzBnY3dTNFZScWdaeHVjOVdIRWQrVTVqOXo0d1BkTXdiS1JISHJ6S09PNmlYcTBTZzBIZGxCamRWUHp2ay9YaTNHUFJuRzhEZW5URnl2L3lwdVBNaE1IcldtK0hDdmNuS1JIUFhFTm8yMk1QT2lzaGordHhFcWU3MzBNR056bWY4eThWQ3JtclVKTzhFN0RSWFU0OVhxNlc3VzFWbVRaSFdFeVdiMytYcjgrakk2Tm45T1NVVHMzUTlLZDF5OFhjVFZZUld3Y0M4MnFDY0RhNXJWcTZJcE5tVGRzYU1qTlh5V2NIWTljN3pLbUR0cWFZS3RwSEdhRGp4YUl6SXRUNGk5L2p6dHc4OXY3UGRCUnJYd0FtMjRWcVFIMG52UUYwSC9FaUthMFhOaGsvZlQzWE9TT1I1S1Jjd0hxUEpmS2xlVUc4V2g4N0VYQXBKdnZITGJMaXVOdlMrMk9TeDlJVzc4WUlUTGRia3d3bmhpclUyZmlTTU5VVU9EYXIvQnRTcDA2TGwyU1pISDh0QmNNa0dDcmt6b0FpdDN6YjhQV3o0OHdSOVQzeDJwd1NsbG92aHlnS3I1N1hQVFIxSG5MVXlvbytGeEorMHFDME85cnpWMmtkMW9yZDh2UFVKNWNvcEY1ZTl6dEtnSTZBQ1ArNzZiL3RJNkpvZWZOVVYwbTlJeG10LzlvSWs2alJvTjQrVC9pSEkyc3JRcE1sS3VPV0N4UW5vLzk2aXUvK20vdHRadDNQa1IzU29LLzBadW1BV2NwWkVkeTVwdE9rMzZYaWRpaHgzOFdGZVdGRDRwZHlxNjdvTDVWeTd0cGlHaDJ1ZGtuR2h6Q1J4Y1IyM2daazNnZ2RPSmVUVjIwNVZqSkRSUGVSMHJXanY5WmI1NkJhajVINnQxRG9sTkhyMERvenI5OFpGNElUeUdDZGEyZDJsRVBMYThNVEVXMk9Xemd5dy9XT1dCTjNab0pLMkpwRVlWZmN2cm9aYldFMlZnNCtUbGNxOFdmNHV2WXM0T3VCSGRvZDUyenV6SjlFR0MyMlRrbytwVXRhOWZWdVhaRmY4am0yNW1EUGl2L3p6N3Z0Y0hPdlNOblBTMWlTN3RpMHJQRHY3TzdiVjY4U3pad3B1RDdHaDF2VE11U1R5MW5hSkRUTDdKRSt3ZytqTXZmWFdWRmp3Uk5KYTM2UkVvbHFNdmJINDRQSkMrY2QwS041NmlTeGtMaXRhMkVyM0hYUWxzd2VQV2s5cWtOM1pmdFVMOXVmMy9uR2hpaXVMM1hlLys5dmVWMjRMaCsvNzlObXFzZGpjSGk1dHQ1bk9vdzdJNjNMWG5kY2Z1dENFdU5GVUFjNDVZWWNCcjBSVFVtZDhkK2tzRXdHWmpneEtoQ21QbFJ4aTdUeHc2cmQzS2toLzh2MTR6Wm9DdDBBVjZ2TGpxdUwxZjlIaTlHZWNrc243RXdkT3FjWG1VenltWklNb0xXemZaU3g1bkxUc2JHNnJlUGRXblYxYWNYYTU3dzgrY09YVlFoRUQwSEJPQmd0ZG9JaDlqVHBjY08rWHhqeFR0UHRrOGVtNHdINFh2NEdIbm1YQ0pwdTR1VkI0ZTd1dnkvd2VoWGE0c09rTzZEaWZTOXB1VGh2YWFTYU9PaWtHa0wrY2JLWHB5bTViUzg2ODBEeHRXK3p5cVdpanhyNlorZitBMXFCSjh2K2NSTHBkWUxDRFZWdmpnZFJmOWphV2Zzd1pnWGtiRDJocDJINCszNXpoemxMRmFJSmtKTVVFRThTM3ppRFFGU0ZFY3NSZ0R6c3Q2aCtOL1YzYldaWmJqamJjeDFYYnMwMFhLQmY4Ly9BMm5IRTdTazdlNDN2Wm5UZnhNUzdDYnFuMDFIUUhEdWp1RzZxUC9lR0Y4ZysrNWNwYkpMZGExOFBXbnVuY2d0RmdJUVdRSE9xSjhWN01QcjVoZ3VuS05tRGg2VFZ4QXRRVUNla3RSNU5FdW8vUS9TN3g2cis5bGU0d3FKaXJ0cWVPejg5MG1TM1Nkd1EyaEl2WlBndUE4TStiUVVlOWFtcjBCT0tjdkVBMEdyK2pzV0ZMdWMwNnhLRGxxcTdjL0RzY3JKTjJHalVJdmpuMGZFb09teHFPWkxRcW5QRmp6TkZlalFwRmFoclhOVnpxN09Cb01ZVjVabURJYVN2dEZINnpUYzRrM1pNdlBDdEI0REtrd1Uzek0yaDU5M2taYzdYOENZRXFSYm9pSHR2QWN5MTJVRHVQS2pKaHVuQmxSdjA5b3BONnc2NHVOTkJodmw0VDBIMVlhQW8ySUF4SzNCblBtNlU4RnFjL3ArVjA1ejJzMUlzdC8xZTBnK1kzRlFqNDJEM3FLa3R3YW1jSGVWSGxWOHd6dURXeVBEVmQyZFhWWldMTEROZUZ2Y2pwVEtZam9BQi9NY0xKQXdXYmh5ejU3aWVxdERLSEY4bWtPTEI4MVQ1V2ViR2J2TWpCMkcyOGczMlBXQmFudm9sMGZYZVhJVjFqS2ppcnJhVkJWeGtGVU40SFRLY3htbVRPQ1JDNDhERzFmYy9UQXhFV0c2dVY3cDBzMjYxMlpyWDdyTXNlbXB5d3M5akJ5cUQyVHp3amorZU5lbkNtVTZ6UCtJM3hlOC9Kak5TblhwUURKKy9WOC9wT3czZTV6SHM1N2VOTUVuTEllUmJybTJWSllhS20wckhQNVp5ZUxvT2R3Y2tobUpPNGRKNFpmVXdKemtTWEZ3MUt3Z1dDbXZ3MGxqc0lMSVdFYjNGNXZWcXhuZTYyQjdrREhLNnhmVTcyaCtsOFdwcUpuZFJIRTcvT1ZxUHN5S0FHUkJ1dEp1VUNwMm5obC9UNUNaWE9VL3dSUHpOOWFaRVZnVW5OMjJneUtZT1kyTkNqUWJZbWxTSUxKV2h2cGN1T2hWc1NoSkNjSTlpeUJLRTNoZG1mMEVGQ25vM25tOXJZRTBvbXRHaVErRUlHZVV5N1VRWW5NbzFOZkRTcUJBMlZEbkNSS3pXaDhVWWV4VHIvZDhNOTlMODVOR0Y2TXZ5cjZpY1RSWVJtQTQwMDBBQnA5dmlkd1E1V21yTGY0Y0o1TEhSMVJiUnhUdEQrVit4RDNGeFBydkQ0YlkzODJzYTh3V2JySUpkUDJZOFprTHNoZmxFQ1QxOWdreGJHdk02LzJZRnZFL244WExpTHorWU1YRGJXaWZ5QzAwV2lOa2FQUDBzRE02WHZXK09DenVpOW52M05tekpZNHdJc1VWbWYxT3RqUFYyeGw0TGhRbUphaktOY20vOXdZbzJuY2t5dXp0bW83VS9qdkNOTjZYdGcxdjNPYjVNYkFudk9yeDNydGlWYnJDRXVXeW1PdHo2WjVIN3lmYTMyZXlFMlU5MGpmdm5DU3I3V215NTVOMDFranhONGNRd0JOL2xGejVEUXhQcDcydmkzTkUvUFlBZU9wdXhUM2NMblIwSlJQMjZLYVR2OFNEcjN6Skl2eVJGK1daWXI2eXNhakovazI0c0x2bUY3YTV3VzdRaksvRmorN3B4ZkF1dm9iMm5CamVqbUhKc1Bha2I1NGMwbVA2S1o1TWMzaTNTQmorUm0yYWFpODgvZkxzMWpZbHpnd2kzaTd3L0pZZktrbmNrT0FvT3krdk1lSFFHRldTTTVnZ3RLSzdqb1ZvbGVMSGF3TjZqRER2VGdteG5yWEVoK0haRXN3Y1ZUTHMzVE92OStueDlOTDI1SWY2YVJiSzZMdCtVUFY2dGNqS3Znbm5RLzVNaFE0RFlCem5DbXk2eUFURVBUaFhHZVM3ZGNXQUtvUXFnci9UaGZkRzFGdUVBa0swZTZNbGlqdThLZyt1dGEzanFtUlh0bjNtelBuTDBERllNNmtJWWlpM2d2dU5lYjdJV3UrdkFwVy82MFBVNVR5WHlQRitVNm5kTWJDajVHSTMxbVgyMXlUdTR0RG81MWxYL0NuZnFjMDNwNUY2QmNKejlKUlRjcDJGOEpUWk1GbWllVC9hbkVwOWxDN1libmVseTg2Rjg5b1p2RXdDTzVZTCs2aFhISFNiNWNnODJvWTV2Mzlhbkp0NnRUY3Y5c2dkY3p0RDQ3NVk5TDQrSkpub3JGa250amVIdisyWG1mVXp1TlpVVy9JM0lGVktIaUIwbUxHMDdyKzRYek5RU1l5S3dQNlBSNkQvOUJoMFlBbldnanJrNEUxUFVUejBrQmVuK3pqd0hIKzVJOGpUWS9CRzZGQk5FZGJiR0g0OFFONFdMYW5IT1IwZ3VpeSt0eTd5Nnl4Vkw1MjJUVGR0Rjd5cjVTOVhLNzY4b0N1UVZBMjhLSG04aGRlTGNpMm9CS0IwWVBobmptVG5QOU1rMmw5MmE1UmxucGQ3OWgyL2VvYWZZVElkQk9OKzM3dmxEeWExcEhGSHNYLzQzNkZsY1JsWmxrb3FGNUNqcXJ5b1RSRTFlYWNzQmxLcnRFVW5SS1htdXplcGFFNmNwN2c0VXJUVDJyTFVlSWwzVkZ0S2R4bzdLVTFtcFMxblJsU2xkeGFYQmVSMXBVVCtpL3NURFUxWHAyd0lsblMrT2ZoWVpUOGJsSkdCcU85a1hPU3RSbjgrS0VYVXozNGhoWlBBWUx0NkE3Y201dnVvUFlZaUVrWklFRnV0S0hOU3VoenR0ZDZwUHNBZElRWlJIZE9nUlFyRXhqTW5PMFllY3NxMGFrWXFNc2FrRFhLbkE3ZDJVYmNMQnppZittMzZUakZXb1Nwc2psQ3JLNVl4YlhHWFJmUysvNnF0Y1JSNGNub3h6MTkyMUZuRUdRVmVWUlhSUElvcmxwMWxTV0RkU01NRGgvMDJjYVRGQ1RXYmZYK2FtaDlLNi9LNGMzb2NDNzFQMzUxakhTMGhHVitscXJPelJxdXJzN2puR2hOcGNqcnp0cW9RWGtZQTE1bHFJRHUzdmh5Z2pGU3p3N25UMnhUS0FyekxFYVFhOThkN2JXMEdtMDRub3BqRDRHRVduVW9zeDAvbm4zck4zaVdCZk5reC9SNkl5NnR2OHBQbnZtcklyb2pjUktyZkJBSStyd0JHMjFvQlR2ZlM1NzA0VzdKQ29SYUtwNHJHY0MwTTNQblBPWXRLSVZHMlQyU1o2Z1Qzb0MwYjNWR0hVNmtmVWRvOThxNk90bU5NaWw4cTh4eW5PRExHd2U3eU9paXkxSVMzNUVaL3RWeXZ5cDNQc3A2cS83M2QvMnZvWXM2UlRWT0dwSEI1WVJGbDBxRDV5NzY4N3JEMTNRQzUzUWZ0aXpiOXVtSzA5TmQ3QUNLWStWcXFhYzRJRVR2ejJQc202SnFGK1EwVnlNQUxkbEVoVjFtRUswdFczZjBpaHM0WjFXWUZDQ2JXUVIyblVyaWk2MTg1R014dlpYVC9TUmZZbDFTQlhML0Vha0lkTG5RUEdacEFWcG5DblpwV1JWZ29STTdQdGkxdVUzRDQ5SmFMaDZBZGw1TEltRkhsQkZvcWsxMnBuc255SXF2ZXVkbCt4dGY0L3ZuYXk5WFJNUzl5VGRCN29Db05hREs0TnRScmhrNk1EdTkzNTV6RE5JblZNWnU1b3FlQjFMdGNWbHdkU215aUdONktCamc3eStwdVZlaCt5Q1R2T0JocWM5bmNvcW40OEhZNVhvMDIvemVWTUdXNXpGUEFlUlFSRXRLTHdVTFNoQXNHcEJIZVpvdmlUYnNtQ2p6dUpzakc1emxOL21ZK2I1MTZJZkUwVDRGUWk4eERjazVpaS9NNW5nNDhOWUplbVpORDk4bjg2bjdlZnp0bGxPZXZMUmRBYUJRWW0yTVVKOHkrOE1GanFHZ3VUSUlUQ28xNjFKZmJsclZta1pDWGg3eHFDazlLbnoyWFIzUUt6MUpOdjBKTkprVWpSWm5ZOHJ5TURPdnFINjJCK09rQXgwRmNBeU9xNjJudG96bHlDNWE0akZqMFpKTmlMK2F1UGdyQXE5aUhic2ZwZlVmM3N6VWhJak5KcXo0MjhvNFZoQ09YVkJqcHhHNHJTaU9qSmQrUytONEtIeCtTeEdIWkVqTVdybVdDaDd1UVlLc0MzbFFKeEhVWDVjTm40QkFYZ0dWVWwwekU0Z29jVUp2dFlySW9EbWw5SkFaOFJpTi9TUDlGeEYvOXdvNTlwYW9uYmV3MnE3OFJ1UmxtM3orZGc5Nm93MGsxWi9NYVJaMG9UZ0k1Qm05WDM4K3lMTkxvNnBrSUFiZGtBazEvYWhHUldLYmQvejlEREJWWEVTT2xWTDkwNW9LZEwrRXRUdTZUMHNvZGxsaWZsRmFQYlQ5K3BaZmFmcHUvL2tiTWMyRkVkaXE1WFJqY2ZOdGJiSENSUkR0OHpHYnRsZVNhVWxWOXlZN21CbnRlb3JWYVJjK3Z3RjZEOU9oRjBSaTltYXlFRlk3RmwzSzExMjI1UHJNeUluc3hveURscnM2eTd4aGV3S01lMG1YcnM4QTdSZ0w3eFIvUUJud25FQ0NhWi9VZjJrTVRPeW1RYktsWVJ3OXFFUFhMalNjT1hhTDc5aUgxb1F6RTA4MHprVzBqYm1EVFpiRjdsOEtsY25hMVhiV08ybTBEcTJ1MDFhSFBNcS8yYjNiUEI3SXVBcVkxMWFDYmdyc2o1QmtXUFVTQm5GMkIxNTdwZGpIL1d4cnNtc2IwUUFYaGZ6YTEvanBVak51eUR6eTFWTXJrY1laTzBuemlMaXNHNTdIZ2xZcmc3VXJTcFRoOWhzWTg1aWRZOGNmbVN2ZFVVaytKR1FkVHVJOHhHR1RsNVYwZzZCS3VBWVZ2SlphWjcxQ3BsRDV5eVMwaG11eno0ekVvcHl4SWxqWGRuZi9pMFZ4ZTlTWlRXMnQ3NEJWZW9aUGVHOW9jSjA5dDA1djBRck92SEtISnNxYXJBOHR3b3ljTlZacnRlUmluZk9EYkxZUVFCVW9URnZyL0pkOXh6SDZwaDNuck9tQUJjanVybDFKYzh3Ky96U1BLWUNTdkZEY3BnSW8wZnZESGJnTFdSeGo2dmVZWm1QYzByOVd0VUU3aXdDOE5MMW5YMy81VWpLT08vRjlJQ3ZVVEt0VVNMV3E5N3Uzdk1hN3djMFhkSTNFcFNxMUJOc2paS25RQlg4Sk0rbFV5NXNSMlRpRlJVTHV0a3pGMWU5dU1WZXVBRDVjcTA5bmxiM3FYVUp1YTJpVCs1alpMTm5xdFZ1UTVPVCtoSUxNVHI3SHFpaTY2cmNGSHdFTVUySEJab1AwLzJwMk1jRnBPS3dIaGZ2V0luN0dnUmtvcmNpbS9mWUVNUE9rRjYzb1JsUCt1T1N1SGlLMzVCQ2s5M2ZvYnJGeFJWNUNuN3M5UGtneEZWMUtuNFFNOG1mck85WGlqWXNvYWpQNU9XMHpiTzUrOVVkL0FmWUYvQ21NRnVrSnhieUNOWVgwa1lSY1VvWTNPdFc2elg3R1BnUnZVL3lORnI5RUJWMEl2cjNHWFJpQlhWNFFlN2ROWldNbW16YUM2cmtGSkNKVjFYSXFiUWh2S0JGbnUzcnJWQkNaZ3RHd3cxUXh5ZTJBVGU3Vy9KckNacnNZYmRRU0tUK09DL1h3WjAyaGpzNGxVcjdEaFRKTHJDbzM5S01MeTVPb0FwYlRSWDYvRWl3TFZYYW1aUm9ZNGhRTktCZUhYN0p1d3hwc1lPalJqR0JydlM5U1UrTE5GY210RGZlNFVmTDdaUmk5cG9pK0FZTENSMnRZODFNWjFuRC92NXhzclp0TXhvNmxmWHNyQlh2eEVENkREYkpHejNCWDdqWWxBcm03R0E5elg4RHpXV3RPV0FueUdKMUg2OXJSdmZZSFVyMHV6MTFBb1c4QUJCZW5rZTlvMm8yWHBMbWRYMUgwRklqUUVUVFFKWnMwN1dnVlV5Vlk1bTludEh3NHhPR05uS3ZPMnMxVHI3UG1sY1crZm1scG1iY1pkMmtiMEFCdmNmWEtPYXNLbDZsOXdTbWxzSWRzeVo2bW1yUFVtaGpTdThuMUlDeURIQkplOEhrYzhwaGRFbEt3dkY2L3JSWUpnS1VUTHdwY21qMGhMNk1UQW9XUGlXbUJUSk5Wb2dIY1VwdjhsNUVvd3VWUnFyQ0xIT3JwUENqckpEYy9LbmdOa2pWWUdnb2cyaFJLUGFqcVlKWExYUmdjWENQYUs0OGw4ZFNnenJMbFNNMHA4b3ppYnI1MkNvdnVzSElLdnZ2SlRRN0ZxZXlMQk82Y3ZBWGlRazNaM0hSUExTUFhxNVdFOWthNXZsK3ZGVGQ0Z1UzYXhyT1dabmN2T0MyaU0rbUREbVEraVk3ZitLWjhqektVRHNBVFpmeFFHV3VLUzAzdzVzM1hlVlcrZDRpYy9XNXZNZXREZnlpdTc0LzZqdEFzVzNMaFRzejQyRUI2aXhENlVvT3orN2FEUGJtWWdpT3QzeGZCSUVKOVNENHJFTkhEeFpCbXk1ektnVTlVYmtUMkZET1owVjRkYXhuZEhSUHAvSlFqSnVia1RrZFR0d3lwRzR5SThLUlc1WEpxWXN4eEhKRFA5b3gzTHpVWExqeWp2MjlHd3hQUDd6QnNQQXI3dXVLdkRxVHduR0tOcTRxazNDbmQxM2FHTGhFbjJtNjAzWDBXN3pqQktXVTBsaVNLU2RTTWxPNkkySjRYMEZ1YjAyV2laQjh0c3JkNEhHakphd1hOcmlVcjVJdmxjN25GOG1hajVVeFZWdG1tNFluWXYwa2VFeDA0MkpaRnFFOC91dExvVEhSMDIvZHZVMFdYSFZlcFVhbEhSdFJuaHF2a0NMOGdYS29lK1BiYm5QTnp6OTdYb3RwcjRrV2ZETWlzOTlPbEpqdnZ6bERCNmVEelBqYm9Pb241SW5XVm1LaWM4ckJ5YnU4VTJtYlZ0MjRxZHhObVU5dW9kUFNPdVJTdW4wMysrVXZJYWU3NklIcmhmV3pmVmkxOGpzamUydjBwaGZZbVYxOFdHZmZYL29OM3E5VVAyUmkzeElZRHh6ZGxWZlc4Tjc2NGVPSDY0ZVhsQjdwYW5NMCtyVktEVzh1YWNUWTdJSTNhbERxY3k3K1l1UFhnbitraSt5TDZTRDI5eWpTZDgzMW9kYWJYdWtMUE9OMzlTbzBOYnBaTDIzMFUzVXRaUmY3Z2t1MjA1SjNRd2pZY2NsbTBwVERYbWZIQjc0QWhRT3N2RGZZUWQ5UXNxSzBkL0pycGZJTFE3dlBsdjVxNU9PUmtPNzNwbTMrZDZWWnIxYmlhby9taDhhYUtiaW9McVVwKzNOM1VUSm5HdjJOYUZ3d1BIUVBBTnZJZEM5eFoxQ0h0ZEd6dG1sUjNvNXlibVZRZ3dDd2c1NEJrOUQ3cU5HSCtJelRmTTgyNTRwcHBJdi9NQ21OMW0zdFRiNURyNU9PbS93ZTJBWjdjRFJGek5LVWdNc0VCaXZZR2hXa2N0clZGQmhZcWdCbDFrWnlaSVAyTk4xSDRESyt3Y2tSa0tVTm9nT2RIUVNna3I3MldwQ2JEZVhpc3JKd01UOTNTbnM3dC80aWJSR21DejFBeFEybHU4bjcrTHdzVHZBQlpXWHBqZzF4akR3MU4rUEYwcnR0d0FIYmNFVUkwbElySE9KdmFXZTY4dHdnQnBHdVdMN2hNa0ZHRi9NNFJhVWpuYUx6SUl3ZU9wdkJkN1JPWGVuYkJsT2h6NEtlY3pyRUdLOWJjK1dOcGdLL1ZIU2V0WGVtQzUvaWRNUEQxS0FrT3ZmVnlWRmFacXJnOTh4OWQ3R01QYS8veFdzcStQemlNcUduOXYzYnFMN3ZWUnE0T0VUcExjTDk1bjN0YjZCalJwY2IzNWtCbmRhWHFNYjRxM1ZQamJSckFJV2RudS9mdUxoK21yVWF2K0RQbmpmTHJMTUFtWFRQbnY1V3NQNWVDbGF4eGlpTmM3bit2blZHRXhxVXBiN0o1dFhhSjdQY01aUzhJK1RIY3J6bit3M09SMDhVbktmcyt4cXUvR083MUU1bVo3dGU3cy9oeHEvUDRjaHh6S2NxaVovRGZwcWRPb0pXTU5OM3FteDlUV1gwKzZ5bmU0ZlRVK2R6UzhmU1MybW5odTg5bFJOMFU0ZE40bXhuU3ZNa0hyVk9EMENKK2JqQTIvKzh5bG5pYnl6TENkNjNmdWhzUEdOckxSZlZVdUo4UkUrbE1iL1UxZGNsenNmaFJOS014UUlpSnhmcElSTExRRU1aYk9lVVRKalI0d3NmMFJ1TGsvYm1jYk9iVU9oNnNVa05zeit4Sy9zREIyWHhSc0dqMlVQazllWHcrcnc4dks2bUw3ZVZNczkxSzRFcjZLS254VlJqS2VTS0Qrbm41RE5sT3ZOd1hkRE5sOTludCtWRkZCdElJcEdvNGIzclBLL2xDOXZmV1ZmdHdUcC8vMGdxMkJiRFFRZDdxcFFmMG1SUDVHZGtFZnhvV2RvenJKZDZVNTkvSGplcWVVbTZlV1M0VExTWURSMHpWUTk3Mm9GM3luL0hlV0ZqaHgvWlI2Q1FGRkNGWjRNaTk1b3FRSDdFLzlmM3QvSDJkVFhldm82SVBicm02N2xqdUJ4dlp1TlBZT2F6OE10K08zb0h4cEp2OWdUUzVMQmZlV1Fwa2dmVTZlK1l6dDhzSDZ0akduSmpPZXBxK2V1dTZhUTF2MStYM0Q1UDNBTWxWZ0hOSERhVWxmZldWR21sanl1dEhUclNXejZlOE5wdTJtaGxTTTZWNWF1N3ltc2tINmNxc0hYbGdHVlU2cnQvWVczYkpOQlYzUHJiSlk5OUhQSldLLzdlV2Z2RmN1dkZzYnVVV2kvTnBSd1R5ZVQxQ2JXeVBwOXNMc3lqclBSdHkyVjh4UGNHZXpidUdXcXFMUnN1UTJrS0RMRHNuOTFVQm4rcnM3SnRjTkptSVNPNUpsTzZJaWE1WE9WU2o1YlMzd0NGQ1N6VzdzL1p3VnBTZ2EvMTRyeTRqcVVrU2NPMW9hWWNDSjJEVTRPU0dNdUZLOHdITURHUFd0WnljL3pKZjkrNGk5QmViSVAzTFZ5Y2prUmRWcVRweEVrQlZZcDBSVHpHelJKSWFMRTJ0RlJ4WmlrSFdDcWNvYUxicFpwaFJPNE1GeGNqalRPSHFVRUVsRUU4cDFrcHMyQnF1Z1AwcmcxUTVlUGNrd05RZDNUY3RkbEpCNGZPbWJVWGpmMTJpZDdKVUVQdlZHUkNaMlhTSkFYU1lPZmx4aXBGamFSUVNPTk9Eb3EvUVFiMlpVWjIwMzVxaXJUVzQ5dlBOc2JuSFU5ZGlvYlZhSGJXdHdFcitWZ2F1RXlRT1dRNlJhUTNseFpaYTN6L2ZadnFuTnZURzdRQTcrYTFSaVZRUG10RlJrL2VKNXBEdVJnWVY4aG9iZVdMU3NzMFRzQ0ZiZUs5NmxUazRMUzg4SVNrb0U4RExkenF1WDdmdE44SHBhWTVncTFGL1pYcHloajQyaWl6T2NIUmxGZHNhZW5zSU5KVlB6NWZwOWxCUFhjSFRiTDZ0MVA2Y3FmMHg2STJQQXhXZlVxeS9XMlRoWnpwRGtpejFDU0dXUElPLzlKUTdPV2xXbnd0SGw5T0hMNDBzbFNkeW5QWW1veDVrZG5yOHhKL0pzOE1IWDY1cWJlcno3UGp3NnpOSlVYYUp2ZGFISDl2VU5LeE9QY1VFRmtvaGhYekVVZnZjTHZiNUhPTU5QREs2d2FVVEJUL05saDRMQUF1RWQzWUZpdHU3ckIvV2J2YW56R2ZsaURUdVRsbU1qSURPSE1BbXE1UU9Sc0xsdWJFSG55ek55Mk8wOE5XSFg3bWRmbEdrYjQxeW9NRlBDZWlPNGswSTNxUFcrb21EbVlURi9Xamw1TVpTWnFzaEFITEpycG5PUG1valdqZmpPaTFyb3FKNStleHBCOFk3bno1d21MZWZEd1A5R1lpMEh0ZDhta2pyUmw1UkhlbnBiNDZMN09oQTF3R1dVWk9BU1h6a2Z1OFM5ZDRncWZTL1doRXduemsvT0tzeTU5RHN4bzEySm11bEJWVnlMS1I5K2RreFFIaVpqLzE1K0lHRmVXMVhXNUh4RVZTa0E0bFNLT0NqTzY0SDJtRHRaKzEvcVk1YVQwQmRwbERCemtHTFJjWFhEd2hIOFFJS0F4UktNUVd4c0RwOHpRQVdIalVxQUhpZ1g3MzlSZGtQYkxtVDk5UGdhNks1Zk9oR0VLamxyVTc3Q3A5ekhBOHkvR1d2MUl0bXlPU1JtUmsvbmJxM3NHcCs2RTlVejIwUG5rR2xMaXZoYWJTdnRRVGRwWTY3SEwyYUI2cEsyVm1VQWQ0dStycEh5MUYrRGRRUkNJM3FiS2szMXB0bmVUc3QzZnYybjhuOWZkaUZnNFc1dnNpN01DOWdMV251SnZLckxtN2NZa3JFd1gxZDBmanYxbEhZemVYbklDMTQrNDVzLzRlS0VUTlhaelR3NVZ1M21EeHZuUE14V2ZIQ3hmdm5nNnZkUFJtRmF4bW5SeTlHVGRPWExoTndwVkJwOHJJWGlvTjV1aU00M0lZeXI3bUhHcSsxUXBRMDB5cXpHdTNWVk9YMWxzNlVCVDJ4c2ZwdzI3Zk5rWXR6ck9XYnEwV1J3ZjhhRm5zeGtZWXBFaVlpS2JTYnBPVnJtNzEyK2V2eC9kZHVyL2x0SEs5STdWd0JrRnpaOVFUSlVMdW1PazNVWEo2LzVpc3Z3VGVmenFzMU14L0h2NXRwY05IaHpIUzMzVUxkTFR3dmhoWXFvajRXWmpucWZYNVorY3l0OXJrQW5VZ3paNEV6VFdjbmt5MXVGeFdQYWIvbnNsMGRoOEIxVTdlZlJEbVhQY1FkNHVNZ0FzdStmY1lUcHVoS0kwUTROT2RtNXJmRlJnVXM1NjZUS0FwdUZwVzRSd09PMDJSUnBweXdHbm1hQy9QZDFPODVCMGZ0b2EzeEhDYjRTNFFPUnppM0hPM250djVlVFRJbnFhUTdabHVvNDAwYjdBREc0d0YyMkNaclViSlVRS2ZibHQ3REFFOVhzZGZwOTdWdGg2ZFpZNHpTdTVmeW5QOFNJZzd2bEVNQWVaVm1zU1ZaWEUyTHJxck1taFlsK2V2WEh2Y0VVNjBMVlorcmV6cE4xeXRsaDFFYVFmamU1MXRRYjdNVFpkeGdRdFgxYlNEVTg5Y3liZTVIR0trS0s0dVcrN3FmSy8xbVpRY1o5K3U4YnkzdWlwbDYycjY3c3IxSEVIaS9KMVdLdWplYXgxcGlzaVVzcUZHaFRrOVpESTFTZXNZaXh1Z2lPOXZ1R3B5cDQ1SkxmZFI2M2duMTJWU2NtaTVHRm9UbWl3VEliM20rNG80VEZiOFliSWFocThqZmpsWmk3YkpNbzZ1SEh5TGhXZ1BKcFlpd016dWRQb0ZtQjk1Mjc2cE5Lc3BwRy9nZEpkaTEzRGFOOGZBTmhRWUxPUWs5ZVh0T3I1dGU4ZmR6ajRkSCs5VmV0NXdMN2xNaVBid0R2ZEx0aGU2Y2xXUXQ5eHBqMHRTY3ltWnlPbEdTdEtMY1ZlZDAxRHp3ajdnc2xXem9WT2dQK2RsZHNYdksvZEtNUjN0TXAwdHNTbm5ObUdWT2p6bEZXdDFUaUxNNGFZcHUvN1NjOW5IOTA4ZnA0Mmpjd0dzN0dxcUhGamR6cmp5KzJKV2Y2bUQwM3hLRG10bHZ1WmRFQTR0TkZzYWczdmQ0ajJwUUN3N25WL3pPUFVLNFVrSmd4UHlaMytOL0VHMGR2RTlydEs0UTJtQ2JQQnI2Q1dtdFBmNGJMcFU3MytKMTFqbnF5dzFNNjdlZkxtc0wrbzZNYTI4ek5aK1E2WDk2UTIwdkMzb01DM25XRXNtdWpDVk1qK1BOTFYraHQ1VDZtWmY0ZE5DVU42OGdkN040cnBpWDhDRk5tOThsaE1YeVJYNitNdDU5YW8xcENVSzJ0YVNuMkVNclRnRkV4aGVCeE1ZTFMvMm01a2NUdUNNRVZLamRTM05lbDVFS2JIeG12NXEvR3BHYS8rbGpJN0srZTFLdWpBS2MyNDd5L1p5UFp0TE95WVNXcS81UG8zOVpGcUhUcGRrdFdSYmN6ZkZHVm1BWHBNbDFOdEVsVll0ZDNjRE11NHl2dndWYStqUy9iZUx2QzRqQzNNYXh6NEg5V1Nad2k0MGpNKytBZUZYbytHUGZGOTdCNUx6OTFKbmhLWlMwc04rVmRkWEVuRERsNDRveXpKNmRDNU5DOTFEQ3ZKKyt1dlcwS1dqYkJjWlYwR3A1cnBsbXBCMUl3K2hzMi9vV0dwVWJmV1BmRitINnZoTnNyMEI4dFFsS2ZhWWRXWmFmMkRjNTlJeWxXbU0wbDJFNzQ0Wi9IUXNTbDFOQmFOTzRmZjR5Q3Y1eXBkaFFmSjMzN242VmJkM25IVlQvMjNEaW8zclA1OWVjTzE0SFRFWjkwUjl6c2hzVHI4dzFOaTRMN0dicDJ2Rm9BSXVKQmVqU0l3ZGtib3drMU0xbEM1K2R0Vzg3aEF1YkpZYjViQmdPdDl5ZU85RzNxMjk0eDRocHVhOXYydW9zQ0NYaTZIKzJqajNQSTlxMkdxZTVKek9zVnFZTjhJKzk5eFYyS2IyZmZ5WU1HSHp1OCtHZEVyMFdYL21LdjQ2Rzc1cXF0b1hoK2dhemN6T2hXa2FHbWxmWE9BbTM3dU1UdWYxb2pmdHhWdWExTzl1K0s1TUphL2VTd0luUW10Y05KVndLaEp1MHZkeXV0TElDYmw4b2Z1K2VZOXdodzkrSkZSQ283enpNbHMzTmhhTVhVelNFYWhTS1h5YVZPbllBSVhjVzl6NjBubmtLdmJvQnBmTDJiRlBtYUQxSWx6M3F6SndLMWJ0aHBUQi9jS3dONXYxNWJYck92UnNiQ3dlWElSd3Y2VXNXTTV1OWEvdmtmZHhxbmJiZWd2WFhZZWkyM1hSK0J2MitDRVplZ1g2V0g1SUk2dTArZEhweGxBdE5kQnFJclpqeGxTSDhXNVZxVHZRZVRYTDcvTE1ydzdycUdiTkphcHBPV092dStwMlhsNThqT3A5L3IxVjliUndiblVWL2VyYWQrZmY5elBXOXZFcStqM20xRWx1dDZxMFNTUXZ0Rks2M2wrV2xkQ0JOMDZwcmtrek5TbU5HdmRTSHE1R0VlNGR0ZThTY1U5aGh2OVQxS3VmRHNUSXhlUFpTanUvSGtqeEd6enhQeEE4OFpjQVRGd05kcmdmd09HK29JWVBBeko4TkhqaG93QUxId0ZTK0pYQWhKOE9SdmhvQU1KSGd3NytDa0NEbndVdStJbUFnZzhGRVh3Z2NPQmp3QUkvQlNEd053WUZmQlFRNENPUy96OG80Zjkza3Y5Zkpzbi9weWJtLzEyUzZQOGVpZk1mbGl6L0g1Y2dYMHVLTDBaTFc5dHIxTnhHWGZldjlMczhNZm8vZzg1YjNWV2xKRi9iUnZUUUVNVk5laXpZMEZCcFlqRzdraDY1Vjc4VWJXMUtYcnlTaCtybmRNZWsyM0pibEYrVmRFdG92U3VUYnM5Ri9YL0ZHaTVNdWkwbjJrcXJPeVRhMWhQVTc1OWNlLzRkVnliVTN0SStKNjFpbXZxckttZlFEQmhRRVcrZXA1RUplaTdsUGZ5YmJMMmhwYVQzN1REUkJWT2VyKzk3ZTJ1Zkp2bitLOWFRMzVmQzVUS0xCRVc5TU9PRnVNZmZZblFOVDZBemJnQ1oxSFNKZTcralhYYzZEZTc1end5VDZLYTUyWHF0cGRNcUhld3pTVEZuVmxyY0ZXbWIxcWk4Sk9ra0t5TDN1d04xcDZRTUMybnM3QUVYbkd5aHNzcTVKUGx1UDZzRHRWY3ZNbmh6RjV0T1kzYnFIbTlicXJRekZMd3ZkUnBrcEoxT3lmWHU2czN2SnkxMkVNYS9xMzh2czROM29GeGR4QkJ6cEx2eG5IRHovc3RRR3JKb1VIMGZ5Yms3ZGd6SmR2MU5HV3gxVmRxWnk0L3RHSEp4RjRxTWc5STE4Zld1SG8xY2RGbG1kclorcDVUbVZOR2JjSi93RCtrNzlkZnVIREs4dEt0RzA3NjJkUFc0QnlLbHlCdk1HbUNBOW1DcktZZlgwM0hkNFhYK2l6UDArZkdJcHRKNnI1RzhoVGp4emVkYTdHVHdsZ0h0bWpvdnlBVmQ3UmFFUVlzc21PZmd3RE54L0JZK2xsdmJDbGNxbnhOMzVmZS9jeDgzdEE2VEhmaEcxb2FZdUs3RmJoWEp3TWFnYWN0bGdodmwrVkhyQ2JiSnlnSUdxSHJBTmhwOVZ0ZnluNzB6M0VMYjZGeWViUXlxbndOT2o1dWx4UWtrbUhieG4xMDVGMCtBeVQyQTd1YmlYQ0tneFBQQWRIb3YyVk43WDNjdCtpNTZRSEx1YzFlT0xRM2NJcnZnMzJXVDM1UGxlZDVOOXJTOS95ZmVOYm83Y0dMYTI2ZGovdHVnRXI2L0J2M1JOdmFJUGxqS2dMaXB4K0NaOTZYeG9Tb3ZWVCsvMS9uVjMxZWkzNmpsN3V4bzAxdUxIL29XaHA4TjNWd3ZQT3V6dGZEaEpuSVhYcmQ2NkVsOXJiRmdhMVNJdHZrc1NCdUpjRE1xcWZlbGRzdC93WHJwV1YyZmlaS3Q4MlFYZzZaOStYVzEwOU1hWXRKSVU4UjNSQkkvTDcydlZWVjVMVHRxT3A2cmw0LzMxbTVLVUxVUVVRZkhUVjRyam5UU2ZjclR6R2djK2l5d2NFWVRVNWRaNlJSaXV6NTJGSmlVYUdNUld6U2hVeFVxYnlYZFVFdStUalBaOC9QWVFkQ1MwUjRCRmZoeGlvM3RtMGl0OWVDcnJwQitnM3JUL3V6SnhvUU5OSlEyVXBKRnduUVpBaWhXbnZMVGt5Sk5sU0RvclF1T3VFWlIyTFNQU2VNaitjM2lCUFIvYnpGcjRlRTZYNFM2MHA4QmhWa3ZaQkVpTlFGdzNmWTZhWEZ1QXc2K0FVWGNHYTVVRU8yWkF5MVRmY3Z1aCtFRiswYnZ3TGpadVpYUWE5Y0dqazE3dHpjb2lhNmtaNWYyN3R2b2RBMmZ1aE4xZUEvei9yRzB4bnZJM3RHcHZoVk5NcS91WU8zU1VlYmJxUEg1Y2dpclJTMXU1R2wyc0s2cjRjTXpLZUZ0ZEpTdDZjU2NHOVhhWEVhM3pGMVhTQnRROHRSU0RrSGF5NlM4ZDdSdktJd0haQnJkSllobklxQktwK2kxOGZsMk91bXNqamZ5Z2VuQ25lbENZakVYQTAwVmp6ZzhWZ3NiTnp4VFQyZTdhdnl1cGxNYmphQTl0MVRCdHpqNGpOUkZvTnBFT2ZWSmhGcFBqblJWNmsrUk9jVEtqNm04YnpLWkxudlBKV2VDWkJZMmRXMWQ2VVBUSzh1TlN2ajFYS2VnQ2hvMHEzOGFhdW5lRHd1OFdBbXV2TEFrTkhHSStQUzZZOXFlRjgvWU05aUJnK3NIeDkvNVZkN002TDFRWXcrWmxpWTdPR0lUM2x1bnRlWGllN3NuWXZNVHB3TEVJVmJjZXIzd2pLZXJJaEgvanRoaG1uTmhxQ2tXVEZNSjBuMys1dUg3aTlBVU0vbDlmTThBRm5wQUZURmRUT003YnEwckZqUjdhWjI3dXB3NkpjTVNsd2FldzV5VEE0TnBUZkZzNG9sNGYyYjlQWllabFRUbVMrVWtva1BUWldpejVDTEl6c0pHbnhjYXdoVm9vU3U4cWVtT2tCK1J6akZWQmE5MlR4Ums2U1RhTEtlS3VBSXFUZkJzQ0JmcWEzd0hzUVBTR3RGVXNxNmwwZU9UdTRsMnRkaWRaNXNSbmM3bjM1TmVkVjJsOERnMFo4Tk5scWJEN1plbUt1K3N1RWRJQUpSSG4zL202K2NYTjFzTkoycHpxa0g1SEZLYTdEUkduTjZTemFkMTdoZlNYSXRNaWI4N0FrVWtFem1MWkF4Y2NOTnVIZHdhYUFxN2pWakdOMXc1YXBSN2RiM2w4T28wM3YvbjlieUVsaVNsVHpYUkVsRDYxSVc2WGRMSVZONWF0ZUpnNDZpWno2cTZYWkxtdzBJS0lGbmRFNmVtTzNEQTI2WjIvamlGYld4QjY3bitIYm83TlZYYWZIT0d1elNWZnJHczhrbzE3ZVhzWFZSQnhCYkhFVmM2SytPN2VjWkk4L213eHBlKzRVSkNWNWhBWXVWQVUzTWR2dTZXYmRRTmZjdVZ0OGpXbkhQQ1RuTngzVVBmWXFGdGpDVm9zRXdmMFl0QjlkY3RjbUVQVk1FM0tPbm05NXFzSE9sS2ZDK2ZlQitoS3lRMGVqS1JQWGZzSktNRFhRWFFRSGN1U1VjR0pjQ0pKL21HSXU4c1ZhclpQWlV6SURWS1JEUXoxM0dqVUh0bnNOM090a1p2cy83Und2SlRQTXFzald6OGpVRWQxbzN2WllHdEt3ZlNkT1Y3dk5mVkZCaFlxZ0JQdjVlT2tBMnAvK2FSZ3IwaFFFMlIvQkx0eEhBZVgxTU9ZNkFjN0lMTjNYaW4xR2k3RzgzV3oyTFdyL0ZiTTgzV2FmdnF0ZjRFUGpGZDJRWXNMTXVEbnJ6U0tEUVBhWU4wWlowZEJLQ1JCdWhHMnI3K2JCdjVydUZlTDhCY3l1ZWRwdzdqT3VEREpoN0JybkJOUVdzV1dsTFltMjNmRkViVnhIZXQ2Y0NYNjUrS1FSMUlRNUZGbkxUVFJOY2MyQm1jSElJNWlYMTBDVTEzdCtNVFBVRjJCNEdsa1BBdFRqUTZkdFJEV3ZXcERqWXlvcEdkcFFxckhBSmJYRmVwR2ZSbGRtV2hhZk5WNitpc1krRjB6M280djFoZ3JCQzJib2VCZFJyN1VqOWFXOWZicS9YWExvbDZGNXcvWVZBSGFMcjFNZzVJdnloOWQrSDVXMGhHcVVKTElkdGxsM1R3RG1kZmg1b20vdE1LekpRbVRIYS9mT2w4N3ZudlgyYkQ5UWY1cHdpamgyenJnYmVReFQyVysyTmszMkJmdWgvemY5SFhJKzFNZGhBWWxOV2Y5MkxkWkVvTnR0alBya0FrbDFMYTNodWo0ZWFDYzlvYjFHRUhldkRONVBBZGdHeWhJNUpIdUxGNldwN2pNcm9uZ0NxRXV0S1B6Mzl0UlRqdHBlSHVGMWZEbDJ0c3FsUldWbWlXU21UMThTcTdTazdrdU5xZFhyc2xhVlpEckl0RCtLNS9OamZlRDJmcDZuNXdjNkExai9lbUdKOXVoaVJTWW9BUENOSk84V2FUR1JHZXJEY3pMdnptN3RuWDA1dXpyeHVEZVBVRzErdHpSdEpkMjg1WE04QS9NTk03RHNqTzc5VVFlMTF0aUYxZUIvNjhsRmZSSHN6bW0vUEt2SHN3bE8zcm5mT2RHNFZLVStQcnl3TzhOYjdCQWhuWFhEQzk5WktQczcrUEdzWGcvS1pKVDR0NForaG9xa3dZUFhHbDRid2ZjMmV0QkFmeDFhdkRMMTlHL1dkTnBXM05oUUV5dEpBc21NcTBrQ1ZVZUsvYkdjc2MrWkZRbWR1QWVuWDQySW1kOGE2OU0xMzRGQ3ZjaDZsQlNYVCtHem1xSlY1Y2tOeFFXY09WdWFXUDNlc2EvZkxjNC9iQVJBdmE0K1BsREh1YmN2bWhUZlU5Y1ErVStGNUk2RzJlNE5wbVFOR2VzcjB2bzM5c2s2T1BrNTUyU0w1dlRoaUt2L3VZaEpnNEtlQ2lwSTBxTDFUR3lCSVZOTldlb1hYb2ltaDNkSVJVNVU5NWpLejJSWlpQVnBmWmw0MmZZZzlGb0pBNzA0T3l4U0k1NU1kOERXbUlqRVBEazNBd0xhSGhNS3ZweGVRR1pKYmZtUnFjQldkYWVuOFppaHdhUGFGZncrNlduR3RaK2RieVhJck9CNWFoa1BFQktQbi9ZKy9kdGhSVnN2M2hkOG5ydGJzRnRWWmFkMElLWWlwWm9uTGFveTg0bUlDQzBna2VjSTkrOTIvRWpBZ0lGRTNOcXVxOTl2L3JpelZxcFdJUWh4bnpQSCt6L3N5SzdIRjBPemZ3dm1TQ00xNU9tN2tOMUttdTZ5M0hPS1pMWWp3aHhkZmk5WjB2UzVzcVFOd0tBSWRqdmcwV3BiRzhlRDAzdkN1blNrbmZLMis0dU1DNHFEbGZ5djJ2ejZPZWZHRWo0MjVqbjgyVk9sOStiVTdoWnBrZnRoL3JkQnRIWHZIdmtkU0ljN2ZkOXVpRGhpSFozemFsSmJxSjN2TDVYZ0g5WTRydXg5c1FwNk93UFdYbTlCbU9oRVduZjczNnd6czE0SWRUWmY1TkFORk5aM25aVzJYNlc0Q2hEOWlkVE53OXF5M056ZzU5V2QzT3p6U09YOXJTcWU2Mitqa05aRWhvVTBkY1FDL25PNTRKSXlvSlMyU0hnWTduZXdERUpDckp2NVhmTjdwMld6ZlFTRzRpbnpTbnE3VkhqV21OOTNHV2RPdjdVZmF4Uy9Ob3UzRjNmckQ4VlduTDhEdFJLeXJwZWtmNkFLU0RIRk9MbDE3QTNYY2R6ZXB4NjJKREVLUVlUZUx6ZElZektaVndxUnVYY3p6ZFJLK1UvWllpQnJYM3ZZdEM2bTZtcWZJeWFPU2hwTmE0Y0JPcFdNNzZrVWQ1YjlzNklrdUgvZHRLOUpZMUgwUzMyNW9PdnRiV2xMVjZKR0Z2RDdUVWE0ODRid2dwbGFKdmFCdmJuRjRnNXY3SHF2aS9iRlg4bjZsT3U1TFNldDd1OS9OMDVha0pJVHJnV3hVNlZ4aDZyVHhlZnNJYkZIR0VyQWZkVFNUZU11SU1kS09aVXZWb2tiblVYVFBmM1pjQ2xqdEdWL0FUS1VYM3dwVWJLNVB2Y1BOeTRWTFNkeGE3dnRJaWt6cTYwUTJaZDl5WjNuM3h1OXRvTTNmSUROL29ibTFEeW53NTdDN2szbG96N2RScUE0ODVSMDNrWElvR0NjaUhtdVFuOFlwWVVZK2sySDArenBYS3AxK2p5WCtDanY2VHBVRmY3ZDk0TTFSMkRhMzg1OUxzLzg4M2ovbVBuZkNyRzhnMDZZTjM5MXo4aE1ZZVJpOS9jTHg3MExWdnIrOW5leXgrY29kL0VacjU3VFg4WkVPWFQvYjg2ejBWUDltYmZ3TzYrV1A3OWxzYXMzeUtIbnQ3anVWKzZaZXBRdytnYTE2Z3FQNXZOV1M1eGtQL1lxMm5HM1hkcjBYNTdvUWMrNlZ1eE1zTUhyRzc4aElkb0xUdWI4NVNRVHo5cDdyNTMxRGQzQUM5TmY5TmFnRUVlM2ljK2JlNHpNNWF1R2gvVm8rSkNvYlc3b0llYTNhZi9lT1BwNzBUNzViWjAvZi9lZksyU2JMZGpCMTNHYU8vLy9YSFU0VWNocjUzZkgrNGRQemxCL25XOFpNb3k2THR4c0JkSm1FUVo3UFo1azRlYlRkMGpPVkhQbkUyVGtBSElUOFNseDg1K3NEZmZjRGpUOStmbnY3MXg5Tnk0N2p4MG4vNi91N0UyZktQcDQvdE5tOThsQXdkdlVlZWt5T204UGRkOXZIM2VPczU4ZCtaTHpMNDQrbVBKKzlqNmVUTDJkTDdXT2Fqcll2R0k5d0VmL1AweDlQSE10dnVQcndsbVhtMjlIWWZVVjZJMjAyK1BNSU1uRGplSG41OFJQc29YZ2JMUWVZNU1aa1JtYTducEk0YnhWRWU0VDMxUDdicDAvZi9mdXFQeDAvLytCZDZoZU8vYmVKQzIyNXpLWXFYV1pIbHkrVHBlLzZ4UTR2ZGJmcVovTEhkcFUvZnYzVzdiWjU4cEc0MzZBZTF4eFlaMmxEeVZMYjB2RzJTL3ZqWXZrZnhFcjA0TDFLME5tMjN5YU5rK1lMWjVOTy8vc1Z1TVI0Tk1vMEdtMzMyOVAyLy8vSEgwN3NUeGJ1UDVRK0l3eng5ZjVLY0NMSFE5Yks0c2NmbzJ6K2VZb1oweU42V3gvMkVQOHBTeDF2T2x2SFN5N2NmK01tdHUxcDZlZjJ6MU1tOUVDM2piSzVSNGdTd1BEOEtsbG4rOVAwcEN4MisrKzM3bjA3NzJYdHZ2VDkzbmx0Ly90bDFIV2U1L0pOejNDN1g4LzdzZk91Kys1ei92blM4YjkrOERzKzk4OC92cmVjLy8zeit0dnpXNWpyZGIrajB5ZGhQMFNiNFdHYlpmMjJDYUhQOCszcm5sbTFVL3d1dE9WaWl0YVM3T0M2M1NIbFh0L21QajJXMjNDQkt5NTNnNmZ2VG52dGI5MjhkUk5LMWJjRlJMdnJUL3ptamQvVEUxbWMzNkFsTjRHT3p6SmZaMzZMdDM3ZlowL2VuT05yc2ptamtkT3Yzeis5YitoRnRnV3BqSjh0VWZBcUl0bDNIZzB1T2lSMzJzNUhHNFVNUW9uMHNSSUh1ZC9rMlFYL01hbC9OdCt2bGhwNE5PM0o1L21pVytUWmVmdEFwL3ZjLzZQRVNybEcvaS9qZy8zOXpGZE10NG16UG5VNjczUFZHSnJvODVzdVBqUk1yUDhndGpiZU9Meml4cy9HV0h6UFlLYzNaQkV2eUxSbnFCNHdPZzVNNWlQRXV5NWNmeWcvZ244NzdlN1NKOG9Ld2M3U2hzMDJVcHN1OFJsVmtQeThtaFlnQ2JYdTBDUm9uN1M1RFp4L1JLMzNPMkJQbnFDM1RPUEtjN09rN3gvM3hsRVFiNWdOMGpUNkNaUzcrV0N6eUtJNU9NUEtQNVllMzNPUndVYnN0K3N4a21Xdy9pcXVQMWFjNko3b2ozaW1jWUZsS3UvY291TGhRK09PSms2cVVmK0ViaFlTakUyMldIK1NTTWNLUytSS2Z3Zjg4aFhtZVBuMS9idjBCLzVmQnNmeUxlVzdXZEJHOVhaWnZrMnJHLzFOTjVoWDQ4ZFBaOU1pTjg2TU1iZllZcFBVQThSTDJZdmliVEdTVzdXK3lrcE1SK3BDaWp3eHhzaVg1cWZLQzMwWC9ucy9INUFNNDFHckxkQ2VPZkxwNVJMekFJNU1vUWZUbDFUK2RiOU50dkEySy9zSDVXR3JiWFE2a1JLWUpjcW4vRVZSWDRNTVI2WFlSUWorVFhmQ25zb255eHVjbVczOFhMOWxQOUcyOFM1WVR4TW91UHlhZmhFc256a014WEhycjRSWkV6bFB0d3g5T0hpTEppRDg2b1MrM1dkNlBJeWNyaDlobXVZb1pmN2s2OUJtbGpmT3JnYmhDZHBWby9vVi9qQmttMnBsU0tIN09Fc01QNEYyVUVNNkVxT04xT2gzUDczVzVydlBlNXJ1dTAvM3pUN2ZiKy9hKzdMenpmenJ0anJ2a0hLZmRiblhiejh0bnQ4Mzk2Zmc5LzV2My9PNzJPa3NrUlBHUUlua1BIZGgvYnJmZVhhZlhYdmFXcmZmdThwM3JmT1BmdSsvTForZFB6Ly9UNWI3OXlmMzU3UDdaVzM3enVKYlg2bkRlbjc3RDlkNDVKTEVkOTZwMHJ0MjVXekw1R3JPbldpYkQ3WjgvWi9WY2kzdUEwVE1hQWNmL3JZMCtJS3NBR2YzMC9Ra1c4MVQvV0Nqd2hTWXpaTC9TaUhERVo4NFFtdFBBdThqKzZFak5mL3IrdEg0R1BhSzJqZWpjeUdUTHkxZlh1NGgwcGsrbnpvZVRMSE5pQ2Z3TGFZZStBN05KSTMzNWtXRWRIWDM0dHl6OCs1NXo0alIwdUtkemtlQnR0N0cvUFNCMkhXMzlwKy90VnVzTGNpTGR4b2l2SzV0OCtiRjNZalFNNkEvNTltTTUzNzU5UkVHMGNXTHlFeEZyTkdSc2RFT1cvaHNvb0EwaURKM2NSeFFFaEkyZ2RVWWIvK243MDB1SmYzYW05Y2JSKzlJclBFd082Y2R5bGlPZDQzK2Vsc2VsUjAwc0J3M3gzMDkvUHpoUi9sOVp1TXZSRmp6OUEvU0JPTm92TjhzcysvR3hkV0VNb28zUHc0OWxGbTVqLytsN0Z6TURlUWt6VGkrNEQxWXB1QmJmN2FBRmhrczR1ZUY4L2dNVFhwUkhUdnl5akoxaXR2UzJHeDl0WXV1UHB4VE9vUFpSdHZPOFpaWXg3MFpTT1VxVzIxMWVQZmd2T0tJazJ2amp5RnR1c21VcG1aSmwvaEY1MlRVT1YwNFMvVUdFRi8wSlVtTzN5VElQbDd0TTIrSHRkSHcvUWtmanhLeUplcWtxblJ1UWxPZi82eE1WNjhJcU90TzQyR08rWC9zaWE3elV2OHJuSmhpTSt5ZVdpSGROVzhJVW8wMUE1ckdwNnl0WHpLK1A4NTlsM29lVExxdnI5TlJ1WlU5VTFhTHordTkvSUhKTm9rMS83MFF4bWc1UUI5eE54NjlJcTFYeWpocXIvamVZUVZ1ZjNjTVVhUHRTdzdwaUxhVWZXK0NQTDB2SGo2UE5rbDFQK3JFOUZyTmxYdk9GcERzM2pySndWaEhZR1QyaGkvcTJYMzU4UkQ3VjBwQk1pajY1N2UyLzNtMy9xSEZTRGo1QU4zanJZNkpCbHlhdHJoOWp5RDE5TFArNVcyWll0L0hTM2RQM0o2N1ZTb0JWSUEzKzZmdFRyeldKd0RiSnZHMjZiR0lkbjFQMTA5TW5WOTFKa2RUT3Q5NDJMbzNYOG1JeWV1MFExQzlXWVIxaU5Zejk2SUpqWEJ4K2svMUdQNWgvSUNQTUs5VVdVQUtxY2I0OGRaOVZvKzkvZFNvNVNSU0R3ZnpmVDhxUGZlZnBIK1duUmZua0xOb0U4WEtXTzk3NnFjNE1xVUp6OWpHZDIyMitpYTc4ajdycUM3bzIzblAwdjdtWDRtM1krU2tSMEZSWGhpTUhUMU8vdEdxZlNyYjFvM3FLY0dLNEhsOWE3aFU1OEwrMzlHdTI1UjM3UWQ4Ri8xVHZ3LzlXbXpWbUpnK1hLM1ErbGo4K3RvaGhNRll4MWFxS3pNdnBGdUY1TjJxbURWWTErc0h5STRrMjhLajg0WGpMSDNWV0JUcmltVWNKZllBTnlWbUttS3E0M1dUNWh4T1ZWaDNlc3djbXNkdGdGbHY4MlBxRGZRUkdMM3RSZHFudjVNdFovdUhreTRENFR3NU83b1VLMXF1TktBKzN1NXpRQkpWcFJNa1djS3dLWmxUM3dIemlVTG1wR3ZPLzE0TnkyMUhSd0hTYWJIZTgyVGRzOTNzTTh2dk5YV296a24ybk1VSW44Yjkxdm1ndk5qc0hPM2M1Qnp0ZnNCbTV2M1hQWGNoMzJBanRLNksvL1JPaXYvdWd2bGZmOUwrVXpvZWRycTNuMW5WditSMnEyYmNybTN5NXg5MEh0cmhCdXpyemhQOGVMekhhakJ0R3ltK0tCWHpPdVI5bXhJalBoaitjRHlmQlR3VHgxc1hLVk1rNFBwWkJsT1dnYjlMLy9SdjJpNERxQ2MvOTJNVXhEaGFlVzFPc0ZsOFpyejgrbHUvUjhYcXNwZFJvS2JGL0xQY1JFcy9ES011M0g4VTRTcUtjWE1mTExXOXl2WC85REM1VkNiQWNuS2Z2bTEwYy8vR0VlQk5hZFJtVitWdTRqSk1vMkd3L2xsVTJoVklJVTh2VUlLSExLNFNXV3dpcHpYZjNYcklJZkQ2TTNVaUlmQ1BPQUt1b0VBNldvWDVZaGg5N1JlZFZLWVNGSThjblphaHlIaWtnVVlicTFqYU9tU0w3bWNzckZBTThkUk12VTRiUTlxRGxtSGFzRElYUWw0UDY5N0swcy92YmxTSjNZNXZIU1p5S0dCNXdDODR3dGtXYW9UQkl4NUh3dzAyT1hVWHU3ZXdaNEcvQkdwU2hFSHVSa0RsR054NEgyNTBtcWUrTHRvYldnK2I3NHZKYzd2S2RRRityYzBYV1VtOHplUjBuZnVxTHovaGZPZDY0U2Erd3A5dWR0VW1MOFFILzZ4ait6bTJQWWpIcWJ1MENQUnR1bU05T2Z0TFppOUVrbVBLOTNFWHpsaUZqZ3ZORUlYR01ZK3dkdHY4Y2I5UzIxOS8rYzV5TVFnZisxbkwwOTN1d1hTbVNIWHBKdlBmTlNUQmJhSkozMk82ODRXanZKUHJLNzI5M2pxSEYxdXo1OVRYcXRseFRLRngrK3pyZTJDZUw3NjN0MmZPcnlmVk9iaUlkUEQ3YysxTHYvVHpSOTgxUUI5cXNkdTV6MjFnRXZoekd5cUJuenRmNmJGRUlhNWRYVDJWcjNkTjJQMjc3YmI4NFR6TFZZai9xd2JOajN1ZlEzTVo4ciswbWV1RWR0cTlNY1VXdXlGSmhHNE85SSt1WmU1WUFwQTM2TDVQQjN4Sy9OcTJMeEE4eFNOMkxKQTJwdFNXZGQ3K05pOTRHa1lWdktEdUw3K1ZqdnBZSXM3OU04RmdIcy9LemVnY1pSYmIzWGlTTTJlVXFRLzJFeGxBRzNlRnMwYlVVV1RvcDhpRHdFcDIzemRFSmtaK1g5RHJMbVFCZGhpRkhUaFNpTXY4djJMNHFlczVVTy9kYjQ5V2dHSzlVL3hYZ3NvVFRXL1M4ZHd4dU05Nm9XOGZRTTV2VUpGcUp0TGI1eGI3S0hXdVIzMDV5eCtnbWJudVVrM3prMEgzcG5meGhuTmx6TGtIWGJHeXFSOStRQ251MkRoUTlGN3lod003aCtPZ2NwcVp3WU9aeC9NSThYc1ZZMjZQOXRHZUh3REswdFNKWDV6M2xqNkhYVnQ5SVFoQStLN2tmUUQ1dWdhNlJudG1pZ002bjVjaUx3Skl2RTU2cXMrNnVYRms2ZWFkdGdPczh3ck04OEU3Z3k4L0IwdWh4WGxUVnk5V2dzSW9PbXUvV01TZUJ4WWVodDVrR1Z0TGIrME9BN2psNGhSQzYwU1c5S3JJV2UvSnh2elE0U05SQzc3Sm1nanRqYTRJNFFyOHYyLzBadmFKMXBGWE9yeEw0cG9yWUk3NnFVcTdZeGpFM1oyRjFSUkdibGxzN2p3OVN4Rll0UG9jcWJkZVFkc0Nxbzg2ckdFMVdVS1Z0NnFtWDZGQk5qNjVxYlU2bmJXQzlkSHFUV2FlWXpEcUg4VndJUk1TYUNtRm9tOU1BS3RzTHRGZjJYZ3pTd0pMaDdweGMvaGlMQ2N3QnR6MG9oTkNXcDhIbHZXUFl5dG1hYlQ1dU9VTTl3dm5yRnpVNnI4QStaa0pobXdLaUg5eU9ZSXJtME1kckc4UTdyNjJGcm53SXB2aXNYc1ZvKzgrWndVRU9xUVVKY050L0luSGhEdGNCakRlZkJPaHN2YlorZ0RwR1dWOWZXNWRqZEUrK0xHV3VLTGlMdFQ3UkZ0SmMwM3R2MHdVbm1iTkxHbWhhZ3lXai9Vd1hRTHNnSnFTZExRcHJnbkJ3WXVveTZXOENUS2VJUmRmMks3RDRJK2UxTlNUcVVwZmNoeXJQSCthZk9JYlBVVml2Y2JCOU5UazF0bWVDQzdDTlNienhLV3hYM05vcVBFSDdhZXNGdVIrcElpTngzV3VQNCtkWE1lNkJ1REQ0cy8ybzgyRWsrblBFUDhhOHRyZmFFOHoyWi9oemt5L1BhUDg2RXhLM3JkVDJ3ZVZWempXZ2VoN1BHYjBYNkZiZk1mdi80c2hTNGZlM3NKOW9MUjdmeSt4cEN1OVFoclZuTDgrSzBneTUxK2d1dUcwN2hyc3NINjdzZFpWRWlaN3oydXJlNHVQUWgzcE5YS2NIdjVQVnJXV09Xamd4VlZqYnhwSElEMjFyejZEalZXeVphc3llQmFGcnprM28zaHpyL0JpKzc1NGNrWXBiMkgvOHVkNWpmdmZ3bmg3czlpZ2thdDFuZTBxZVhRUUdONUxtQTExWXRQVDMrVnBTTmIwVkdDMVZtZXFqaFRucjUyT2puQStsOS9jRnJ5TytkVGFXL3RBNlBka3ZMS1JtRk92QVRub0Z3TkFiSE1oYlcrNnRmT0MxQklVbTZyNWp2alVKNWthOHdYZWd1MUZrdTNENVZvRG1aeVhIZU15VHUycVU5dzdvd2paSE1hZ3RNNkhsODgrSWo2STcxclpNcE9wcWUwWG1VclFHSDkxajVsenArTlpRYmVFYXV4N2hlMXpKSHl3UlZPd0czdGk3NENHV0tLemdYRjYycitKcXNGTUdvSnU4RVY1YXlheGFkOHdSNkN1Mk1TWDcxTjI3RWJmeUFBNVdEVjBHcXRBckNMM0xldWp4TVVESnU0YmVjdVRlV3BISldxVzhUcHVpeXRKY1R1UmlTbWdjWUVPOVJNOXNRd0lJZEhRK0JsLzdmZXB1MFA0Y3M3R0I3OHZyRFBNdk45SGJvTTVQdDhkeEpNaEF5KzBSVXNsWGxuRUl5cngrY3hJNFJnZHkrZTJoam12aWdBZEtMWkRmSU9NV3dSTGQ0WUpidTIxLzU4dHhqblFPSk8vUm5ZVzd6a3M3SDUwSFRjaCtHZXdVS1IvUitabXpZRlh4RWc2ZmhiaEdaMzdDc0xEVHEzb2t5ZWxINjVqWmhvWms3c29YaGE3YjFndGxvTDB0Q2dIcEVJbWR4Q3RLTi9nc0FQSzFycE9pYzhEN3U3Tk5yN0h2OUdUV0NlWnliNk1NdGNJeTdNUXhKb0c5R2UzZG1SQzViVzE3UVNPeXhua0ozUDBXbUhDSWR4bmRqVzMwK0xMREt0NFAvZEh6cjNmc0UvWklCMmJuNVlEK0RDZzhYVVhHc0laQXIzaStLZUpEOHdRNnU1RXpyZDNKazh0ek1UTGQ3TVNPdlFScTc0SE9mRk5BZDMyTnhycVFjWnRKWUFHbWh4NVRlZWtQL1QzbDJlZ3UyTEorUXZSbUpmcGFrVWRkUlJxbHJpR2RsQUczdDNnZDNaa1VtV2RrbnEvYVpyUzNpMHIrS25HTnA0SXBmYUViRHJEOEpQc1c0ZFllV0I5MWVTc3dXcFMzd0JpSmwvVHlzOThRZlRiSUt4N1MvSzZhanRnZXBhNnBuNVpSZDJlYjA3M0w4TVd4cWUwWkhraDFEMlJpQzE1QmRlMkw3eS90S3JsZjZja0F2eC92ZkVQSGZJVHFiTmZ1WUlGNG5iNXlDbUhsbTZNQ0NnZVlNd1o0V1hRbXd4SG5KbDNRaDZrdWNyOCtRMldHZGtKOFJwRkhleVM3OFp5MUU1TExTR1pNejhjTHRxOUVocjBnbmR6bHVYUlozcDBGMVRlRGFhSWpPeWl1ZEZIbzd2aUpuSXZocm96YjJNWTBpZHhUZUJYcGQraWN2cEV6MnRvenlvTzR5RGJzdlpjczhwSS9BYjJzZDRxRTlocDBDOUJuMkwyQjJtcTVkNkQzZ2JTcldOdW1Gam9Hb0V1dVhKN0R0Z0dTRFVsOGNzeHBUYmNadFNlQjBTNkxHN3FXd1NFK3VSdWZmZlk2TzBCTERHK2o3L0Q5UmZMeDRrd3FYV1U0K1hiVnB1RER2VjlVclRidWtaMWlJZ1JXSDg1emRRc1hRbHgzb2MyR0w0Y2hva04wbmxEZkxjY25iNlBqdlZxUE9GdjJZNTlGdFpvSmJRZmNYTmllc0JLc2Z6dEdGKzFqYWhPZWNOSFdEWGl0WDlpR2hHMDdPVVEyNU41TkZwbVk0Qllkc09kOGowTzgxRFdrRHh2eFJGRklYVlBZZTIwMXhUWHlTQS9SZWN0UU9jdlVZa1VlQkc3U1c5dXpUa0JvZGVPSVF1cTFWYzZlOVZmcWFWQ28zQzJmQ2FhNzhpN3c4Y2xyby9OOGJrL21TcHZxbHE3UlF6dzRSVFlndVM5b2Z3dkVreEdkSVA0NHA5MXZEOXRYSGZUcGluZk1pVjB6cmN1SWxXVjBBdHNNTVViTTJYaFZOOTFEWUczV1NBOW9FZjRZWE8wT1d4WithUUhlSzZIbGJmVFlFcEZOSCsvOUdYNG4rQ0RPM25lT2FPakx6K1FPbEdocmxTNHlFemlQLzJRdVRHMWlmV3cxR0FlcDRKSjZWeDlhR0J5N1kwdy9YYmU5UUxaL1RHVHJGTWtDRy9FQlV6OHBnOTRCd3k3M2lyR0luN1Y0YWFmSVpOMnpoazc2a1VBSzJrQmZlbURlVFozK3RRREpCeVIzMFhrb3N2QmdSM0p0N1ZCL1VkbmFyRnZxMGo5bW8wTnR2VWwvcDRpajZudXpkbVpJam03ZE52aUhNQllJdWNzdTZSYkw4RUc0bjFSbUl4MFM2N3c2NXhXVmJ1eVdlOWJmRW40YUFLYUxvYlpjVVVDOG82SUJvMXpYMlhnY3VFM0hNTmRXWHYrdW43dHRnajlBZE5ueU83NmZVdnVsd1lkQy9KL0hkeVJqL0NHU3IwSm84NHM5L3B2U3BsNklRVHIxRXFTMzlORGFlT3I3OHdwaGova1QwZnZBWmcxRFd4VENpM05FdXJDcG5jWlJHalR5NytTNHQvZ3NVNGIrMWpIVUxlWnZYY1N2OTlaRzNidXlqdlM0dFErdVpucVBiRVJyZXgvVEg1SnB1SFpZam5lZjhvclY5bFdNV3NITTZBVEdxYitiekszZFJQOFpYM0F2Y3VWZU5PYTUwREU2ZXlUTDNjU1BYYm0zR1NmY1dqbjFqK3Bxa0k0SlBma2I3YVNJSWUrWW81WnZTSmtpaDN0a04vbkRVV2duZG1vVkFwTEhMZCtjcElxc2hSNGZSaTR2RmJhSTdNZkszMkQzdHpsYXF5SmxoL0ZLT1kxWFFrMVBxUHhoNnQ2ZDllcnU5MHZmMGg3T0llcmxTSmNldDZndWY5emJSVGUzeGNsaHNwb2NrRXlHL1IvQ21TS2FPRUFMTXRDeGNhMzBaQjRjM2w3NjRCZHprMTRieVJYZjZLWkxFZW5kNm9jTnNrbVBLSTJWOG8vRmIwSGp5WWd1cE15UmV5ZGY3THdxb21DWFBBcjh2MEpndGZYQ0ZmdjUyTlIzamhua0h0OWJPWWlYaUwyV2EvYjNWTStsZEQ0MmdSOGhIZ1Z6SWEwbTBKbG5MbUJwd1ZtUTM0WGwvYkFBeTBwTmJYbEJkUm0yVzN2QXRvckNza0xDYlRnS2tMdGtiT0RMaUlkeVNFYVRmZHc1cG5CQWUwSnNBcmRCTjZmMG5ibTgvMjg0WTlDbEMzdkdFVXd4dW1iWUs0WTNZUDZpVlZnT2czazhxYkJZWnNMTHVROVJERkxCUnZZZHVuc3R2VVB3dnpKdDBKM1gvZEYrNnNzaFowWGRsY3UzOW5Vc0xPN2tHUDVwekZlL0h4dmF6aXZXZGJrYndUcmd6czNQTUFjUVB5YnlsT3FNb0hPSzlTNzhGQ3NLcjRlaWtKNWp3VlFZZnhYdWhNaXQzYzBFN2NuQmtRZE5XRjVidDYyMlNzeUMrdnJpcFN6bG5ueU04YmwyaUI4TTcvZFU5K2ZLNE5CV0J2cGtHcEZ3cHFUTzU2S3dxRUhwQjl2WGFia2ZWK2dXOFJPa0cvTWQ4SWVRK01DRnowbVJEMjBjYmxXMzk1OVRyOEduUGNwY1h0bGJobkt5NWw3bnpWQkR5MWp3cXFISDFra0w3UmM3bnZCS1MwMlU0OXZjNHlheTBucDdrU0kxUWZweWovaTUxM3ZMUk9kL2FJL2I1VG5tN291M1d3SVd4ZnJ4TTZYb3NkSTVoaUdPTjlSeEZCQU4wRHRZdzFjNFI2eXVNQ01xL0ExQTYyNHN0RWRyTW81N3l3QThONEs3b2VSZVc4M0dCbHJuOUpzaVM0VzdTa08vUGZsbUdXcitGb2ZXV0E4dFF3cHk0eVcxRENray93WGZFSjM3Y3B3NGhvck9mODk4bDhPL0lnZC9sNzh2dnc4dG8zL1psbVNjakdLL21aYlJmSEljcytTcW1HVlVZUVdCL2xKaVV2UWprTFdpOHV2Mnh5VG5Sc2NlVGlLMjlXbXBPeWQ2eTVvMTRSMUpiYS9nQVBOa2JGUjhZZ3crdWk3MXIrU09vV1gyakN2YnFiMUYvYzNrWkIwbW9sZS9vNnh1S2dvamQwUDVnakJCNzFBWVhvVGpPWkFDRWZ0RC9ZRDlwdnJKTm16T0ZZVzJJeVA3Rit5Tm5XMkFYd2w4RGhXR3pnRmp3TW54anZKRGtKM0dOS2oyYVhSUzVCSG5neisvcy9HUkxnRXR3cEdzQ2tNL1dRU3VxV2UrSEI4UXYzZXUrQ1FoeHBGTXJ6Mjd0NUlVN2RXSnBGQ0UzaERqWVdKKzNIa1YxNk11ZzF1WUVidUU0VE85eU1GK1Rtd2JEd1drYjdVWS95WERZekZHalNJemZGMlcxdllRWkY1RzFvdnNvSlhiUm5xLzJnSTlvNmJIRTErU3JDSWJPcmVNUENhNnhaN2EzK2o5ZEo5ZHZoc0RjQWllaTc1WTA5K0RYekZ6K2Q0SHhBblFPZUk0Y09ZbjFIOUYxcnE1UHY5UmV4TG8rbWlDN0dMRDZIRWovcGhCS29zeEJkMFgyMG40L0J2MFlPcmZ3UHl2YnBNeDk3aWlFOVlXRTVNTHZiMjhOOHdlWE5pZllwQ09iT3gvQVA4am1wYzdFMUt2RUhMSFZISGV3eDFycC80OEpGc1ZlUlJYTVhCOVBZNEVpY3BFY2hkeXkxd0hqaXp4b0FjK3ROWnB6eCtPT052b0I5WUc3V2QzZnk3VDRTNktCeW9UMFZwV09ENER6OUo0QWZIZmpKQjlIVHE4RGpGU3F5NWpXZXdsWnYxbk9ITjhQL0FUcVhEQTExbUxCMlp1VzE4elBBem9iZFFleFRTbkJMMVRNOFBRTlFWa3M0T1BCZWtJYndHT3hZRk03S2UxczhVZEd4Z2RLQ0l0LytqOEdCVDFFb2Z2WlJ2QXZqSFl3OWZrblNMMlY4cEF4VDZxK3JtL3pRZkthNjFsNjlmbHk4bml3eGp3UnNVUjh3N2xubmxJODRHeTFXVDk0Q1g2eWpLMTJCYlg5ZC85bE55bzZBN0pKTmkzMmZtOHBOMXlKdXpST1NOZXllNGw0VWNSc250dFE4MHM3SE9BR01ZNElQSG50ZDZ4b0QzMkFzZnBCdjZMTnQrK2d0OXlDSDZCVit2TTdtWDNtK280ek4ydVduSEw1VjM1cGd5MXdqY3FGUGt6MzFhdGZiZFNDQzhVOElqbG0vT0JzbE1HSEtRRTFuTjlPdDhVeHA2eCtPUGVONlk3bSsvdGJaN3F2MmQyamFHRGZvcjBRUkxuM2ZzRjEzS1J2bG1lNy9tWnhEdjd3T0pPVHdJTjc5bFltN0YrRGNocGFwUDRlNGJvd3F0MUMrakcvdERmZXdEYTVPMXNQbzh4SFZ6cUpSU3hYMWt6Y2psb21JT3NoMTV5VE1HWFczVnFxZE1LNFFQanhOKzd2Si9aTTZ4dk45d0pnamZZajJiVi9rZmkyWHVuUnJlcnlMMldBL2xxOVp3bTdBUEUvTmZpajZFSHNhd3c5cExGanZyRUwvaU5tWEplOGdWYjZ1djA5REFQV1c1MFpOUCtSZTVxcjdBTU5RTWJXZTV4TnNUaTdjS0NGdS82eWgvcWhmMkZ1L3hGbmp5WjFqcEMzTVAzZWl2bmYyc3ZZOUFsbW5TL3VneVhlNGtpWTU1RCtBcnJjejk0U1k5M0RDMzJOaE9HNXUyOWo3dkd1RE5XN3p2UHg0eHIvc0tHL2NHNVMrak1MRjQvK01QSm5zazl5T3Y5STNvVi9SYnFEUjZtRjY4enBFT1gvaStpazlna254RnNpQldTMTE0Uzc3RWZGZW4yb0J1R3lsQTl1SExjR3B0MmFwdGVvQTI2ODlMbUdQbzRQbzcxdElOdmpETEhtQVRMQkZLalh5QlBCL0pVMUwwSHJXeHY2dVVNUDhJNnNzK0hhZWxIR2dxRlk5cHdweDhZbjZYWDgvRjNpb1J6c1h4ZTZ0Slloc3QzczJWcE04RjdHRHVqbnAvbDhxTi9JdnNBNlZMenRnQzBhQmxIOVBzcUxnSTY0UzFkOHhLejAyTGlNRzZpeCtBZng3N1QxQ3FFMFVMRS9CUHZDN0pid0s2Q21NcTV6d3JpVHRGa3BSUk0zczVBV3J0R2ZNTDV0SUpwRzZNdHNrRWdib1pqc3hlK0hMQnBHUjlRS1hPaS9tRzhVcmhYbXRQemVjenQ0UEpURW5OVFk1TExHcnVKZG5ENWVJZGpvVktMNnZYQXZ3Mi9nRmhqVGNjRnV5VzFaWnhMNFBONjVNaTl2WE1SZis4RzUzbDFOcElOaUZkaW4rVUI4cWtoUmpvS0lVWlRuamZKcTBwMGlQdGJocmFtTmhYVnMwbXU3RTZNdHYvVXNjNmZJRjdwUTk0SXVrc1ZFS1MxV2JPNWtrZ1BYOWt6dEgrVDQzalYzNzFHMjFjeHhtdTg5T2R5Wi9uaThVNTU2ZThtcThYdU5SS2dEdzMxaVpQNGVvMi9LQytEM1dRKy9SaUxjRjY4SXR2cFVoUmNZcWZnZU8zUHhUTU92bkhNeHFjcE4xa05hQnhwcFF3Z2hsN1BWMkJzYVpybk1VTm4xNTY4VG1mMWN5VTYxVVZlYVpWdlZlWTUxbWpJTFlTMkk4ZGxQTTVMOUtOdjZDZGsyME84cmVRVHdCTVhjMm15VXdZeGpwTVB6K0xkK0E1em5paXNjQjVHSzZqN3lZaXRMbU8rNDVpVkg4R05oTnh0cXkwa296eGVQNDN4WFk1ZDJjbzlQdDY0b0NjaDJhbWxkaEt2Y0V3ZDA0M2IxamVPMkFsMDdQTW5mcDVlUXQ1Unl3K3Q3NGU2ZDQwRmpabmovZyt5M2xIa1hvRnNIMmpwU25QUmNha05qY25pUE5wSWdGeGh5UE1kVGdMb2x5RVRIWURRdndVNnVSYTdKcExKVEM0VStzNDRabTdiQzlBZGM1bDhGZWJlSWI2RGZVSzhuZUI3SGU1OWN3cDVHK1EzaUhmdmtRNEp1Uml3dGh4eVpTYXpUakFGV2N6a29ZZ0M4REFrSjl5Mm5SSjlPTEJtd3NvMlJ5M0hRTHBKcWNOUStYQ0NibXdzVUdjVlZ3OUJSaVpjaVBPYXVRUHdYNkFKZkVjQjB6ZUp3UVlnL2h2c3Q4QzRzNXdIK2tYOWJMMmlFOHdNaS9LUHMzT1hNbWpUTzF3ai9waDZiZTFFNDMvQTJ3b2hYc3B4eXlzNnI1T0kwTVdkL0piUUN4dUxSbmNFWWtvV3BuOVl6NUw0dW1oY2FpeVc5NGo0TGJDUGtPU3RuTzF0NTNWU2RBSTlrVElIZXA3Z2ZVVG5QRGQxckdNbFhsRHk2dUx5WGtPZU05SzkycU1ZMjlkVnpMektQZSs4cWlLbUFYUzNtTnhmdWsvUXZwanlsbWxyUU9Oa21CZncrc3BMOUJaTDA1RGZnY1lXKzBmQ2N3NFF6Ni95cUkwR3ZxVDZacm5PTnBXamwvSHE3Z25mS2VBdGhRdXQreUVQQ3RGdENMNDRvRGVTZXpVVFhxWlUxelJWOUh1MEQ5R3l6RUVrTmhnN0ZyNTNKN2NBUFpqT25maDNpYndhK3JHVmhIdVh6NXJ5RkVFZlF2ekNrWHNuMitnRWRpS2xMcjZ2QjlwckF1Z0l2K2NyN3lDNkNMSWxqMWhQTnJYVVQvU1R1STViVEM0RnJNRnRxeWNINTVTVXRHcndFTlBJcXhxVEh0RGdHUExycEkxdGptN0ZPcytlVmZiQXgwVXV0NHh1YUlPdURMcFhXTmtBUGZBZitrQTN2Y3duZkpQazhCOTlJeTVzWTdvVGc5UnV5SVVoNExxSVppWVlOenVDT0NUa25lcUQ0L3lDQjdEOEMvTkIzakVHd2ZrOGNVNGlrZ2xhVmFOemtRdkQ2SGt4UFpmOE5FN2duU29kcTU2emhQUHBpQTVkK01ZQ3JXM3FRcTcySXJBUnZ5VTZ2MlZPRytZRnVSMTdiek9LcmJhR2RPRXk3eHJ1R2NRY3F2dUI5dzdIUDJhNEprSHlOaU5rbTVnUXcyRHJCVTViVXBNRklNb25aRFBPOVA0M3hBTjk0RG5Ud0FkUTdzVTNSVlFpNG1QR3Vqak11WjRuVzg5RElib2U0OWRCdHAwLzlHTjBGeVppNXpTWmRRNEUvUHM0WGltN0NmQ2xNczRDdm1VYmZPMUFBNFVIZnBwajZ1QzRmWXJzYXJETndkZXI3bDE1OGFxWm84SnRLOThVU1o5cTNFalFCb3RBVzB1aitVQWZ2RVZWTHBVaUtuLy9jWHIrKzQ5elBUQUNmU1oxTjNib3lqR3lRVStlcks5cS9SZGV0c0hNNkdLOVNpVCsvdmsyVUNMbEc5SURiZU9JOCs3bE9IY1JuMGEwUU90VjFsb01za0NFMk1ZV3lYVTR3NkcvWGM0d3IzYU1UbUMwc1U3aW1PckpOL1JiZHhEckdEek5mNlo2NCtDa3JxYjg2MHlJZkpQRUxSTDk1UEpISHVkakk5NVo1YytSM0svT2NoaDJhbjBDZUM3MUI4emE1VDdtalVETGVsRGFyT1MzRnRZSHFWeWdkbjVoRzJYK0wvQTNxbU5pMmdSN0d2c0toaVV3ZTJBaEhYdGw3U1p5bjhZMFVwS0hVZmdpelNHTUVUL3BRcTZTV1BvVGlIM1I3ZFo2YnRDem1oMGdENXJRK0Rka2s5dkdaRmZLdzNVOGZZdUVFYVVCZW9mZm9uNmtyTGFCbmNTeEsyTWR3REc0SE1rc3BNZFlwVXp2N3BGY2R4TWY4dVl0WHVXOGlOb25RbEIvVHo5U2tqNlZYZEFQQ3VtQ2FLOXN1WDZmRjNKdnJVaHFiTFgxd2pHMWJzM3VKTEVxNHJzQjNuN3orUWprSDhRR2x3YmMzN0lIV1dXUENVMjFMQ3lvT3VRdWdNNDRISEZXVzZOeUZjN2ZBUDhMcmxFa2NydWVRMzNwSDhTKzVMWVdlb2l2TXJhblBlT1EzcFhYZENsZTM5a0owc0VYa0Z2a0pscm9KUnFhSzZOL2NuUmRhUzFHYys3WHU5SFhhTTcwTWJ0c0JrQjZyVjNtMVRmMURHcndVVlhqa1U3d1Y4YnFmL0t1UHZTUnRFWHVaQnNxNXlWeGE5bm9NeXozN0J2MmRVQ09LTkxadmpKRzd0ZjNiRGM1RFpnWXZFQWJFTHlLbTBNdzQvV3VNandFT3U2cjg2d015aGgwOEM0S0E5dFVWMTRTSDBoYzcxbmNIUEx4ckpXUFRmTHZqSHZHLytMLzNzWHEvK24zNkQwV0tkMmZsdzBPRHFWdkNmMi9OY3g3bGlnOEs2SkFuMmQ5U2FFdGF3clNkM0VOMXBYZlN0aWZnbXVmU3oxelcvNU9Ic1ZvajJ5b01lcXVzVDJEOWx0QXNxcFdSOFA2UHh3RDIzNFdEejQ0b29zODErSXpaL2VtOUN2VTY2WkxQd0xZVFdPRGx2ZlRXcm1MSE5BOTFTOWRRenFNQ3pXMDVXbnV5SHBvNDV5REszdkZwY2kyZC9sdTVmY3FMdnAzUFRNNUJjK0tMUHo1YnZTRGQ3RWZ2UGZUNTdOOHFKMWxhQ1JtM2R2cDFMWnBUOEQvNWc5S1hiUDIzQlQwcHU2NjFJMGo0Vm1CK203Z2JjK0tqUG5zejc2ejZvZUd4aHp0WGY2QWFCZnA5cG5ISTNsNFFQKzl2b3RmMUIyUlhkWFdYa0N2VGpUR1AzTUk4RjFGZEhRSUxGR0pidE53NDdtYzIrNFhlelJ1NnljdklubVlZcS8rdkRraCt2M29LK3ZFdHFHTzVORW85Z2ZwM29wd2c0N0x0WTFvdzVZdnJSSC9WcC9iaGxyWXB2YnE4c3JPS3p0MjYxL2dCdys4aDlkWHZqbEsvV0g4Z3ZiRk5zUFc1ZnV5Q1B0MC9LbVh4RHpVN1BDNmhQdklrdk5lcFlrRnZSY1BrWFhXUjFWWnBYOHFpVmE0N1g3MEZtZlJkSEdjS0RIWEcwTmV2YlNlODkxc3FRTWR5UUJaMG82UmJwOHJxeFJxSjlCenZ0RVZ2SlpmdUczOW9LeTJ2RHBmbkNiUklmSTIrbTVxcW04dTM1MjVmSzkxOFJ0T1A5bW1FcjJ0TEU2ZFQ0cXhPRUt5QXZ3NWkrRm9ieWR4WnMrVWI4dGlCREZRWmJXTkZoc2QxMjB1U240ZnZac2MwTkNpM0MvcUo5RTdQdkhIbi9zVlNHd0szZHZRTWJvUU0zcmtMbCs3dXpRUDVWSGVnTTdXU3lUSjNkaVlwdVQ0UlBpYmE4SjRnbURMV2dyOENQTEI5SjJmeElYTGQzUHNZd1NvR0pnVHFmMDcyZWIwc1RsUW40SmU5cEs4dU5NYWVvYmMyU2t6amlKVnZvVW0zd1RJSmFoYmVlU2U1L0h5QzN6RlFickJGL2l6KzVtTUwydFNZSDhqZXlZZytVNzlkY3pkN2xSK3RQWmpkSVg3RjE2dW1YMytTMnRqOU01RjFTTU0wUlhKOFFPOUtWaTJ1Uy93WXlLUEpUVjJaWDNseTczaUYvRkY3TWNTMlY3WUI4QmJjZkhkSVBWYlh4NDNkUTFwWTgrUVR1VkRyZnU3S0NEN0EzUWx0Qi9LUnQxYWM0VlRWOXUyTlo5MExONDYyS3VnOWZiU2I2c25QYklNS2JibjN0RXlGRzR5ajFmcWFjcXJocjJlR0ZwaUc5SktYZGtyOVVVNTJpdWxZNi82SGZYa2RkUmt3VTlPZzVZNnQrT3ZuS1VuU3kyTEQzYU93WVUyNVBMQnY1ZHpUeHJxYzVHK04rTktmeWpPUTlZMnR0R0pmc0UrZ3I5Z1FmcDhOOGppa2IzdTduMEphaVpqZHpQOUZlOXNXWWJYY0c3V2NieGE3TlN2NkJjYm5CZlA5RGU5b25NS0U5Yk9SYlkyRzRjazV4UTRTUytxWXdoOWFiMUlSNGRZSXQxZnRwSGR1eWhFTHQvTFlKOWxPM1NIS3I0WEErcnY3Ry9LSEFXTzhuY1A2bkVoUC9OTCs5UGQyNkN6a042QlVTZHFzTVAzWHFFMDBPWXhkVGQ2NTJmbzM1Tjc2K2xaWGVZdjRXZDBmUnVoY0l3ZStEdFlIS3FyK3JPRS9jTTJ4Z0E1ZUVtOHgzYXZnSEduQ29Ib3FHV01xNHBMa0ZvTUhMOUErbXgvOWJVNWp5TExhTmlIb3RLRDN6YmdieU15cmViSHVaZ1Bub3N3bTY2bGw1K1l6NDdHaks3eTd5cVBDYjlMeGpnbC90ZDRRK1Z6V0FCTnhVdnNGMmlrallmMVJ0Rmk0MlRrblVqWDBVNWYyNlBMaG9XTmV2NDl6UVlqNVJ2TzBUcEU1WjVYZWplbXY5VTJVamJjcFE3SHhJZnF2S3ZLVmJiSzVvUmZQSmN2TnptOFJqY1M1OHZQT2Y1OUxSOHNyUGFTalBHek5IV2pHV2lOLzViKzdFTXdwV2NnRDVybjl1dm50THZKb3dhbGY2bjhMYTV0eFB0SDljOHZ6S1hsOHNlWWlSVS9LL0l4SlRwVllIQmY1OE1sNzIvZHRQUEpQRWEvNmowVnJvUDVhK1hLMlh2dTQxWEZDTWVpT2NpMVMxMVozOWdML1dUeFVrWjhidEZiZ3VYK1dCeXRMRk1JclNUT0hGTkxiWE1TdlcyeXlCNk85cDZvZkRPS2tUQWZIQ0xUYkdYS1poUmJoZ2F3cVl1a3QvY0hNUFpwYWFvdDIyZ1JXYkZBejNIdVdqcHA3ZEhlTi91c3pVN3MvKzdlalVkN3R6MjkrSTF1cXJFWEtkL1UxWUtibkpSTTJhaXhoZnZSVDcya0IxQ280SWZZYUYwUHlhZG9ORU4zd3pHNFdDdHpza1k5b25QTkszOHkzbmZ3aStDY3lRYjU5WFViSC9EL2dOOUEzaEt5d3pycXkvVDBCWjJWeVNrOHIwdjVKWFlTTTM1VlF6dlRoU3UraEFmMXJVZDZqWXRDNXBoa0xWTHUvOVJhS3JrSS9iZlJtQTZSamRiTHREWGhmMm90MktkMHlVZGVtUGoxYmZza3NWTVgwK0UxKzBCZ25vRmNHd3ZSOVl4amYxdjRCdmhzcUw2QmEraUhLdVJ2K01hUit1MHhsb3M1Q1pSQ21ObUdkY3VQWDhXL0lPNmx4dDVRcThYQVNqODk3SkcvRzVzUXE5bTV2QmFEdjc2Y0grRHA1WmZ6dnFxZlpxN2NheS80YnVvTmhkZ2ZYTkk3SThleFh4THYxWUxFL0Mvd0pDaUdqbGRBL2dlVEsxdlBlNFc2WjRpWDR6bEEvaURFWGNvOHdaWWo2NmtYQ1ZBZi9ScHhKemVKRDU2TTh3TFllWTVGa3MrKzhWT1A1Z2dVRUk5TzNQWW9jc0RPNndUalFsaDdTUStOQVhGMzlKa1BtQVFUSE04WmFsdTNEVEsyUG40a0RGMjVGMkVNTzdKWFE0eGhSM013NTRaMG9QaG12Z3d4WGJUdWc0MWpiRmZvL2o1N2FOcUFaM051dnpiVmwydXlmbkRsWHRmRnNTWEVjd2VXb2VjdTM1M2I1aFRSWnVOZFFUb2U5a25ITy90bll6cElEMjZyS3d2ZmpaMlY2RnNMeWNUSC9WbWNML2RBaGtMZDNUMzJ0SGpYK25MTERHZTJpV3RsOGZwS0dYS2NQTEEyMTRoM0M0b1hoZmxyaXZRMHRMWkh4dkVSSGZGNmE4b0p1bzVvVUk2L0VWcWMya2pITWJvdHdQMm84ZGpGNFlFMXR5eHp0TEZOVGJVTmJ1OXRZaDNSckdPbUJIOU5pTDFFQlR4TzRxc3ExNkhPaGJ2UFNKZjEzSk9QVk9lK1Y5YVFYRWJ2S24xby9IRnZnVi85a3Y5NHlIYm4wZjB1N1hhS2c2RmFaaDlqbzBKdUFzNVZiTGczTzBXaVdHZzRGNm5NUFlnRUJXT2dRcjV1UnZOUUY0bWVqRmZiNEhwTlNvblRrTHBOdUF4dGlLM2tkbHRQYlhsUjRxWmM1UDFGUFpybm1WdG1mOTk4Qm1SUFduZnFMaGM4WDl2aldoeHBiY3UxZlR6TG15ZnZhY2c5TGIvanVkQVRPODAwei9CTk5zL2l1aTJFNVlSWDBOeHhMbDJXNytzbHpCenAvaUIrVCtzdmFwK3ovdlczUWlnYi9PTllRWC85S2drL05BbmpEUzg0UVppMkZ1blZ2YWI2NmhweU5CcDhaN1YxVTd1dXltOHhKNTlqMnNoazdDdjdTSjlibERwd25UOHJDV0RIUkcrcjREQVdSeGcvcEZDK0lmMlk2RDRNVmt5WnB3dFliamluaTJCNHptcjd5ZEFDc2gyMUdNa21kQWMvbmVkZHNWS2FiOEhrTWNtVnpWVmlDRi9ac3l0K1cwbzdDeHZxQWFVV3J1V2svRUVZMitiNjhneWpXM1lxc2RIMWlpZFVkNUFMdmNFVnVyZzVwcFo2UE1SUUppU3ZSTUt4R3BMZmNDWC9nTlROTk54SE90NGl1SkxiVHQ2akJCcjJENmZYenRHV3V5ZXE4MXpuS1FTakV1bVh3M1ZndFpHTzNzc2RNeTFyM0tCMmlSbHJIRFdlMTlyZHFGTWFsN3pZdzNXWjR5Yzc1dWhFOHhQT2FzZ0lmbE9wRjdiY1FpanRCaTJKQzYrdG1ZNnBiV2R5NytRUHVqR3BOOEgxZlRoWEV1a3NzU0w2Z0JzMHA3NzVFNm5KbjNrN1pYQ09yZUZ2d1ZZdWF4a3d6bGpwMXk4TzFIOER2Z3QzcUpOOER5UUxLRStBMzJ5OFFoak1ZNmlyU2NoODJvNko3R1VtcDRldEtaT2ZBNGZYWTAra1k5dXdaNWp2NGJ3OXg5RG9XWHk4RFNlMWVVSHNkM0MydHhMSU1JV3UvOHA1eFNXZHJ1UEJkVjZPWTVxdzNnRjZycXdmd25aVmlZdFhZYzZlMVh5bFBxNExPVFhMSm56bkxMNlhXd25HSmlhMVhLRXlWRGxrRnkwaEQ3ZS9jVW1lMDZqNFpEMnh0cGlMMTNLTGhBR1RmeFFxOGpHMkRNRDJqNWw3aTJpUDVnNVQvTmZBTWVGOGtTN1dvcmxpWXdQdmoyMU1NMFZlN093Q2NtSTVqKzlub0pQS1hJQjlrZjJqSS9kM2loZ09xQXg3aS9xbnlYQnlSVjRSblhsUmsvbE1QUWJWNysvUGthQzVGWE1qemlHM2haOWM5YTlxNUZsRjVsTFhBSG0rb3IxWXNMK0xRL2V1UUxxNEJSaU9ZTGNRM0ZMOC9CaGlMYVBZcnV0Ylp6VjJYR3ExUjN1UDd5VysyTXNkZ3dOL25GVmNzNFBKdnVqYTNwTjdtY3Y3M2FucGgxNml6OXkyM2lycDkxRmJtS3pYSzRTRjJ4YjJydHpiTEdlQzRQTmdKMVpqeTNZTWVIN0pJcVBZNzc3YzIyRHNUSVhTTHVzRHJtRUdNSDZTeTV6TmRyV21zY0h0YlhuUlUwQlBmNDZxUEV5TjZIM1lkcnF5UngxL09BcW41bWh6SThaNmx2ZFNZZnlEM1FGNTdqN3VaMERpc0I2T3RiVmNwcTUydktCWTIyZjI3S3lMNUFUa3kzaXl2bklNdTB2dWY2bkRFU3kyODN5MzdobDJZZU5kWHc2MXdscWMrU0NiN0pZQjBvMWpJbU1PNTNwSFU3NEpxYnU2cUNmYklmM0duZ2xYTWQxY0dlejF6SmFsQTdJWHpuajlaOTlEbnJaZDRrVmNrZW4veG53bThxNlJtOFN0NlptKzFoU0RxRCtEYTlrdFBpQjFLQ01POEFvSUw4VXlVenA0aEhZQmx4NXljcWxmUm9JZU1kZGtGejUvYm04UDlleXFmM1JRZnM5Z3BzTDRPY1IwenV1NFpCWG1SdnZCMER5UVczZE1UM3FaYjNEeEhNZlo3anVUb1kxMGlOeGU0SmdqT1ljbXVnUDh5WnF2UGJwSkY0YkxIOUdkZld3ZTV1U3FYOHFUZTlmT1lHc2JVdWJMNFF0Z3liZXd6blJOZDU0YTJwckJ6NDhjcUtjQmZrREdBV3o0Mk9JenhJdlhudHhMM2MyMHFrK0d1aVNRMHlYTkVoMXhqM0hHTzh3YVdIeTM3aDd5QnFyM2wzamhWVDhKanZiNWVEbXJOeit4R1BnbDdxTXNOT3VXUmo5d0RZd0wzblJHanF5SDdsRGJUbUdkK2RReXRXMkQzclduenkzSjNpMlF2QmNabkRYeXZTS3JXOXRRUDZEMmx1QkFBRTYwZktocXY0ZFFzN2V5alpoSHNxcnNjVVF3YUJrYzliSW1wSG8vN3Vla0RKRXNRUHFvaHJIcUVvek5Bckt4dkVONHY2RVdINTlENnVFWS92WWEvYUE5bkJySEZPbnUxM2pLdVgxUStSTktqSXk5TFFwblkxM2JmMkl6QUM1UmR0MFhXZlh1V3BQNEY4YWh4Ykw5WmI1ZUIxWWlnZXl2eHdlcXVyL1NSeU9HSngvekhlaURZQU9PcU40QzNEc1oyU0dBTVJEYWNpc2RsL2dJNUIxUU40anVsWWJQUWRiMmJ1UzNrRTYyRklXdWJhTDd3ZURBbUlBTGduc2x5YjJkeFMrQ3U3RU56dkJJQVJ2Qm5Pd25xMGwzc2lJWXhZWmUyT0N2YStLSE1FK0lKejJhUHdYbkFuaWkwODBuY1hzNFordzc2UktmUnhma2NkMi9HaEQvcXM4ODcrRzlFQVZDMDUrc1lZTnhNc2NKamdWZGlaR2R6WjAraSsvV1ZScVVTejlEbzgvMEVackhkdWtWZWlmeTY5TTg5cXY2Y3YvMnVIeFlRUDc1RjM5dnkvSEdKakw3TEZaNGN1UkJvYzZ0YjVZeGFha3Yyc3ArV1hPVHVSN2FxMG1oR3FOUW5YdHRhN1hvcW9rZHE3SlZxUHpncE1xamVHSkk0ZVEwT2FqelNjZWVoOUhrTkdoYnhyUnJ2OWlyTjltTzN1WmFiTTl1K1hPUWJlVEg0MFJMYlY0LytRTjE2eVU5b01kemU5TGp3M0N5V3ZCdnliUXpPUW1KbFF5NkUzN1J0ZWRDb2hwNk1wbFArVWxpY1hheTZGaHpmMlcvK05Ga2JyVW5jNjlqcmJ5dVBiZFhrN213bXJ4TWo5YkpYMXZ6UWRkZVNhRjFzbmpMdUZrN1FuTTB5YitYYzJ1b01hcmIzY25uNStNTjljeVZydWVzend6N3pXMXJVL1FlMEMzdkdSUHh1a0Z2NXc1anFGM1Framl6VGJVTFBzblpvL1U2NUt6cU9SUzFHTWpieTRqMXQ1SGFVaUZIZDRyd21jZ3UvVTZJdCtrc0R1Y2VjT2I1T0hUUm1MRFhuY0EzNHZXUCtlQXdtWVZ0diszbHlCNjNadXZBNXRIblFmRTY5TnQrd1VHOTRPdE0ySGhKai9PR2s5N2JpN0wxMjM1N0REZ1JnL1NlTmMyVDNtNUI2ZThCVzcvY2Ixd3JvZ011UjQySERRNFQxaWFtTmZBeXgySGZGOFVXcGRqbjAzcHZUTGtIL2JRY3dPVW5jNDRFempHbXZjbThmenpmQS9UNXhmcGxYTnZpblZxZFNWVGZ5NXRyNHZVVllCUkFMeEU3ZGVYRnpxZjFpbWMwMmxUWGNzZTl1cEg3REgxWWI0OVI2N0U2YVlnekVKc1orNk53NzdWRVdqbHRIMnBqWWQybUVQcHlIRG5HRWZJbmllNVJ4YU1TTmJNQXI2bm1YOGlJelh3K2g1MHlrREtiaDV6YkxjR2NEU0htem9Oc09JMUZJY0YrMmVZZXNSVGpBR1A3UTgxekJ2aStaVTAzNWdIajgzNXE4aEZ5dElnZTlkbjhyNXc3NFdVdC9KdnBKaTd6aGEvNGVhWmUwbHZoWEFhYXE2KytrRnpoQTdKcnNOenNiMnU5VWFCR1hhS1l6QlJUZ0oxTGVrV1hQZCt6R2RPN3FDSEdJMldPSVowZ2Z5ek8vYkU0T292Yks5K1c3VlpXajBlTmNKM3VUUG1tSkZtSDVLSmM5anlMRGxIbGUxVytZUjY2eUpSS0o2dnl5SEF0Yy9RV2pZaU1VREpsdytqNm0wbjB0c2xwZmxpSnZVMWpEbDZpSjFVZUNQYnRNajF2OWhkMkZqay9ObWQvek9TZGtMMkxLUjRPVzdkUE1iRndIZ2F1djdkSS94QmJGRUo3QTdZSjgvNU9vUE9Md01iNVBhMnFiZnEwRmxPMHhhYjNINEtsb1NOYVBybUZFREwrOVpuTGwzTzUrSHlLK0E3RzJVRDNxN0JOaVhNQWQrZyt1bDZVOVkrZ3M5MjBpeGk3cWVvdmMwSHJuVEpQRm1KTmJTRUZXNS93RWxzRzNrajdQZUkrVCswSnhucW1mVlJKWGd5MGtaY3gzV0piQm1obnAwZ2wvanI0Zm0xWjUyM2p1UGRrM0kvWk5ycThZNDcyYmdJOVEwdk1ab0k1Q0ZqWVRGL0hNL3NiOE1RT1h0SmIreVFHTVRZd3RnanpHemFmZEtmSWxYL1JndDVCV2cyUHJyUi81VjdoR0g0S1BvSkxIckYzazJQMzhidCtiLzZOSUp3OWQ5VVArY25kZVhSK05kNnNZOXlZQnZsMGc3OGtaUXlhT2FjeXBqOXFrRHRzbjZIeldHYUdjeE14N1p5dkZlSmYwUHVKNUo4TlJ6SEdDWTB6ZTBiOUZaWHVVdUZOVVYwR3lTekUvNTVMUEVPTW9TTFJXRlF3bnRYajQyTUR2OXNTR2YrMzJIVEh6dGVDYzB0cTdmd3ZlNDN2YmJtMzhnclF4VmUyS2JROEJ0TVVkSFZTaXdSNVUxVmZtcjNDOUtpeHFGN3hJRTloWW5KWDlXekFhY04xRHRWNThCUnJIZVBWVmYwcHlYMXBBWlpIb09DK2ZZam1VaHZqZHhFNmJ1Sk5nSWRYNDlkc2YxZEdqdUE3UEJ6RmNJK3d2eWs1NjFPYW8vdnVZSnpsS3I1dy9rNWVQK0Vlc1YvSThTejdwK2pvTHJEWTFneWV3L09xMnVNYWppaTV1NDM2Zm4yT0hITy9yL2xSbXVvZ211L2ZKM1ZvdDk1OUxVZW14Z2VJYm5qMS9qOU1vNTRzRldoTVg2WnhobWIrcVVDL3p3em5WODRxak1vS1EyREJ4SG93SnQ5RnZPczhCcGowaXFZWWRjbFg0TDhxWDRMcGIzR1piN1ZST2RkZ01MY3U2WC90UWg4MjBKOUxYUUhuY2xYeHF2cCsvRVY0REsrdnJWazM5T1RZS0hIRExuMDRIN2FoaGRDZnZtMGRTWCtuNDAwZkFSNDNzZzNBWWtiMndrUDVxK1QzSzNSUGJMblh4cm1SOGQ2dTF4cWNKaSszOGlMejJKWUhQNEVoZ24vdkdsTG5hbjdwWExyajkxL0xUeVY3Y0VCL283TWcyTnc4b3FYYUdLZlA5d0RkSlYvdUZiYXU3ZWZ0VVlwc0JNczRsdm0zVTFMYjlHQk9MNldMbFdVY1kzdEF6L2ZuY3BmSnVwSHR2N0g1NnpIS0srdE4zYVFoZHJXbWZWVzRxcVphQXZzNlZHUTJQMXNqT1I3Q0FQZmRpakdlVnZQNlN3eXZxLzdmRWkvaHp2ek9RVzJld1BNMVdZSyttZ3VDeldlTEpZNThyZjZLWUpxdTNRTGptcEUrTWJXWUd1QVA4bkd5bkZYNFkxZnkwVFBIc0dPckhhOWNlZEZVYTNYd0VuM3V5NzBEeGtmUk83YUJhNmpLM3NSUVI2WHNmVjVLZlpFN09VTzlCWGM1R3ZudkprZHkxdUljNDlCaUh1OG1aZDdPMmt0S2ZvLzdRVlU0WEUweGZZaHIyTEtlMlJoM2xjSEJQYVoyb3ErV3VQY0ExTkM4UlFMa25sRXNZdHhESCtvNk0yWG9ROXdSMTRhQ1hZbnhmeXVkcTFYck9iZjJDOENNa1BYQ01YcnJCYStqTTExN3RBLzV5K1FBdGpiZjI5a2svMkp5NmgvR0ZEdVZaekNHaDZQUU1YQ00wdVd0K3A1c0pvRnZZanhBTzRuUjJhSTVjSkJ6RWdramFxTmJwWTNIOXZIcW5naXVMeHUzRDMzeHdNWWhTUDhwTGZZU3BQTkFEc2ZHUzZRVjJJWFlwOUtpMkpuZ2k1dDFBaDNOeDdBVGFsdml1Q0gwWHc1dHBMK1RmSFlHVTdERUdLZjR3Rk1HQzR2Snl3bHd2d0M5R0p2cTFqZTF0ZHYyZDJNazR3MGQ5RmM0TjlaR2VGRmFreUhCeUpQMTBNYjVac2ZKY0xKVHhHWVo2RUwvNEM2UzUxTXY2VVgyckp0WVJweWgrZWx5aU83WTF1V1A2N3JQOVpiY09LWitvdStRN3JRWWp2WldzdGhCdkdxQWRHcW9CYjByVnZ5VnNTOXJ3QWFIeVdyUnVzSERNemd6cE1OeFF1SHlvNWpFeVlhMk9kMTV2THExbTJ0SkZWM1NwcmQwZ0laOWhib294NUF5VGRZenk0em5OdUNpYWFmek9UODAzdzNSRGFUcWp0Vmx0UERRZm5wdEhmY3g1YlF0a3B1TzNNdk85STdqWS9PajlLcGRXZTh0SFlJTGx6SzZpOW9FK2l0djFKamkralhuZU5MbklmZHJaUnRkSk9NK2JCUEg4b0gvSmhnRFcrUDEvVnlPVy9ZY1pFekxNa1lZNHozcXIycjlpUkxjSzlVeVE4UnYxaGdIOWJtWXZBeTY0OU9nR0dNYkVXTUFHOTNXMkNCeEJuT1MrL0p6YmhrcStHOUJSd1c1d0JIZXpHMXNvNWM1cGhaUEloeGZnRmk4T2JsU1kxSDF4djY2VHNmMDE3NnNYVDFPWGhST2xXL1FkTmxUSGQrMStSVXNvdXE1MFgxellmdFljeVBPbFJkWGVuMC9wa3V4ODJYN2dpODJldlk3ZkZ5TGhuVjhaZTIvNUh3Ynh2VTJOM0xNbXUvekhmM29INjE5YitqeFByc0R2Nm5Nc3lBOTJzdXpaWE5VYWM1RjV6TjZlTEFlV3BqQWZzbTlSQm5FMDZybkpQYngrK0padndyY1V6M0hmVkpHTFZ4N1dtSTdRTXpLUi9xZGpPc2p2bHl2ZThPWFU3M3ZlY1gwRGMwZFV6aGQxUVVhOStmbk1JNndqN284OHpwT014TmJ1cGYyM0xNZU9Rdmk1MWtrcEIvOEEvWHNqZXU5V1ZQK3FUN1JPT2RyTWQwcGc4MThVNWRvbU9mYzZPMGNVOXNURE5uU0gvUkZITnFHZWV1cXkzZFRaRGZmalVsd2YxM2YvSElkbmErcy9ScmYrRFIzNTVOeDZYN01iQVBUUC9qNkhyTEZHL2pjZ3RzakhkQnRLelc4dlFmeFZqODVLd2FQV3Y4eTN0N3RkMnhHTWNGQ1ROM0UvK2s3eCt6N3lXcVBRay9XY2Yva2pSMjZEZmxLazVOdytvbjdRdXVRSjR6LzRtNTU2QmhkZ2VYZGwvNHNRUVViMXRSelJaWjRaRXNSdVVYd24xUmE2elYxZVczZ21HcmhtemhQYnJyUjF6WVBkVTREMjdCVE4xa0V0aEhqZmlHaWYvNXVuR01vK2tnMzFkMkVmWmNIUFlRQkp3TDNEcjZtaDZSdURQZ3VYY1p1WjNWQ2JJdklZR3ZQYkVOYUwzVnFaNmdCdnQ4UzcvTHhXcEh6MUpVeEZvVW45OUE0bGEzTjB4NE8rRjFYNWM4MWJNdmFHZHpTS1VzWlNPdjM3dEtseWhvaDBiL0EwQnNWZ0dFQVBxWG1PZmZXdCs5WmRnM3o3bHVKY1Vld3R1Wm9MTVkzMVZSdml2WldnUmhRdk1HeDZPblA2QThzaGtodW0zWktjaUt1NEg1Y3FXWGFDSHQ3OEF0bFJNT2F2WnZ2ZmxCSHdiZ2JlN1l1dEY3N1hPSGtYMzBuVXlNOHJURGhycjMvRmlaUjNRYzZGUFpnd3pmUW1qY2NwVzZiMURDWDhjb0g2M3czeUM3SHNTME42aERSMmV0WGJIUHNPMWdRdnludVZZMXJzbjJEaXlEL2lMY0FBNC93RHFoNThubXA3T05tR1hHcjZsZDVVUmV5WnYzTStFeXErVEc0OWtTdkp0alNTUGRHOXV0d2d2UE5hTDI0ak40VlFqNFk0b1cyTWQwcDBpaTJvODRYN2did0VjQXpJakVvcGlkK3J6YnZjYUVpKzVMbXFhNFJuOFMxWjlEYmdPNXI4MW0wUThSN1d6TUcrLzRLRFptNDM0ZTB0cGxlZGd4bWZzbHZQVjZuK1RzdEw1RWd2NUhjczlEaTh4am1nekhkQ3ZxY1cxeXZCenZQcWIvRWt0QUsyMWpzWFVOSzNZanVKZTEvcTZOOXhmWHFCc1VVNmV4cGZmYllDSEhkNnVZYXplc1IwaTBjcWNJWWJQREhWM3BnaFdVSXZzWjUyNDY5elNpMUFUZE1pVXFiWGo3dS9mYUVyUk8veVBlaU1XUTJMcndRd2U0bjlOa3JsSUd0YVlNTzdYbEQ2aHZLbmpOVlAwcmNBNVJEdE9rWWVtYUxuV0JhcXk4KzRCd1I2Q0UzS2V0L0VQMjdGRmR5U1BGRDlUWHVJWVg3NEpXMkMvYURyeDFUQlhrMnJ0bWorcW5zRjhUY0g5TDNrN0ZwSjJWUGYxcHpSR0x2YTV4ekJYMmhBOHZvQkE2VDUzREJ3M0J2bnNJM3VoQW52NUxqZy92T211cDI4U1ZmUUgvVFFCK2YxVjQwdmZPY1ZtN1VmK0U4VTBYdThiWTVLbWovbjNMUGhnSm5KY2ZVNHdQVzFtVnJ4ZmJLQU9jbUkxdjVCOXUvY043Wi95aXhOUFYzMElmbXpYWVIwQW1pRDhaM1crR3pYL1hkM3NLbUF6eC9wKzZ6QnA2Z0laMFVzQW1EaG4zcDBmcTViN2QwOHFiNS9xVHYvcFA1Z203VHFFL09KRzJ4dUlVRGlURVAwM3BjSUViMlEyb1p4d0d5Q1NzOStBRi9lOU80UCtPL2J4eFA1U3pvSzZndUhNaXhDL2V1UEwwNzd0NTBUaERyTW5xY2YyMk90OGZEc2Y5RmhWdDdsKzkvUTNqVUFEQ2tSMlV2NkVGOHVKRXZMU0k3WXd4NUppUTNodVI1Vi9xbW5WcGxmV0FQMmF5bHp2OFRmVytJUHJEZVc0bFUyT1Q5NDBMbEhXT1FJNzR3TnFDdXRPb0R6dlowcm1SRDJ6S1JUbk1NM1NRTHJFUmZXU2JFNmNFR0pMN0RuVnN3dmVWa3ZlUEpQYmJXNDlPYWRzZm9RSzdSWlYvZVdzM0lGdmUrTGVzTXM0dTZkN0dWbC94WDVCZy9ySjFaaGdlWUhxUUg2TW1YcFowdFN3WDBBOGI5NzA4MldqT3ljK1JlN0pHNHZXVUtCM2U0dmtaTFpWOFZvQTlUajZIUGFxSWUvSVo3UHBuM0QrN3M5ajJ2TU5lN2tMdGttMnJMSzdvNXhpaHJ3SDlaclE5elkzM0xQM095K043aGhoeGo2VlhDenl5Q1VWdGR1VzBoL3N6ZTlIaDE3OG1MKy94SGcxcHZYQ1NETXNmZ1VsOXMxTVZiN2ltcjlCRmlLNDNFY0RwdmFlL1FyMTFYcDlPRktyM09icTZiNmRuR1lyOWZ4VEhCdlNLSGVQMXNydUNQZVNzbzgvNWw2Qk1iVzVEN2JDRWJvMlh4SWVtOUIzM3dxclhpT3ZsWUdmb01abnJ0ZTZUSDdEMStFWlE5UFVqL2JhUnJXWHhBYzh1dnJLVVRhRVF2b3owaTdhUzMvMkdNUXZqdWJBOXRnenY0dzNXRzdFckxRRHlJblJmMFAyYmZjN3FpS3oyT0VYdS9QNWJ0NVgrbXkxVitiSUliY1dOZVZmMzArUnd0a2xkdjNZMHJ5ZGErbitONFVyM3FpbTVVNlhXaE40UWFtcGFMYkx1cnRXZkN3SWJjMWhITlB3MjlZUi8zaUphUjdYZGdkT0lxWHFRTXdvVXU5WEY5TS95L01DOXh5VEMrQkwzTGFPODREOWxwdkE1Nk5Pay92YlpOSmZkSyszcHlzVC9ZQjZURmtNZkk5T01HdTVlSG5KWkR0Yjdma0ZkWnhwZ1dlNFdYRHA1OEJId1RxR0V3a1QyaTdTMmNNOWZBWDVtWUlSdnJ1TkVmd1o0aCs5bE9TVzkxMnFNZmRBWVN3d3BtZXAvRlFTanROU2JPZGM3YldCdHBZUmw1REQzZGt3WE5NOHBBaHVINGJodHlvMlM5NDVncXdlRmg0bXlOdWZsTTc5VlpKOEM1YWxDM25tR2ZCTlMyTjlYN3dMdmNObnBlaTExWlovdFRvNzJnK2VQbHViTzAvM3ZQV3QyNlBOWXJ4bWE4OTAwbGgvd2pJejZNamNwVy9PVCtVUm1vME5yMmUySzdXRC9IUG5uSW9Za2d4ejV5MjlyMktpOHdxeHp4ei9rbnhhU3FhdUx2bnBjMHdiRU9XZDloLzFjSC9SYkppaXQ4VXo5OUZwZitZaHo4cnZlUmVtRTJSenQxRXp2ekRSMXdGUWhXQ3RQenJKY29zcDZTSEV1U1U5ZmNBd0x0OS9YNDd1ZHJyV1RPNC9IL2UrNTZiUitRTHJyUnM3SitrOW9USWdjMVV1aitWYm1uMmgweStNRzhBZUpMcWZFdU9CT3BWV0w2M0MrTGNTOTMwdzRkaUU4ZTQ5OVJEM0l6aCtBVGZsODlmMXhRSCtUMXZrOGxSbDhsVzVtZXBSNzlYZVdIdTF0ZndYN29malNYZXl2TE9FVFV4MndEQnJjZEs4TXlCMkcwRUlIUDBMN080SlAwMnZvQjdGQlNEK2svSm1OYmxxbCtlRVV2eERiNUpBZjdCbkxod1ErYWwzSXg2dEZlSVRtNzE1RHZJSEtSWlNDYlVJMjk2SG5sZ1YwUFo3T3pDdzdkQnpST0NyN29NcWVDU3ozeE14cStycS85QXAyU3VXTTN6Z2o2blNKOXAxY3NDUmJqL2ZwZm1ZdEYrMk91eDVGZ1dPYUlyUThsdHM1eDd4dlRmNlA4WlBiV2dKekQzQ3I3SWlpZjhVWm03MzZIRHN2czdYOTAyTHQxV0VZSC9iZm9zK3d6LzlGbi94TDZMSHN2SC9MdlBNRFRtUHMyaWwxRHp5M285MEhpNG1XUCtpL2I0YVNlQk90VDFOL25tSlBkSS9UUHlQZlI0bG9PelFEblNpR2FkSEZ1UXkxK1pvTU9NeTN4RlIvWW8vTWNTaHpudlltSEgrL0h2TGEzMnBNOXJyM1dELzV3c21mc2g4bzNDL25aRlYyTkM1WFJON2pVR3o1R0orVnZKYXJUM01DWEpuRW1qZEZ2L2VFSStxcFlSZFV2dDVHWDMvQ1R3QjFHTkNTT0pyZ3ZMc1pzcm5RSkp0NEo4Y0JhdkJISmdaTnZZc3d4ZktmajFrTTZaMXNMUFQ0L2pYa0oxeGNVSEpKclVIK0g0NjdjaXVKamozbmE2NDlqOXgxaThXT2p5djNFY1hlZG5CTzYxMGp1Y1N0WGptTjNNODNMR21BRFlnWjMwN1pqQ3JKbGNDa2E1eUxucnhpTkZrT3JwY1MweGcxMGZzU3pFVzBuMWUvNld4dGp4OEx6WXhIKzVWOW5UWFhsOS9ONlhMOUw0cmpBdC9XVGJ4RE1jNUt6QTMwbWNDL0FFT05pQVA1YVJPcTVvRjZkN25WVC9iQlZZVm9HNVY0TVkwS3pjVURmL3p0c0RudW9vN00rK2JLMGNvcm5GV3ZmUDNEblVtOWdoNjRSWjhzYnZhb1g2Sjd6eDNqUjFrS0x6NklTTXhIZmlWMFpINWMxRHVuaUhuNHV1T2lSWHRrbDkrbThrckJITkFBNVo4T3k3d2ZJNzdNNVphQkRHSGJzcmRFY2puTzhMeUFqWnJUV1drTjdKcWt0eTFBL3hwRWdRMzdCY0JKWWNuelFFaWwzakdOcW0ycEE1SERBNmk2V0NEazRNZFRNbEppYVZCZkE2NExhd2lTT1hYbjZPL2pzR3RIdjJDVHpMMVJHbmo5aXZ5QWRXeE5MTzJsZFloVmNzVFZ4SFJDcms5TmE4VWQ1cTQ3dlZZVDd1RUpzcTJaREFwOGxQYlVWZVJCZ20wNWdiRG9oQmF4azdIc284MUFxSDR5MEsrdGx6OGVQcW5qYzcvWUJYTnFpSE8xYit4UG5kRU4vSG1od0Z3RlAyNWgrdTlDbnIrYXQvTHB6SzJ0UWFTNU5ndmp0a2NqQVN4bzZzMDFEOERVZ09RWStRK0E5SjF4TE5FRjYvKy9XVzBCbWZ0SHUvRm92UDhRLzRTd1JyVk5aLzdDY3d4aGg1aVJ3VGYxRXNBMWZaZ3R0QmxoUVpRNk90RnZPaEFvbm83S2gwSm15OStJQitvUjhnK2s1SnV1VitDcjQ5RWd0SGNiN3g3VEtZbkN3TWdIWGpUTDJOY25aeW16RGJpbXlubnREclZ2bWJWVzBkSWJMZ2ZzU0VEd3N3SjZ5TjZPOU82dml1cVNIRTZKdnlOMmxXSzRlMU1rc0h0TDFjWTd6Slk3c3I5eVRSY0g2K3p1QTMrUEtldUtMUXV5YVFtczVvN1hhVEsvaE92MVU3MEowdzNkalJiWUxsMjlWZU9EVWRqS20xQjRoZVVjanNGOS9nazVhVnJ0L0hRZUJmWmNNZWkvbys5Z3Z3dkFxU1h1cHhUMDJwUCtLZkl4dHdDQWpjZVN6dkwrTG5rVFFFd1B3azNHK3J0RjZuRDRHTkg5ejhVMFphaXZ2WlJzb1lyOHplUWtPME8vanBkK1ppRi9lTDg0ZS9vcjkwZ2QvemYzUzEyUy91TWxwQzNnSDZ2d2gvWlgyd1hxbzN2WEtXQ2VieEc2bVlIdDJBWWZ6bXQyNVFQd2E5M3BuZTVBKzZwTlNNUzd0S0s1aVNmMW9udlIyOWt5QnVKR3lWalBIMEhjK2t1RVJZTm1mTUE3NFdYOFFjZlFHZC9reFhES3NNeWNRNDlxZnlVZmVNVWN0MERtTitPQmhHNE9zdWRaMzlYN2EzbWlobC9neHhzL1dIcTI5dXpabTE3dVJoNnJqbXNKSHoyVlE3enVIZitzVC9EendIVjZuS2VpSGEvMXUvMnliNXM5Q2JrL082am5WWERpWXl4MTZKMlAvbk9zcldUVFRCVjRWUnhlK3FwbmVEMnptZDYra0h4Sisvb0QvamVyMmRwVzN3c1N3YnVtZUJBc0U1NEtEUDR2ejJucUozWXJyZS9TMUlrTi95eHpaNWhaUDdIeUMyUSsyZWhrL2F1ckJCdlllNW1HVkxkaWxjVGhMckhMUmZ6MGVWODFtM2l1TWpmR3A3bkhoYzJqZ1Y3R2F1b21mMlRxMkcwa3UyUXg2QjVncXdlakUrWXFzZlFsK2NsbkNlTVRZdi9Oby9zalViYU56aDFnMFQvVlVpTHRJOVRtTkFiOFhzR1VIYUE3RXBnZit0NEMrRm5GaEwxaTd2aE5vWUdkckowVVdTaCtHWStpQTR3ajlvY3NZd21pMGtQdUJMZXNIRy9vcjlLaU5TTEhCSzZ6SHY2YS81dWZ3bzNCZDQ5Vnp1dFk3NDBhdmNvcG5keTFQY1lLZVYrVEsvNmpJRlB2NTBiZzA3cmRsYmRaVlhMS01wVlg5cUtHbVVBUU1wd3M3MDhHMU5SaWZpL2p0M0RicDNTV0hvUnVkeFQycldCMVRjL0s3WXk0WGNjK2JlSHczem1hMHVORUhqKzBYOGhhaE83ZkltWDR3NXpVN3YvNnNTcXlwS2JGUmtBMnNaOFRlenk3b2hyRmhDTzdqQWVac2hzZ3V4RFcwT0g2NlVnYng5Ti9pMTZuTjd6Wi8vaG9HQStMTmNINUEweVFmNG5HNUNicUtmcUw0L2xheUNLYXRlTERZWUd4NDBxODNkRGRycG42cjhoSFZlenAreWlOQTExL2dXcWtkNmJ0eWpRN2ZXTHVBc1NuV2JQMGpLMk11ODl6K3FuYnZwVS9rQnAvODJqN1U4K3ArM282VGthMUJNT2pxZlpvNTNBK3A1cWNvd0tjMWU0d2VmRms5WE0rVHFZMFBlVCtrN3lMYUE1YjNMS1pjbjFuNzZQUUxmRUl0Ujliekw5Q0J0SlNsM0pPUDhWc2t0S3gyLzVzaTlvTTNaT3UvWUR2MjdhWC8yQjRaMnEvWUkxMlQvcEo3eE5sRHZFZnFmUEpOZVprY0ppK0xUL1ZiNzV5ZlZQVjVuWW1NK3o3Z2QxN0lxUXYvSVk0QmxqWlRtWVB4NloyK3F5L1U3WG5VZlhaZ3c1UzFsVlgvMjAvdjFDLzFUOXlwdy8rLzc1ODQ4MG5nYys0MzRHRGpQdTBrWHduM2xXRGlLRmN3UisrUVpVQVBjS2VKZmZ5cHo5bVhwY0xtOVZaTjNnNG5WK1pNTVdBSWpiSXhXRnBYSjUvM3FHNnEzNmpudStIOEovQTVrdmo4cC9RTHZvZ0dqTWhKWFllbE9XSFlyOU5ZVDNJcmYrTXY3bk54ME5ucFF1SGkydE8zcXA1cDhTaXU4bWxwcWl0ZnZvRmhOVlM3SHErMmJtR2tBRjdJQTdFMVg1Wk9UbnV5aDF4M281dGlud3FUazlJbTd4U1p6NXIzQXNuTnV6SHlwdmZXUXcyMUZla3htemlHVi9xa0FUTzI4VjZoNTd0VTUxRXRVemcvazAvcTJ5OHdHNWdhZHpRMng5SVdmVTl1bWYwL3E1NzBsRWRPdDR0QmIyQzJ1c0o4b2M4WEErbEZ1OUliQys2Q0VlOUl2dG9ROEhmMVQycWtUeVZPMFgzWXhEekdFYlpNZSs4WTA4RGg0OHpGdGhyR2FLcHdSOXE0Zi9TQzRES3NBNFZpbWd6MUErbGZuZnJKSWtCejlyRmV3ZVF3YXdYdWU5dExMdkNJcjJBZytYSXZzMmxmOTZ1OW9MSGVkUDRzanEvaHZIWWs3eXlrRHd4MW11TzN4enF2WHZhdUFieWJqUVp6K1NKL3VmQTVqbm5pdTR5NGc4dFBjNnhEUFYvRDJXNlZQY3AxeU9VS2JhaFZSbllGbVZ1ekxjbjJOajlCam9DQk1Yd1FEMFo3VHZyRjR0NDhFWW5aeUNWT1VNc3R5cjVCQ2UwWDY4dTlnOHNmOTNZYjJZZzk2Rm44Q24zdE1lYXpiVWdyaDlvM09FOTJCM2l4WDR6aFk1a1ArUkNuY1J0d2YvYlFwOWhrK3FlYlpGOUV1R1Bvem9ZTzlGcSt1cWRJSi8wTi9FZGZQOFovMFBPL2kvK2dzWDhUL3pIS2Z0RGRoZHhiYXlVbVZ2ZU9uTTBTUDR1cFdjRjlkOTBrakMzajJIS0dhNHFQdHZFTjJuZDQxRVc2bHozUVVxODk0akJtZlZmMERXMERPdWRkOURYS1hON2JUMWI5WWxJOEh5YXo1NE1hOWRqMzVrQmJobzcyak9hK2s5dzREdkdzM0pPMUNORlY0NzZZd2hyWlRRdDB2MHd0dHZFK05OS1Vqcy9vWU11QW9RNDA2OHM2dXF1UUUrTU5oWXo4UDl3N1RkWVBydHpyMGg1RlhzVDJKSmhlby9PMlpXb3JwK3BIWXRMY2M2WmY0WlcreUZSUG1iQzllc2hhdEZxUG9QTWVMMmQ5L3ZibjN4Tk1aQnJYK2VFbmV1R0JyM0JTeHRtQVQ0dXRITmV3QnptREoxSG16NWU5ZGdpV1FxVXZudms4RWlRclI5MEx1NFNzbDl6Tk1oZG1XdFpjZEd1MnhEWHNZK1laSEg4d3VpMW5Wck5EQ3Q4NGxuSVA2NHZnNDJTeDVZQ1BVQXloTCtQVjhSZTVxbGR3NmxSbWZoeWFkOTR3YjZDcDBoYzRvTmhZMHgza3pyYWhyd2VhKzZONHg0MTc3U09lRHIyS2taN3hDRzVwZWE2aVphZ2ZObUNRUTB6d1pQRVN5SGJBU1pkR01hbHJPYlBsUjQvT0RXTTlrdDRvWjNpUU5lejNlL2FPMm5SVFR0QjFkR1l5NWVmZHFXMk9WaEMvTVB5NFB1ZkY0YXZ2bVNPKzBSNTFmK203R0d4QXBFUDZKc0hnb3poKzErd1VCaU9RM050NE9aeVc5VkNranl0YkJ3VXlGT2tkT0xadzljeCtrbjcwRHVMSlUzTzArVHpINU1idmlRNHdONlRESjlpNGpXdFlEclhDV3VnNy82cWVXKzhoVmUvQk9FWDh0SEFNMkljeVp1WlgvUnZQejVISzNhdm5qTTdTU3lURDVZK2NhK2lxMjhZNTRMZndZZThZNXhOODNLYjlwYjI3Y1R4ak1SeWxmaEpudHVISG1nazBUM09FUDhPSGI5cjNUM3R1bDJzcThRSVIvK1RXNnFyZWM3aHA3YittNS9hTlBjR1lWei9jNU5pRmZ0SURPMFhudndTL1UrdHFmN2s3OXFQd2phN2d0WEF2NXpxUHNEaDFQbW5kdlhiY3Evck41YnV6aHI3eVZVMzcvV00xOUwxK2NFNi9zTmYwcmZmNHNyUnB5QTA5amxlTFQ4ZHdQOE11SDlUc3Q4WWVERXlmb29qU0R0dHI5TmI5LzFvdkhQVXorbXJvTVhNbmxseTl0OWw5WXorR0ozZm5tSTlpeWpYZDM4dGVNNS9oeXFtZmpzbWw3cnFHc1gycHF3dzRwTy9sdnRHcTRTVlFuRjNjUnpYZTNiUy9RTGVPZC9aTWlCMFQ1MWlNK1BOM2V4QTNHUEZJRjlOMzdMdEd4U0Z3RTUzSCtucVBpWWxjV2RQL0tpWjMwNXl1OWRBc242M3UycWQ4L04rQjBkMzQzcjB0bitHUlhmUXp2L1I1dWUxSjlCWkJuU3kzRkVlMXVHV0ZIUVkyZm9XTEo5ZDFqcjhBWG5mVFBUKzR2Q2I4d2g0NFY5ZnZmVDZQeVdPNVlJQ0JYUEo4dk1lZ1g0Y09qajNsdHFtRnRpeTFyQnQySHZyZGI5Ym5DZWIvamJWZjRKNEdoN2VYVDNuMEFmRjR3Qk5mMVB3T1YzSXlidHpIUnF4VDRGMmNsK2hYK2IzNnBYSHZsSHZ5RjhiK1JPNTlLa3QrQ1picXZlTisxaFB0VTUyMWFPaGQrdENjV0gzb1lmdnY2NzJnbXRieVczc3hOZXVEMTNHVWZpSVdjbWRPWkxWR0hOKy95UnZaUGt6MXVzbVk0UHpvT0MvbEMvYjNuVDJQZ2svOUkzZkV3bDlvekhTbTk2Tzd4MXNBUmoyaTd4MnBad2NNNGNYRjk5ckNSYitOcm1IajNFUEx1bUR4R0tONG5GRDhnVjgxM2wxOUdwck9xT1h5eDVqRzFxNmRNYW1YT24vMmJuOHN4VW1pY2JQZjc1KzlTZlAvRDhRRVlmOTJYK0Fod0RNZ3Y1YkVBcjJpQjNGVVpoNjUxeFlBKzN4czFQZGxmTU8yL1U5YzYvbkduU1d4S2gzMnNtVWJmdmU2RGdnNVJwd25JNWtIdlJYS2VCak9LY0Q0MVdYYzlMT2UxcFhkdFYxQWovelc5ZGdvd2ZCUVY5UGNOcm9yUkhPMktBd2N5SnRiNUROWnoxeVpDOTFJT0ZqbUtIUU5SR3ZLRHMwWjVCd3Y3WERPbXcrNVRoYnVGUTB4cDdkSUNOeTJFTHNiOWVTS3d0b1pDcUdYU0xueU1qMjh6YTFnc3VvRVkxNkwvYWkzODZGUDhnSFhJYzJ0bGlVMnhzQkx6SFNMNytWbjlOK0VvZDd5RWowZTgxem9HQjE2TjJLYWE0bnVDZTU1d3FWTG1tdlFSblBsMW83STRmVlNYWjgvN2kyb09hMThoallmb3oxdHdCNGNGYmJocCtpejVhejc4VGFFdTFsaWdaUy9rd0cvbldEbTZKbUw5QzFEZ2pwNFhDdEtiWHI4emdYNFA1RzlNSXF2K3BBSHZRUHQyNmZJVXVFbEVzWTR2REpHRllmQXVTcGVFdlBvREpFTlg4MFR5UzR0ZGplZ1p6K2EyMEh4Q3BtOGpnVzVYNng5MVRzZ0doZ2JaSDlOb1hCTUc3QUx2VVRmb0hWNm16WHRZOHRpVzFmeDBLdTJpc0ErUTNVNE5qN01qTGRvaVBWM1oyRGptMm84WHRmd3o0RTJTRThCOURuVVpqbG1jRDNYRk8xckVuY0lyNE04YmNER3dYWEh0RVlYejZjQW5QdXJ1WWVWam9UdWlycEgra0JUUGNrWTBZbVJ4NG9VaDI2aXhVdFJlQ0hZRkxsbHJtbGYreEI4bXFhZWVnbXVBYUx5M2lycnBySE9nYzdETmdQUy81NWdXVllZL0plMUtiaStlbFAxQklBekxKQk5lN2RlTkJ4RmxqR2hXUFdmNXY5NWljNDdwb3BrZzRKb3gyMlB1bk01emgxejJ1aTdYRUNPeVFqWDBwSG5hSTVBbys3NHhWd1lCcS9nS2c2clphZ3JpQk9KTjk3L0szVFg0VS9vcWNNdjY2UTNjUTMwZ1RxdDJWSzgzaDJiQkR0b0tJU09PYnJDZng3c0x3VTZnRkx2TDlYV1Q3YXA1SFpiVDIxNXNjZTlkbFh3aS9teWVoaWI1emxDM2R3V1M3M3pKdjZBdnREK1Q2N3I2VjkvL00vVHhrbVdUOStmdEVIL1pUTDRXK0wvTGRqbVNSby8vZkhrTzduejlQMXAyYzRDWDlhUlZBVU5Sa25VcldXT1d1T0VkT0tLbEdBY0NiMzNhZXBlU0dtcHRmMjZoRit6MlRabmxSbkFZY2VzOWxkMkl4bDBoN05GMTFKazZhVElBK0FXaUZQYVVEWFg2OURNbEF0VXBXRDdlbld0R3p2Mk5zQnhSQXRwb3pPeVpqUC9VeGxxc1dzS0dVaFdjYlJ5Wktud1JXelpUaE5wYmZPTFNCRTd3YnZKL2Jrc2hKWU5sWmpvRnZZajYvOWo3ODI2VkVXMmR1RWZkRWJ0bDBaeUx5L09oYUFncHVDMm9iMzVoa0FXb0tEV3NrSDQ5ZCtJR1JFMHBxYm1XdXh5bi8xNlVhT3FNbE1KSW1iTWZqNFBGMFUrM0hneE01RVY0NUtUdHg1RnJoSWthdHc3cWtPMks0VTd3OHRGRnJOYVFDWXp2TnBGdE5pR1hocnN2RTBVcWtNOWM2MFNoYXVHdkMxZThaakxydjBqbWJaOFV4VXNjWGlLdU1yazRxbzVvR0hXejZaaVpyYTFJMW92bmlMR2V3ZWFocDlCVjVlUHZKSUdFeGc5Nnd0bVA2VjdSR2RuTVhVWjBZTjNpREI3VnozLzkza05wYTdKVE9PQnAyczJaSEhyV3VmRGVLTnYzK2RpaGp4NzZQUkEzbkNLdkRRVnZjZk44L0xwTkRaQi80YXNNRlRZNlYzWXZxdTVGczZReHc2ZE5qL1FmcVZldG4xM0ZJekU2WFBkdlR2ZHdUb3d3eHBobXF5bUtBNzRQTU12SXA1U2c2QUkrNVBHa05JbzhSUUdNODNsWlJRQ2E1REM3VXJOeFJHS0NJRVJaWURQU3dxM2Y3MnZrd05Hc1phUFFYLzcxM3NzRXRSeitMNENUeEhwckE5VGU3UEU3ZDE0TDh6Q0VubEtGbHJzU0Y0TVRORmdUTUlPdzF5UmcydnZJSVpPYi90dTBtNDJDenEwU2k4UFBLbUx6OVNtMjVzNm9vR28yNkZkMTFVbXZrSnVJUjBUblhjcDZTNWN5d2l0VDlrS0lYaVg5RThkemU5ek1YYXQ4eW5JaFQrbGNQZW53Wm1KS2g4dTl1Tk1aSmxrUzVCOHpvVmlLZEVzQ2V3ei9yblozZEV6R3VmcmFvS2gzSWZ1S21nZ3dhSG53dG1heVBPbit6L0ZzdnNPKzRtWnJrNmVZcnpqWjZQSS9NdXpJakpEN3Zad2hDSlNEcEFNSUxxN3V0Y25EMFhXS2U2S1FYcks0L1JkUFlxazNoTFdtU0k5MTcxYlR0eUJSN3AzTGJsdzUvV3p3SElkV0VLNU4vWThxbGxXK1AzUjUwSWFxZUQ3RGo5bi82eC83cnQ3Nml0QjdoQVd2M3Q3U3Y0V25mOThacHpscWFuTHBLczRVT1ZEZno2UTU2Yk1oT001VzY2SHlydk5BbnVPZC9sZDMzcFBXMFNlK2RxZC85aFY3TEhzQWFJU1pYWnkrQVlpd05IT1FHK3QxQUc3Yy9rUlJWNG1VN0U2UVhqdWtydktsdmNPeXdXZ0RNUDBRekFNVGtpWHdoM2paSUZreXc1TEs0QXNBckhMNUZ6Sjl5dUFkQmQ3aW5FaWVxL3FkS1VUR0o5MTQyZS9RZW1GUkUrL1NlSDJQSTVGQmRtL0JkR2x0M3dLUUZUaHlxbmpJNkR0ODZNZFJrVE42c3doVk41UjFMaHpvYnJBSm9FU1VSWkw5SzVlVXpiRFZVUG1MS3hyMzBuRWlydEVSb21ubUpFUFVRS0tHZytOenk4dEFlM1AzcE5ZY2wvV2xIVXpDVENxMjdzMngweFRLS3BmRWdTWUp0TkhnbEY2dVJsTE0zU0JFa1dCSk9ZVUhWUWQ3aEkvL1hGd2xTN3ZRZVhKMklQTm40czhNTW9PZ3dpNjZaUWZiMUxjQzFXcGgvYlltOVAxeWN4VzVVcGRjaUJuc1lNekp4MEs2dURHcEdBSUtGaWhoaWZZMW1nOXlOditzTHFzSDR1RFJhTFYwWTNyMDlwUWFmdkVVRVowaUplYS9FV0UvWTZlby9ZSFIzVndQaldZYjhtRTd6V1dGajhYMTRFOUlobHhRT1JCWjNGME9mTVVwR1plM3cvenUrZC9rUUdBTE8rOHZpN01WQnhnZE40MVpIRmhNaDJ2ZDJsUDM2VTE4dFVNZXFaTS9VNzZYUGZnenNYMTBuSlQxeDVCZGhFajk1b1p1dXM0QS92SnhzRjBVekFNRXBmYXkrR005M0tpczRmYUhwaFFPRDFmV2lPS2pqbGZXaXhhcSs1eGVvTHV6TklHTmxsWTUzeU4vdTFYOWxjYU5YUXF1dWRYL0VNVjIwL2lVOFppNFpMc0xXVEE1SU5PZEF0R2ZzTm9iTTNQRUo5MmJGV3lkL1ZaelpnbFgxb3M2L1BiSS9KQngxeGRMN0tNbDdPZmZJLzNlU2VjMmhRSldMd1N4VjNxc0NpczFnZ3lzUE0yZ1BETDFIeTJXM2NRNmJvRVVJWjVNL2RUeUN4VVo0d3J0akh1dXNmTXVwVXY4ckEvVTlvTVFJK3NtSlZnelg3ZWVaZGlaRE0rVlhQZXBRVGJzR25GbWt6dlRrTDlUWFZRVHMrVnZpaGE1eDA3dDRPN2tuZFpIKzBuUyt4ZXJ0ZXl2blcyRTlCQkJ5YzFVNDhmSlVnR2lCK0cxck1ieHlLS3NRcmtXMkIyd05xNzRFNnhFNmxHbE5Od3JtSXloRFVjNlowRFpCdlJmUmk2TzU5TG1LWnZFeFNxZktEb1Q4Y1BTejRnUFRtT3U4MmZTZXM5c0JBTlJ5eEc1QUUyenl0SVhkUlhtUldUOEZaTW9XODkzaWRUSkZqMzM3V2R2VjNvS0QxOG5yazQ5YmpaWUducmVXQ0w4TnpweGx5N25NbEk0VzdpOGJPRVZyWGdQRzlYYnNLS2lkTUlBeTdaZXhLTkowYkUvMDRBRlcxcE9SVWlEcDVPNkpOc0dkSzFHOExhQWxrMkZFZDZuSkNNZTdzRUpsY1V0T2ZCS1FDa2N6WmFRclYraXBHUEtnUXVkS2VTSUpWWEFjNkVSUVRaZzdJVmVpNFhoa3RiTHdMTENOWENQMnVyb09HcnUxekNMSWRtUEU3MWt6ZW4vaGE5QzkyZHordm9QRTk2TWNqMTByZGtvWXR1aVdKQWVsOXlZR2s1dU5BaGFCYnFvR1RGZXBlU3g1aFpjWVVHR0YyUi85ejh2b3BsYTQvWnYvVWtHR0w5ZUluYTUxa21JTzM0dFVrVEIzZE0wZXdnaW9kZGp6ZklNeUVQY2ZHOEswdy8rQTZndjhtWEZqRFhWa2hHdG41dkxUY1pMQjJwOHo2MXpoaE53Sjd0QXFqU1ppQS95RmRBOFQrdEJoaklIN0JNZEpkWVB4Zi81V04yMzVNZlovaHZNVHRKUXBrM3Fvd3JlL0xTaElFc09UOUs2RlRoZDlhOXNMckhKVHlydnErZGNFcTZTZ0xwRXl0SHVWZTF6Z0RkNDRSZG9IVHpjVnFmY0RqVExyaGo2VXN2bU5odnZPOG9ITWU5dVBvOW16WE9MQmFMcGRKbElVZEVtVXpCYnVFcTl5WENTV216d1ljRW56Y0o3QnFMbTFYdDJidEU5S2tDT1p4Vm9HU2hDNndTNVhzZDZIdGRmTjhCTXFGenZGWmczS2s5YTJ4MUJjZGk5NnJFSHB1ZjA4UDNLWWxmcnVSUWlLMzFiYjVrVDg2Z0dvWC92eWdub2NQdHV6RWNJYi9sRk1BVUhzbkxiVXJFY09yM29UdTNoYTZCSyt3cWdTSWoyL2lYSTEzVDM2Tzl4d0hpSCswK3drek52Qjk2M0tqd3VIT0MvRGdYTXNqbFBVcVJySGw4Z09XUHNPaVFTdEk5WFlGaW9RUHl1MVY1bjQxWEEyNjhrci9TYTgwOEUvZlpkampwK2VURXVNTmh6T2hiUUVTeWtDOHRIRnhKeTdTRmMzNHYwYWhjeHM5NzJ5Qk44Z0FRQUFsYmRKMjFqWjlGd2RBczN1ZmkyckgxclpOMkl6K2Rvdml4eWpkWTAvY3gwb3V4NkdsU0o5ZnlUdGIwRTM0cm85NG52dnplNC95alowMVhXbDh0TktsQ2trSm5Ddkt1d0NRTThyRng5YXcvQUtSajNORWhuQUpBY2plUFN6dEVmdmRxQ1hJZkpNNm1uTFluOXEvUmpZNitEeENwUEZ3OVBxSjR3cXAwRkF1eG9hS3pmcHFGNHpuTGVtblNHZHY2eWVFT1NTRDFUb0hDWm1PT3ZKdE41UnhuL3pFS1NYZTF6SEVGQXAwNW9CdFpaemdMK3JueWZuQTlaSytLcFRWTHJsYTFtaDIwTUtsTFVkcVEzU1hmRFhvWjhzKzJUcituOE5Jazh4V1RvVEdCeFgzMnphbDhlMHAzOHplY01hNTRwc2FCZHBkVFZuT002RjdwQnB3ZnFicnlaZ05oZ1h3SGF0ZW1sem5FY1BzK2hieXVmRlRsZzF5aUlnMW1FNE45dUQ1eThMbGtBeDBPRmNQTjJ0dG91NHNKNDFvbnlVVUhZQTNSaVBxTTRIUDJkbzF6bmFBWXZMTFRKTVp2MWdIOFlvdmpaNmxYUi9VNXVJcFFqRk41N3l0Uk5MN1NIUThNK3JqUy9LWXF6ZmR6N1NnQ1ZvczVuT3VSNXNId2ZzdTJrWXVhbm92eVlxRFNEclNGd1dTaDJVQUE2YnhMNjNJL2JzZ3QwaWZJTnc2T09CK0Nhd1NmY2s2NXVOZVJqYkJucStWdjFiRzZzYWQwNHpFbnh4bzM0Q2Y5Wk9WWWNxS3Z6TVMxTk1heHBweTcwR085NzhiYVlzM3JDekhXKytIWldibXh3eGtubXVjZWN6THY1OTI5WG1kc3NESit2RWtpejhwMnYzQ21qR09QTnE0OXcwaDl0VE9GZCsyVDdwd2V6c21vVWxtNWJQejhvbHBPYzBMMTV4MmQxR1NjdVhDbDlvVGU2UXBUa3cyZE9pdlhIakdUV0l6OHRQUG0yRUV4U2VXVnQ5ZzVsc1E2bGh3NVl6TjhRLyttLzB5UW5HOW1PemNGeHN4a3pGYS9HNXZvMytFQi9yLzhmUFY3U3c3TDk2OTFxTWF1UGJzcXkyZzlWNWdhRDFVM1AxdXhGUGEzSlhKV2kvdVRrWE9yRUs3QzhxeHF2dk1vQ1pUQjhVcEhaaFFnZTM2TnBZVVRqalMvTXJhU3RhY1loM0w2cXI4TlI0WEdhZjNlNXVLT05xWnY1eldFOFFXdXRVcjFXaXRCdEM1Y1pHc29valZucG9HVmhRR0s5Mk5SUVBHR2w1cVFWOEk1aHpyNkZhQlYxNWtoUG5XbitMa1lCemJrODQ4akhueUpJMlo0RmJlTzdTYXF3ckxlY0xiemxmTnQ5TEtOaHZOa04vNldkdjBoZnhKaXNpWmpLNHFicEFhN2lGUWlzRjhnU1V4cGJKeDVYRUxYK1FrNTdRb2JVSWxXTzVidys2STR5T0c2dVE5KzkxbTQ4T05wTG1rRk1iUWwvNFFPUmM2NHdZZ0R5Smc3aXBobm1pT05mQjR6U0NyZEUwYWlFOUU1UWkzWUc3ckpMUmFYeitzUENsVTI1d3VwOHk0bDZIc0R0QWRIMTZMc3NCQW40Zk8vNGdmVC9BYldmOTlqWW5SNnUxOWpSZXh0M3dGNUZkQlRDWktjeGNCMGdHY2xoYzlWakpWZnZ6dko1MkdtN2RpZGwzWHd4SlU2NGF5MGllUXVXTEtnS2xFVXBFYjQzWGY5bDAybW01VVJHMGppRWZsckYxTmFoV3RQOTlRbWtnNVFGRWZEMzViMUFpeWphSzJNWXgwU3FKR21EN0tnTm15RkhxcEROL0pUUUZWdjFBTkp0MW1GM0FyeUZ1UllUdEhlSWp0Zk1tamdIQXZ5RVlvdHJzVU53U2ErTjg1MmhleGJ3d2ZDdHE1YVgyVzdDTnNsc0VqQlZMaFIyb2FiOWc3OWs0dDl3c3JjT1BmRitpelYvKzUzN0l2UDZWdlhZcE5KM0l0cno0Z2ZXY2ZNT0V2dlRaYXMzY1huZnNkdVZIS0g3TjBHOXUxeVhhSzNXWmZJNDQyOWpMRStjbExvNEZ4NWlveHpEbERENk5ENmM0bW1TdXAwd3lsanZFbmhMblFVRWZJQ1Vub1I5OGExL1Y0UUg2ZW0zeWFWelN6dnlpVEdVL2VWUERUdmYvVVo5SThXVG5GKzZJSXArU3lOWTFIMytCRzJGMmszOXdocmZyTUxUTjk3dkxrZXA4SEo0d0xxLzE3RU5Xd0MvbWxxbEhWZWovY1BnZkxqVkR2Znl6TkIrdkc5V21kdnBRN3duczBabzVIWDBPYWRzNTdUdmlpWktldGplRithMDBscDhCTjBUTjY5NHBjQVd1V2JLbzFHbFE1U3I2MGhjZXpSZm1tWnVUb3NlNnVLQzFraGVrRFllRngzNHlrRzhiYy8zd2xBSmxoc1EzVmQyLzl3ZS9GY1lQK2lMSG5OdmlZY1gyUDlTMWl4WFVuY3V2WW9HWWNrSi81WjM3d0Y5dWdYWXFsZmw2ZnY2NUFkZEdUL2g5elZmL25JZjFkUWpJdzdtZWVXa1BxcFhBVERFZXZ3TTdUVzc5L2xYOVhKZzRhTVA2TDNUZzYzZnRaZUdsQW52dUw3WGRqd2t4dUxCNnh6c0Y2cDU5d2JUQVNWektjZWJ4N2QvamEwbUxyZmQ4a2lNV3IyTExYSUtQQ0ZEa3Y4ZUkxOGFMSE1mMkdmaEtKbVFnemhjT2JSc1VjN0w0YzRBdm4yT0VjNkZ3dGZPZThDaWVXV2xzbXJnOW5FcUdJT250VEhjWi9SMEl5UjM2NE9kOENRTjRVK0hlZy9Xbm44YU8zblgvdmxkYllON0NNSDI2VlY1cEZxMHhlUGYzK0RwZW5pK3lzbTlpRDZtTk5hUnZmb0RkYzBab0xuMU9LTW44MytMRHJGaTN5cGFySUVmYjVXRjBFKzRWZSs1bWZtRGFWWDFXRVVJWEZ4ZnJ6T1lsbnZsRWZ4QXNSVmNGNlhPYXUwZDhSOVZ3M2tQZEZWMkozUDYrQ1BtcHdaTDFFTUFuVXpYSnY5bk10aEx6cnlxYzNwaEpyVXlmWDVudVo0NzliY01Ib0ExTnd3STduVkNWMUxXUHRLZDRkcjhoR2VLZ2EvdnBxT2NPY05IeGZpbHFVMXc3MEVmSkE0YVhUeXVNT25Xb0VqWGZiVnVRbmtaMU9qWk9RT2NOMC9kcXhwL2J4Slg5VW9JYXo2RlJzTzliTXBNbkc0L2VzOW9jeTlaaFFNNFY2Z3UxUWhoeWtqb2Q0cmlmeHdwRk0wcVZObzgwNDJqcmQvU2VFT1VCV3Y5Rm9jTG5wemRsN2N5OFlybFIzSDJ4Q1FUWE9TRXlmMTlhWis2WjNIcXdIem5tZjR2R0lSSm5Fc0hxOFoxMnZOMzZwbjRDbXRINHkrVU05bEhTa1hWYWloTi9vVmFyRTA3Zk1Zd05rVjBuclFQRmZpVTMzdUs2MzZyV2lmWTFPR2ZqUlo3dkgwVHVMelU0Z3hnVzFhSXYwaG5CR2FnL05pSElzalVpZS9ySGZESFE3c1h1aVFQZ3hWYWViSlNLeSt4bm9ucWVVUk9xRm5kWXRBRWxlT3JTZCtuc0ZkZHExek9yWkxWbkxJMHkwdHBPZEJ6b25jZEZtWEM0OWtBcExxM0JyTFZLMC9WR3JzUitGeGJFSnI1b0JDcFp5VEQwazgrYW0reGF3d3RCODkyRUpmRXFuSjRsN0pEa0VVMVJuWEZnc1YyZE81dUNLOUErdUtIU3BaUTI4M1A2djFRZ0ZhQ0tDb3FVTjB4NFNxWDZWMjcwcldjNldidXJGWW9uQkMzd2I1RE5MZFhpNlNYZ3g0dDUvUUs3TWFITlhCQU81dDFZZVNoYUREY3NJb2pLZWJZSDRCK2RXQmtxU1krZDZnMzB1WUt3REZvejdoVnRXbndVYU9EbzQ5Slh1STlneGtndWdoek5ZUE1VQks4amM0YndGSUxJRU4va1h6YkczQ21FbjB4OFc1Ung1RkIxTE1Ea3oxNWFUK3A2RDdzVWYyY2hjTXRhTzBVcWxjUEtodmlielVhdEZ3UjJ3ZGVrbVIvT1AzaVlSbVhTcXI3aEhPVytBY0llbGJ1ZGpibzdUU2pxcnNScDZTckdrdkdaenpnR1d4L1JJMlVNZEw4ZnQ4dXRjYnd1eW1rRW1yZXMyODZqMC9TcXNwbGdFRjNhMnE5NWZ1RTBZUHA3cEZGeHVzSTBNeTRTblZaQnIzZHpDdTNRczFNdCtDenR2aG9sSy9tRmYwMHNJMkdmcWVBYldqK2VkNnRaK1hESVJJUGxjd3NUZ01ka2h1Z1VXSEIza2p2VmRNT0dVRzFOY0VwZzdLaUVWNkVHa01WdnN1Zk85OERxTkowN1dUL0M2MVY3eHJqYlllMS8xNXJVOFIrME5JWDBUSXR6eXFDa1dsTVdwVDZFaU84SE4rNVJuRUYwR3g1Sjc0eWN6U2RoTS8yeUhkVy9aUzRIZm9GajZYUUU5SkthdnlBZTdNMkNyblRFNGdneEwwMTBVdVorWmYxVG92LzNiTUlUMCtQWGlXZkhTc0FQbktPUGM3TDJPQUUrUVB3ZS9VVDk3UUpQRXU3dUVuRTZIcmNiaDl0Njcwd3BCSlJNd3NCZ3h6enFGa21wUm5tcEYvMGdGMS9VWHlzMG1FN1UxOW5kQ1RpR3dDVTV2VHVjekZScFdmSjlqMFhQd2MvRXhtVVg1WG8yZUpzaG1DanZRM1pvTGV6VkR3aEsrcW1FZWZwejYvekZ4WkYvUjJlUHdvZHkyZFFiNXcyWGNOOTB5bXFLc2xNOVM0ckFuam1ZU1pQY3BSYkdMaUdrYTl0L1dOekdVZFN4Yk9kVEtkeE9MSTIyQ2Rvdzd4MU9BazdzVnFpSFBNMkkrV2NlNnowU2ZiNkVNaHZ0Nmd5dXVnMk02ZThhNWxIdFYrNzZnVmc2TkdaaXkwZVNjZnIvQk1XRmxuZ2R4eWtNQWNSaXdtL21hRVluWThYWXp6d1RRMkIyUjVqenNuMHRyTS9iU2JUMkxSTkFiQmZHck1aSFhnaW5QakxNLzYyNnFYYXQ2TC8xWDgrSjkvRlQ4dS9FQVYvSm1sSmFCejI2RVkxT2ZGeE1tRlZRMEI1azBkSkVmc1YwMHBLdmFiS3FueEpHNHdvdTQ4Qy9RMGtsMGFOdzljRzltQ0RHb2JTMlRYOFJueXkrR2E2T3JrcU1vSDRwTWtoYytieVpmOUJ1QmpkR24vTS9VYnoxcmhNTUR5dWtGK0FOSW5nSnEwRDhCUGg3TVN5djQ1MHZ2MU1ZdzZIdzNVbnU1aGFjOXE2RGNpUWVnclVVQnB6SW8vaTJJdDZvUFc0M3pNSWdyOXY2RGZTZ1lla0UySXAwbXVBR1lqc1U1QVByYktqVmRpU0dzYXVBWUF2Yk8waDNDSDlNbkhIS1BuMFh3Q2lTK09IN1dZQXNWNTVLejIwQWROWkh3U281amNYSTNUR2pOcGY0dmlPeXdEOUE0dnRxRWFxMitValpTZ3BSdzhaTE1nTjkrak52M29BV3Vpc01GOTgvb3FnQWw2SEo4MEdGRDdXekt4akcyWGwzWXhxOU1RN2RVc2FkeG5XVHk1a3Jod0xaMzFNUUo0UGU0a3RTcWN1OEc2L2N1L3g0eVFnUGFSd1AzMTZnaDFSUDlkbTJYeFV2bmcybnJtQUlPZFhKQVpzanl3ZEliYVZkeC9lMWg3bk01Q0h6TEpCelhsK0xkUkhCSXZkWkVQbm1CMlhHSHQyS00xV212Ti96elE5M3FmTjJvMEYzazlPVnVhWlF6K3BnNmRzd1I1b2VtYk9xaWhNRXgzRlRJZjVQdXdyenVKUC9mVlMzR3YzTk95dHZNNVIxVkQraE8rL0s1N3oxS2hUanM5K0NVaTRQcGF6ckRjc3duRWZJVFJVakhYdi9JZFk3dTVaK09WZHFZMStDOW1sOEdtK0t4TzJHUTZaQjZaYVV5QSs5RnlFMzRrMi9CL29vOGsvY09QbGo4UGYzRC9ZSmwvTVA5SWcyb2VYTTNGZWc4VjlDcmp2RUdDWW90S0JvZGtObENCL0NUMko2cWVSWmlSYW4xZUhNL0s5YkZOcEhGZ05WZmxiY3dEK2c3c2M1aVF2N0Y0UFVIMkgvczRaUzBDblhsOTNyaHdMUlo2NkR4K3RBSFpoaDd1WGo1ZURiTHhxdmN1eGR2UXlqVjIwcDhXdjlXdnhvdXNwMlFuZlJFeVdyNE9UY0trb1NxN0pCak9Fb2NMVDZRL3R2UlZ4eGJFOHhzWFpxc0JXUm10NTYvWkJwQm42dWYxMS92dm9lNnNQQTdRYzVJck9aU0RGbmVFOFdwd0hNZkM1L2RhcUVkdDBUdHF2ZTMvZlVUdTJKZmMzWk83YzFQdWZLRWx1ZU1uODdyY1liK1crQUVrZCt0azQ1WEdvT2UveDZLbkZnYW5GM0liK1RkV1gvbm45N21vTzhqdlZDb1VhTnpyUFNyelFqUVBTVm10YU80VmNtdVd2QWFieFd2Z296anAwKzdEV1pNNjJUanVIRDkvbGluUDhMSDd3TDd1dzkzN01LanV3NktYdFhNZjFwa21yVU9qbWxmZU51Y0tvYmJKYVZLbjBLWE9HZU1udUN5ZHVhYzl6Ty94dG9HUStPMStlNXpEeTkxNTk0WnVSZkZkNXpoT2I4amhISzN0L3o2b2U3bVhyTjJWTmJVbWE4YTVKVmxqdGZrNm5HN01neStWc1QzdVFaYXFXTzJwTWpiL1VzYnl4MldNZjhuWVhSblRxSXh4V2wvcnRDSmpxMTR4a1Q3SldKVUhrRVhSSE9qcVUyVXMvbExHaWtkbGpIdjVrUGRrTEsvNWtFakdoTlprRE9reG1IdjVORXQ5WlQ2eW5CR2R1eGFlUGZScWRZcVNyWXZFOTlWNnAweEw2MlYwYVIzTzBxU2p5b200TUFBeCtBaTFrbXo3L2g3dmxJQmlKSlZ6YnR1L2ZnL05EWEx6a1o4YXA5dStvZlpGTEtVK0hFdHhMOS94Z1hzd3FOMERuMjFKcm5oOXZnNE5Qams2K2FYZkNMZ2VSOHdPUWZOa1p2RTh2YXQrN1QvR2ovdVAvRXZ2M3BPM29xbDMxMFZMOGlab2VTTld3WEhKdkpOVnp3cXpscDdWZ2JpSVI1L1h0eFNGbUp3VElDTzduSjZQMCtTRVpCMXdHMlEzSW15YUF3OGpONGV6OUx6emUwL1RzZm5YK1NydFlSM2JlY244UFpsbkdqSy82TFZrdXdjWnN0MExLeW1jWEV5WGRsU3l5MTZaNlN6cnBZRHJrSm9NeUtWeVNGd3JJejFBVFN3Q2p4ZUJKUUg5UGZSalVwd2hydk84bkZMK1pVNkplVFNuSkx4azlwN01zazA5SGZKdDZVNDl4LzR4WGk5R3o0ZlB4WVNSdE93dFBoc1VBOHlvK2xpT3pSbTlXK2podU5iNlBKOWkrcVZQQVhicFFaL2k3U1dyOTJTVmErcFhveTM5eWlMOWlyRnB4WHRzSzZSZm9ZbTE5eXc5cWMrLzFKUGNnM3F5K3hLOU82SzNSbTRTTFFYeGs0WFpUaW1vV0xQdmM5RkU2M2FSK0F6WG9XK2JrUWN0bStiNnd1V01nclM3YzZFdGNuMkFVUkFNeGZVVThUTUgzY0VpdjZuNmhJZEY3eFc1M3hXOWFTbDZIVzJsdHlKNms3NWF2RU1IenhTSjNJbDB6VUkzL1lldHJ3TGxETWlZRGllejlOMWNlN1J6Y3BFaSt0RXBITXA5bVZIdWF1amFzYldTVjhiUGUxdThkbTMzTEVzOStWSlR3aDdmdDlJbzdIOXB5aS9FRlFYOU5VM3BuUFd2d1FVZkZWZE9Xemc4YUVwQ00wV0w5WmRBOWM5ekJKM2JqaUFLWmg3Umh2eXJHZW0rZkZYTlNKRE1IbzVPQVdudzkxT1RnR2xEY3pBR1VPVm1yQU9nMXdrMENldDlhQkxHQXlLeUdBVktaQUJGNDhEc09KYk9QRWQrdEsvVVUvbk9qOG5QeTV6ZWw1OUJYWDRTZkZhNGlYVnB3UkRsT3JCb1kzRXZHNittNS9HcVIwRzVhZ0JsWWhUWXN5MHllWGpBQm9PaFBTSFJSMlhrUnFKUHc0MXBqNW00VjJQYWZSa3FHOU9NaWtKczdGcXpTQjNJYktCMEM0ZVRBZVQ1V2ZvRXpudCsweDZkdFVjVEUveXJNZXN4ZWFpS2EvcWkxMUp4emNpZ3VKYWFKeitGeEpscURBWU5zR2xDKzRyMkVnQk02SER4akV1WUJTOUM4NzNIQVFqNGM1SVVSTmErc0cyd2Q0L0k0YXZaNGE0Y05wb2Q5TVdncFFTWmNkWnhnK0RCNDEzYU1KdFhCRWsxb2dVZ2tvSzlMNTZuK3daZjY3NzRjZDMzS3ZUZWxibWlLWE50TmF3WVZjTktuY0NxQkovRXVoQ0doK1lpNTlpakhUVGZUSi9tZitWZisxOFBGbHI1VjZIMUFabHJGRnIxdnROU1U5ZVV3MDFkWk9DYmdrblVCZy94c0pwV0VXclZ5UW9BTUtHa0dIK2V2YzIvdExmTW83SGtxM2g2Vnc3WnB1NEx1WlowWDBlUGllNlRnb05qUjRlbEphd1hTckp5TGFGd2pVUHlNZmN4QURrQnhRWVFCZ0lVU2dDVG55Wi91dlNsL0xHUHk5OHI3cmd2ZjdWY0JtbThHOXYwdVFBR3ZucHlYb0w5Mmk0YUQrY2xYZ1h5dS9MUUtKQWplOWFPUHNLRC8xTnJ0bmF0S1FhN0hsU2dtTFZCZUdJWGE0MGJsZTE4bmo2YWQ4NmdqK0JNS0xrZ1V6eGNJQWZaZSttaSs3TDNINlNMcnA4MTBrT1kwSW9RRkdJZDVEeXNnLzc1MGtIMzVJQ25PcWdhc1AxTVZoU3Nla2U5cjVKYTRUTmtZWEJERnZ5SDQ3UWZMMW00Snd1ZHBqMEtXeHJ3Y2pvdzRFWGl0Q0R0N2dPTFRRZzRjK2hhYkJZTWs4R1NrR0JmQURObUhqY3JTaEFUV3p4NVNyTDZtRzcvVXVYOVNsODVnbWIrRmhsS2htUjVYRGpjWkRIWXFZUGtnRUZrQVBRckp3QjBKemVtd0htMXhzak4zOUhKQTdtN2tqQVM3Q09ORnovZms4Nmo5dkhWUVhiM0xnaVA2MFh0V1hxeGM5dEdyaC9WaTl5cmgrR2VMS2haUXk4V1drc0RLejRRZmMyVUh3VDRpWUEwem5HdUZQdm1OSmM2a3h4TC8rbEN6aXBKQ1VGSENUUTNmbzZQSnR5VXYxWHZHL0wzOHRYdnl4L3gxVC9MeW5obXpFVGNnSzlIbERSbnBzaUpaM1dQQm1jQ0lmSjdMQ3BMT3d6bmpEbVl6a1ZPaTRFQWFPZWxtQ0RwYjZqOVhKY1I2TUg2Wk9OeVRYcHd1SS8vQi9mcWY3Z3JQK2VtL2dwYkd1N3pPMXBlRGxXelBqODdlZk5QQkFCb0h4Y09KKzlkYS9ZdlFpeEYrdzE1ZmRVS1NBK25GODRadDhlUzNqSm9rY1VrMDVUa2tRNTVUeTE5UlVpY0FWQU4vb2FBWmRLY2JMVlhUa3NETmo2bjU3V2E3S0FFQVp4NzNEbWh3TkUrcDUrUVQrenhZZ1dNV3BIL2xQczI2WnN0N1Z2STF2czBId0R5d3VDeHE4RlJuLzh0NERMWDljYjhodDU0dkUrR2UvVW4zTlViamY2RVNiK1h0M01Yd2t3aitVa0tNRXRBaTJxQWp4aHNvYVpYQmtzZzVqVU9zQmNLRzNteGlHS2t5TFBRdm8wS1ZYRjNubUxRTzlMUjJwbjY0Q2I5QWJvam9xZWNUMEZlRWRQVld1eHJnSk5FNXpSQnlwNFJKK1psSDg4bnZ3MmY2eU4zNU5WUGNmZU9GSS9IaWRNbnhZbHFmdHRQZjdqUGdYdjFPZHlWaFVhZncyVFJheWwvdHM1dy9nejA1Y2tibWdkTTlQRWpkQlV6ZFd4ekh3QkJFWTBQWjRtdm5FOGZNR1B4Sk4xek0wZWxQdHJQd0wzNkdlN0tHOXVVTjZNbFgzWE42cVZmTDhkTDY3d0xob1NRbkJjVGgwdlNqem4wMHA4OHE4dDZtOW5pazI4dHowNUx6bnhTWERtOUdWZnEzL0FQWC9YcnUvTEhOZVd2SmNEWDFSb0FYNm04MUlsWERkeTdUMGtWTUtpR1pRS0l0Wjg5eGJheXQyMnI4N0J0ZmRVcDc4cmFOK3FVeHJQOHJOczE2OVhEZFVydVZhZThLd3VkQ3o4cmE4dlB3Z0JTNVl4UThxRWtCUm0xbmhxc1dEekhudmszN2RsRWV0eWV2V3ArZCtWS2FNclZ0SjI1b0tLWGE5Ui9Wd2l4Wll4SDkzM0ZYQzB0VjFDVjNjbUp4YjFqalJLUGdFR1ZaRFVHZS9MU2hQRjQ5U20rL0VTNjZjc0xEL3J5cnpUQ1BkSFQ2bVA0dWRiWDJ4bkRYL1dLOTdrNGR5MDNjbmpBTlVYSFhHQituRzZxS29ma1kxNGlSTlJnQUVadHdRRGtGTFVDaTArSmQzYnloNWpERE9QekVQN1NlWW03V3RUYitCMWJDeGRwZCsyYU1MNVVyblBTRjF0YVo1aTl6M0dKN0dLZGRjNnZ1V3U3TzljT0xJcE43T2RpN2xyNDJrTVpyY1E2YW12RVlRQWpEaGdIZGliNHlnOW9rWEh0S0FJZU5jeHZodlpzNjlwbUFYeVBUOFBzMUk3YWw2M2tENmVhK0ZkRitMNjZtRmJxUWw4a0xha0xROERxZ3RMVE5iUFkxZk9pdHA3WG9kZU9Jb1I0bHB3dnVka3A0RG9BZWJ6TWFLZVh5bXBzSzUxZXViN1FkcXBjblJHT0dxQmpnVDZyYU90WldxSHQxSUc4ZGh1cTVGT1hXNklCTFp0WkJMMW5kZjVyWHlHaUZBOU8vZkt2YnFLN2Q3ZmVUY1JyL1hYZWtwY3BhSEZWWWFZMHE1VDJrMmJ4UE00cEtYbGhJc2s2YnoxZVozQVYzT3pRU1lBRm1aeERwcmVpZ3A0OUtRSmEzNHFBQ3UzeENJaC9kWXJjbGMycVU2VHd6MW9SQk9ydjYzbGVXMmc4MFlGRllJdVp4NWMwTlNWRkw2WkZNcDhqWDBYdnRudzluakhtWHgwRmQrVXJiOGpYb2kzNUdsRDV1dXcrZ2toNkxvdmljK1JxY0Z1dUhrYzE0Ri9oODEyNUt1cHlwYTltTGNtVnc2aHlpWkpCM2hIMmpkUG10RXZ4R1hLbDNwYXIvSEc1ZWxYMDc4b1ZVNU9yWEYrNDdjalZ5dUNJdnFwVDFhSjlUanlsVHRGZm81NmRpNFhEZFRQWG1qWVFoU3FLMVdmWlR1Mm1MT3FQKzJZdlVid25pdE5HaGxCZnRSV0NPNTE2QTJpZy9BZzFxY05vVWllLzBzZ1dvbWRQK3VHemhvT0wyK3dZMnZFYjR2YnFMYmtuYnNhRnVJbHRpVnRXNjZWVVlhWnVRQWlJTUZBNzd2ZTBramQzM3N5WUJKd1pMNVh1YVprSGhhcklSeS90TWhoUFF5akdrc2dzTFRieGVKTXhPSFBsY2NMYXo3TUdXYm5CbVh2WDBobVBWL2VxMG8yWHFia0taQjN0NHlwUXVqa2g0bCs1bUVSejUwSC8rUG5rY01TYnpKNlZtWmwrbFpsNUZKL2pCYy94Z01qWGtxcVQxcEtxYStGR2JTR25pZFpuNWV2MUw2SCtIb2I2ZUhWSzNSTXRwNjVOQzYybDZRMnQ2TEcwdkZaMWdvcjdwU1d3SDVKNDlMaFpYZXM5eTJpelh4cnR4K1BnVjVQVVBUSHptMksyY0ZzU3N3SDNQaGNuQVFwVlVubnY1K0xPdzRQNTRrVzZCZjM4SEZoZEJ0NG4xOUJuZjYrSmdrc0tuemNUUDRkMXNPOVBBd3o4RWpDZWY5QUkvL05saE8rTDhMUW13cXUyUkZqbHFCSDJsSVJ6Q1JrL3hrRWRKWTQxMjNtWWtDM3oweTdRWXpqMmJJdERvRm5rV3V6SjIraEpRQW1LbjFhbDgrK0k0VU5WdWxlTDRUMHhEQnVhdENVQ0lVNmpCRUowM0JMei9hMldFdjZPc1Iwa1RocWRQRzUvY0RnekQ1UWdBV29FUzk2NEplU0p4dXZ0RktjTHZmQnhjVm94MXhEcVdEUEpzYzZSbCtxSm4raW53QjZ0WEhORXp6Y3RPUWVCQnk0TFBXVlVjUjhYUmt2d1pScXJsK09CZXVMd1pyNjBad0lVekJXekUwQTcrSXpCVERYaXljT2o3RkZnblprU2JyWXM1RSt6bHVCaEdLMC8yS2tEZC9jaHdaZ2k0NmZkdmFlWWVhTlB5UktPSGovRDFBS2JzcCtLYWF1ZlMrOURQOWNJaiszTCs4dnNqRk9MSFo0V1UrUUV2dTJxK2dvZjdRRjZkYXZlVTFGMWpqT0hhWWxvaXROclJGT3pLcWFvcHNzRzBYUktwbjk4VG8rODUxR1NZM0c2YlEwZjYwN3QvT01GUVBLbHFERkFFa1djTXIwd0N0MWt3dC9YcUQ2ckZVYVRHWG9PeEV2aHA4ODhaWmdEU2o5WGhqa2dHZmNZT0FtSTFrdU4zWld0UlZsaUU5b3EzVTZhcGRzTGkwM1gyU25CTEhDYng5OWRQZ05aRXE0MDE1Zjc4cGlNdmZUWGZSa2JVQm5yNklYZWpvejEvVUlkc05HU013c0NNdU01dHBnWnc5RXBVTG9yanpzM1RISlRId2s3TCs4QzhRYm9JZVJ4RDJmRm1LZmVwSW4wVkJJTWc1T2ZIblplNnA5c1hrVDd3b3h6UGZLSDRyNGtzWXBaRkxReUh2b2VhVjJXa1NtSWpHTmx4eWZKOXZsYWFSZ0F4MWVEYitoUTdpWGZkK1ZiclhSb0ViV2tRMzFCbFd1a01aUmc0YUw0aHBNazh0cXpFa3ptdDlIQ2VkcU5uekNRUysvNlRidXRoZHNIWlk1L3lkeGRtZE9JeklXWjFtOUY1anBhdjljaHJURzVhNTBqSnpYM0pOTGZlWEhUam8vdFVsY2UwTm9EcFp2L2ZXUUtWM1ZhZnR1V2F3L2E4czVMN3U3SzNiU1VPMzBsdHlSM3psbVZUVElaaDgvV1Zib3JzbmVaQjlrcDhDVkxQbVc2ejB1ckV4cHJVNXdOV0htY3N1dW4yZHI4cHExbEhyZTF3a3YrN3NxZlFlWHZySzNFZHVSdm9XYXExQXRyTWN2R3d6b3ZEeXpoV0JJV0RldGpTeEMzbk11MUxKS1cxaklRTHRhQ3ptOUQybDdQZXQ3aHFtZEdiVDJ6ZzU4NVNqeXJ5eUhaY20xa0E1Q1BDOW5wbmJNWlJYNmFKSDZlaFVFSkF0RmxsaWltZzkvampPdWtQempyYkJzNUN2Uitmb2pXUlVnU1RxNWlBaGlpYTQ5eWp5ZlpiL2c3czYxOVlHRWZLQ0VERjJ3ZFN3Yy9maEtMaFd0UFNXdW9mdkkzbzhUaHA2R3ZtSG5wZStIQjhxMWp1NG1xeUNzVVIxQWRGdGo2VmxXQWtCTG5YSEJGb2FQMTF4MTdMdjUyNW43Uzd3a1R0SFpKM0VDQkxaVWhTNi9LdWpvbFlDMVRaaEI2bkxEL21PTkdLMkxYeS9TaXpldUZKd2tiTCsvOUJNSXU4UE9TQXNYcUh1ZUV4dVM5dHd2cHVzTzIxdDBoNjRZQzRjeWE3UUpKWkpaS1VxaERFVUF2WVJRUjd5TUdBTFJrV0xlZnlrZUhDNG5jOVhndGFVWHVNcjFRc2R6WlVlYnhlcUlPZ3NSamtxa1dpMzNrQXkwdElmRWc0OTlkdTNNeDh2TUdxUjdaSCtmYzB2NXcyaHoyQitMVmR5S2JmcjUrUTNyMWlzMkVzNjZQalU3NlBYWWl0N1EzaXhEMlpyb3hENzRrTnIrSDF6TjNOWUNZR3VrTFZYRnpqMk5DYmQ3Sng2c0I3bStkZDJCY2dLNUxiMjFkMDhhNlBLNjc4UlRqNkhMZFBZcDl4bWszZC9QdXh0K0lxOXE2R0czZXlhRDVzVCtnWVBMay9JeTJ6bzhsNXhkNVNySkJjaHRZUU1DT1I3RUlDYTJibWxFd05ITjNMdWF1TGJPdXJUTkF1TTNKdVl0QlVINHVNY0RjeWVITmcyc0pKQWJzMEwxazlMYmt2Ky9BWGhwMGpZQVFrT1N1aFdUZXpBTWxTWEgrd3l4VUtWekJzK2ZyYWgxdG5Xa2ZuNmxmQXZmNlo2Mi9ScktkT053K0RKUUV4UmdiZEVlZEhPMmJmdktHTUg2NTgzbTlSRlZBYTJwTk4vU3hib0M3eG5ZUGdYVm1scmE0ZDgzdXp0dm9qR01KSzlmVy8vUTRJYkc1RW1qNFQrVHpMRG1Uc1F1ZjFmdTFkWmx0cld0UXJhdllJaCt4b3c0QnRXRGpBcGlPdVFyc1dlU2taekxhWU5BMXRGUlRDRE90TVBBZDVMb0g4RXNsTVE1c1hWQ1ZMdStsWnU1bjlHNnBRa3QzSzUvZ3V3VWxNNStmNWE0bEg4YTJmbHphWW9ic3RXTnJvVE1IdlowdXJVQjM3QjcyNVFiMVBFcW56TmVWTWZWS2J5bTJVUXZzVTBEMW1vNHhRU3k3dE00a2h5aW1uaUp2YXZ2VGx1N0ppZTRaTEcyZG5IMUZFT3RaM2JYUElia1k3WUpoOHFlL01mZElka2w4c1hOajhkQWdnSm16aFpjbW1hK1lESUJqRC9YTXRmU2RteWFKVytyTlFWdG5leVpuQzhnZk5idGZ4VDJrOTQzNENWU2V6MjNaT28zWU9tTTRTbndBQkRKQ2p4K3RVVHlBL0NGZk9iUG9NMERpbHBZRWsrVTZXcnRYQzNLdkFNUklTQUlnS1VleHI3QkdkZ0RIV0xOVEl3OFlpeVdRK0dYT3NKVHh4YXdsR1I4d0lPTTRkN1JmV3NKUGlpempXR3lHNGxIc3M2dWhyOGdiZHk0ZUhFdll1YWxaQkpKSXo3UmFWejlwSzUrRll5bmNPVkw0QUY0TnR2UzZIT0VoQk1iamV3ZFBNVG5YeW5Dc1hkbVJyRFhaNm9mVm1VSmNLY2V1aGM0MUlEbmRCbUh1d2FlQVZGWUpTSFg4c09TRFY5NjdYdEhTdmN1MEhPNmR2clNFa3grTE84OFdjMlIvYWE3aFhYRlBmc3BHd1JBQS8vZDRyZnJPNTJlSmwrckMreHoybDlqRDgxNVZBblpwelpMcWZOdktHL1hPcFc3dGIwT1grM0Z3K1ZIbTVPTEE0L1NmcmoxS2w5WTVvYm41U1RzeE9qOVpyTEZjS2NuQnNZSUUyZHNBSUZ2MkhUOW5pMENSMFo1dXhtaXYrZWxoYVFtcG53NU9McWZIWTJ0MmNyaEQ0c2ZzeHVIT3A0QVFDK2pGV21qSGYwUHY2WlMrd09UeS9MQzg4Sk5GMklxODZNVzZRK1FGUThuTXhaWEhtM0RuQWFnZDZTTmVURHlsSnR1NFhuYzVMdjdwUG81RHVsWmZhR210L0tUMHhXRUlDbUw2aTg0eFF2N1QwS1h2SGtmekRiNmd0d1ROTUZuNGZFMXZGajUzL3ROUHpiOWNTMmRzeU4vTmlxVWkveVE1b0xMVGpuUzlKWDYxUDJ4Yis2T1QvVUgrbEtlWUc4ZlNoVWJObnVaK2hrNDJYaG5RTTRMaU9tS2JWL1Y4SlpIcmx1Snl0Ty9ZOTZacnFJUFRxa016by80ZjluR1M0NUxZNHlmVkk1amI5UWpqd1hyRWoxYysrRzQrT0tUNTRIeXlhSVhRcHFPdDF1ZDNGSWRiTEpBUm91OVJoN1BJemNYRTJ6aWh1eG1kUEtUbmxDN3JvaGpIU3ZhbC83dHFoOWg4MGxjcll2TkJOM010d1hDdGN3S0F5NXQxNkhQSjJyWDB5S2NkeXZQTGRmaDhTK3ZnUzBCeXZJNkZ3VGpoRlB0dW1aOENVZTBLNElwU2VWMzU0U3JmRG94WG1Pc0E0NFZuVVZUMC8vMEJmUWFudC9XTWxVK2h3bEtmQ1hKa3cwcUNsRSsrZFVYUzQrZmR2enhPUGZpS3pEZ2NoVktiVVY4MmJ3bk5zYU90QU0yUmRLK2JhL0M1VXBjbEpKbUp2eG1kZkpxYlhSbHR5U0IwZzd0cDBwbEFwN2NnTklaeWM1RmZra0dOSUpYM1N3dkYyeWF6bEZqV1Q3T21YYTNXVnJTMXRvb0FhM0NSbDRMWUtQVnlpbWhKL1hlMTBKTjI1RVVybkowNkxDY0cza0RYNGRvSjYzTVFSeGU0Wm1IUW5FS3VyWUtXWkVIbDY1TU1ucExFZmlyblM0dVNicFhyb3NSUjlQMXozV3pwL1ZmR2p1UTBkbDVhOC84MzB3T09aYktEUTNLWERvRS9BNzlxS09ZZXh5YUJFaVdCclZVQThzVTJ4TzhaL1ZrK2wrMDJlZzVzdEIrMm1maDhkYiswVlZzNlgwVTZmK0RsNHRIanB5R1c1eG1WSmJ3ZTZEWEQrZHJBRW41NmFaZUhPSWZJcUtyb2V3ZitmZEdUMDRqRnphTTdGTkhlTXVVN0xNU1czbUdRdmM5RktiRFlURldhOThvZmprNW9yNWVLeWZwNWQrVXBTZUp0Wm4vUy9IZ3RKMzZ1NThTMWhYclVhRTFqMVJOYXVyc1prQXg4TjFlZjEzUDEweXBYditveGJhMUxwMkRSQXhuMGlXUHBqRHBBM3dWNWplck0ycGtxNlJDVVlFd1FTZkk1WlU2U2MrcG9zNUdYVHV1MU1LamhqUzAyOGxKNTQ5cHFHQXhOeHVOSE84Zks2SDF2YVFJSHZlOEEzZmZFc2FmYjhzN202emNrNTY1RUIvWWdmd0tJdUI2SDFnbzVEWXd5UEt6dUx0S0xBWjVraW1nTnQ2V0ovNDYyZ0lsL3FCTzZHL1BvOEpEemlyeEwxT1BoS0hHSDVzcWRpOGZBWW1PYTA4TjNwTHYyYzNIbHAyWkVBT2dqTHhabGg0dE9Nd1hGdGwyaEZrdWpaN1prYndjQzJOdDZEaC9wVDY1NzlMbWtDQlRJcVRmN3FSdTVQWnA3SExSRXpJM09aYkFyZTNNR3dRbXR4K2Rua2Fka0pFNEdrSkRNdGM3Nzhpejdia3RuR1hMdkZ5akw3MXlRTzVZYmVlbWdoTks4a2h1ais5RFIyOXFIdm9IOHc4eEgrbHNTVVZ3RE5UZ3lCWGR3N05scUtXWElWcUJ6aWx3SmlNdEpEQUV5Uk9xeTNkelAyV2J1ZytiOVd5SnhtZlFIZkYyL050OFpmSGlRSWNkS2pxNDlLc2I4aVBWU2pjUTF2VFBFVmFCajBIOFBLajI3OEl1MjFrZDlOMXkvdnVocGhmc0pPYUl2cHYwSTJWRzVOcWV0dFhGb2JTWFJDYXlqdC9aVDgyeHp5Vm9kaW52SDBwT2wwdDI3Y1A5bWljL3ArZEp1MUkvT3JmbjlHTVc5UkQwSENETHNVNjlVQmNsUmtycTJ6bFF5WkxRbFF5eklFRDJqb1g3eUxCUUxtNmVsM1VQK1ViNjBnQUM3SUhxL2xwL0NjVk50VFd4YmE5TG42MUF0L0Z3dkJyaG0zdCtHanUyZWx0YjA0Q3V6ZUd4aGNtYklIOXBBN0hxNFJ0UTJ0bVk3bnlNRTNoWmFQNXU3TnU3cjkzTjJFMGhNMmR1bHQ1VlhXQmhBbEl2SnU5QWE5Y2hUem9LcUJJbVhtam51cWNKVHBXQUR5djJidGlYYkRMNTM1NzNIKzVDM1E3YkZUWk5OWUkrZ051Z3BzcUFxb3dUcDlrLzNUekU3UzN0VzlWMFZiZWw1RGVsNXlEbVdPcGlodm5TRHRBTjZMMmwvbGlveElVd2Q1eUxKeGMxMlRwcnNsL1pNb0g1NnBkT0ZsYWZJaForTE4zU3YycFlOenlGdlUvbHRHQVkxQ1l4bjlhYnE4NXU5cVoySGUxTmZZeUIzVTVFaEhkTjBPdTIwZGZqY3BEKzRNcVk1QUZmMVAyQlVFNy8zVGZGU0gwdHp2Nlk5N29wV1JrWEx6OXJwcnZWNXJlOWZFUzMxUDB1MDRsdWk5ZUJFeDZ1aC9wNW82ZVZ3dWM5b2NqdWlwZmQ3VjBSTCs4OFNyWnNER3c4VzU5NWVvblZQdEVxREdHYnQ5SVQ2SGEwL3ZTSmEwMXVpQmZWeGZkVk9MNjllT0t3MkZ4Y1ZqVUtTelZMNXNMVE9ncUYwVWV3Z2tGaG81dy9jeUxPU1BjN0p1enZYT3E5SnYzMERlSlgwRlBDVGRtWTVlTDFZZDlTQjJmRjRmZVZZNTJRUzQxellYSjRaaG9TZUxlOERKVm90RlJQNXpRZVBvMzA1YUExNlcyc29hdk1yWDZFclVUajM4M2cxZUZLZDNyZzFyOG85N0J2Lzg2VUs3cW1DMG9GWjUxbzdEb3lncmJRcnFzRDRVaFZNK2oydUhWVVFabnFNOXJFTDZTamFQa3lZVlhiZVpvYXVTdVJKM2VSalNQOWIzSHVjdkhaU2VZL2J4TlV3R0NhWk82L2FXSjRVSW5LM1dsWDA3TUdSN2U3ckN0eTVBaFBxYUszV1Fqc2RVWTR3V2FqM3FPSXhyZW13N0dwRDJoVW1KUUJmenRhZXBIWDlXMXBYZUZEcnZ2aWs3b25jb01Rb20vU25uWllLUXN5a2d1SkQreHc2L0NpaEJjdWwxVUY3bVh0Y2wxR0grc3BQazR3bTZQVitXOFdOS1JRM25JcWhuZzVWeEpnM01UbTR1Y2c0Rms1d0xpMTJveW9qZGdtSmFad1VkS3h6dHJTRVJNczdaMTBxQjJvWnZXaUYyQUc5YXdlS2tLUkJ3MG5CUXVGR0xac2luNHE1eDg5T3pzWk1WU1U0ZVZaM1hhNWoxZFk2Z0dCQ1FmSk9FcVZJdm84dUh4NkRWTTdIR3gwNWdnZWFwUFJUYzcyMFI0bkR6eFlPdXJhV0VRYm8yUkk0a1Fla1FnSk96bDJKM2JxV3ZIYnRVYUVPSWNrZVdoS3JlUHlJZCt6UjJyV21Cd3pFOHlPRU8yaXhXVENrQTJKVHRxVW1IRVpmT0R0MWtCeDg1WnlRZ2FPVGsrNWdNTmRWek1TWG9BazlveGpjNWZQTnRwNXY3R3FPN3RxMXhjUkxvUWwrVncwTlRGbGRidXQ1MC9yemR1aFpINUp3Y01zN05tMnA2Vy9LNlBrYXZCTXZGOU9sSGUyODFLZnZ3N1IyZm4ySDZwSWlzSUtOYStzTURCbldHOGRpRm9NK3pGbmU0MGZyc1RYYWU1eiswMU9Tb3RJdFU2YTE5NWJXZURnVDgvNDBCK0dIczVPdmRQY2VGd2lFdmhrRmRNbUhJb01NbHZxRk4zTS94ZkxvcFVhNWJ5MDFSREo2ditRMXJjdWNnR3hLa0NaSmtLT2Z1U2MvMWV0Ti94MjlyN1cxVHdYYUo4ZWFvYnNlZXFuSnE0ck1Ca3A0Q0pSek1iYllLRkQwN2RqU2o5Y2JGS1o1V3pLa3JaQU1qVmpQN29VWGVyTFJPQUQ1SUl1RllUdjBjN1hmdzF4ZTBGemZ5Mm84WnM5b0Z1OWM5OEFIajBHMkluZm9WYUM1Nnc2RjFCMHlPaTMxRGJPVGZ0azMzSithNHA4R215eHNSbGVOZGZkZkpxYXJHeGg1ZDJxd3ZUQkFSeCtMUjljeTBiVXB6Y09rTmZNUTByVkFmZ3BvWkUya3ZrREZxbzNhNlZDTWZDRG9tZEU1a282K1VQTjIxSU9SYXhSRit2TzhPb2xFR3ZOdHg3S0haeTVBa0R3dGcrVFJ5SkJxZVRPeS9xY0V5cFN4NWRvMWZRemJqSDFSTk4rOXB5VkY4M2plaThzK25FRjFWZ3Q4Vm1HUW1qbnByNzNBSm5QTzVIdmlaOGpKWkU1UXVEL0xTZllnTERMN3drVitSRTRHcFp4VWMybml5ZWVub2MrYnNXY2xUSVhTdnNaaGw2THZYVXMrcWtNelU2VndwUzBHdWJZYTdGU2tBeVVtVkRlanhJV1pGcVNqcXM4Q1BmeFFDMzNNSGpVaW56MVArbUgxMmFSMHpVZWxialN3YnF6UDBEWHA1MW5JZjJ0UzU2eUd6eWlGZ1V4ZXo4WXNlbyt4VUlHOHZ2eVArL0tLY1VLblhIUkNhNXJFb2tnd1lXb1lDeUxwemRRWlArK2xwYjFXMkdocFZUMmJaQ1pwRlF4TjZHME9PQ0h4TjlxUnlDVXo2ZmQyNkZrWU93dkxNZTVOaFF3ZzFwbDRmZzI1eWR6U21pVitES1IvSjh4dzBEMnFDZzYxNkhkcUN4VyswN1ZtT3p5RGhGM1oydmN5UzFzc3FyOGZ3Ti9UTUlITTVPQStXRHNvUHErcnQxV0x3Vm52RDdMMzZmWXYwbHVPd3I2ZmJncnp1bFVQV08yOGNEcWx3cHNPSlBLTXpTanlVbjFMMWxOb0N4L1dzN0RNM09XTUVLZEphbmc3a25iV0ZpcXY1eVJFR09ySXBoeGRidmMyNXVpOUdPQjdNY2RyMVlvQkEydXRyZWVDYVk1OFYyMjl6WFhsZWhIQ3VuNVhoNkh2OEZNVFpoYUFMWVN1WXk0eTBDT2FpeG5JMG1BZHZzTzdEam9UQ2RJeTVTelJ2TG92RTVKVzQyanY2U1VtQVdEZ0xXamowelAwMXVDMjNucllIM3QxSDkzWFd4aHI5dmQ4c2FkVUdwQmR6Vy83WXRxRHZ0Z0xGL2ErakV4YmtKSHBzMlNrdUMwajA0ZGs1RldPdWlzalp4clgvUjMrajc0eVdyZjFlaDg0RVA4aUtXdlNpMTdOUTJIZkhqQmRRbjg0T2dWcHNzYllzVE9Da1EyeUgzdEtkN1hNcWYrd3h2NkRZcTZYR05PQzJMUHFld01seWZ6cTc0dlNOd0lmTERtNjZROWEzZVg5L1BPNnNLM1hCQTNiZXVpekQ3aHV2dVRjY2c2QStBb2xLeTdwWTZwS1dQeVVQR09VTzVhd1drcDBQWDduOS8wZnB3WC9wL2NyL2cvLysvNFBMYk0rdy85UmIvZy9qNmVOMlZlZTRRRzlOZmhkMi9hcy9yYnpGem5MODBPRWxTQWpyOWordm95b0xjaUkraXdaT2QrV2tZZUdPRmp1SDh3ZjNzZGgrWEtEN29sS1BsNzEwUGN5RHFHOXFsWDB2NTgyakR2WjJCb2xnZkkwTTNTK25UNVVqNXJFeHE0OWl4NU5lM012K1hsRWZyQWJ6YXpmS0NrcWNiWEF6UUhvd1JqY3MxeGJHZGc5KzAwWmUwcTVEYmt4MXltc3lKb2VheFRrWGk3T0F6TDEyeTVPL2pRWEo3N3A0dVNQdWpqY3k4VjVRRWJVRm1SRWZaYU1uRy9MeUtNdXppdFZmRjlHdEJaa1JIdVdqT1MzWmVTaFZQSExmYmtuSWlwdFNxOU4wY0hJekxqdUtxaERFQVVCMEdVNXVTalI5Y3F1cWZDc3RkTTExZEVXdlowcWk3bUxYVnlDVW9lZVg3R0JUUHE5VGp1ZFVXRTJ3UTJtbkF0WlRUbDN1QkRRVkpxc0RHSFdVcE55UndQa0l0d2d1U3lpWXB3bXB6RjNRUEo0Q2xZcVJmM0p4eXNuSzFsYTRnNFBUTXU0SWIzVEZ0clpCSFBvbDlrMlFBNG1hb0UweVJORVNYbnZLOGtSeHJyeXpsa1B5M1BJMnpvSExZWWhncE9mR20vcVVHZHdWeHc1ZDZtV0NRWEVRaDI5RHprYlgyaXBZNCtmVkIxN3lOWE9kWWtnM0EwQk9UejBMSm54MDZSRHpvR2ZMTnBCWE5HTE5mYytGOU9sSFZJRU4zMXE2SDh1V0syRzdFUHZnZzZkZTA3TzRxbFJncGlpRit1V1VHbDhRY3NiQXgxSTMwWGVVTng1cVhFSTBIa3NITHIzYlEyeThIaVE1V3JqY0JFTVVVaXRiLzI0UzBJcVY2Z2hFZkxqbFVIWmpEb1ZtNUhQdHlVWGVoSHVWRVhmZXZ3b21jUVZFckhQWXdhWDhXYld1WlpaOTRlakU3Q09sV2ZrdDRTODVQUDZmQjBhbElrSHlVU043VW92MmtJRzh6RXlXQk81N0FSTVc3YThIMXVBTmx4cjRsYUJoVThIbVVFNmJBRG8ydlE4dEtTdDgxQkxXZkY0dlhEamJ1RndYUmdNOE5QcGdiTEUxVkUwYTR4WGtFVXIxMlMydGFZQlJXQ04wYzljRytrTFhLVkJlb1BxREwwUVc5SVpmdlkreDB3N2dCcWxKUFdSMTVJRkZ0SVBxWDd5VS9NRXFFc2Njd3BXZzNCcWlxTnlUYXVrcFRVNUFrWFBoR0VWbmd4WEtSVVRDZkdmMXE3dEpwN1N6VnhiRFYzZTNMbEtLU2R0b1VqemdDS3RrTlFiSGtuT0tVSStWSXZpemhtanc4NFNYem1mUHNBSDFFTFRIR25WblhYYXVyT2NQdi9PWFlKMFM2N0g5YnRFL1MyZmJlMHVMZFNiZXRkWG5MT1dJemQ5bER2emFsMmxYVVQvUGU5a3BSeTFoTXltRjRETWRoMDVsNS9scmoxYkxZZnFDYnBBRlppcnJkYVdkL0p5YlhtSHJkYlcxcjB6TW95T0J0VmhqRjVtQ1N2WFloT3ZaUGdEOEpaMnpxZmZxOHR3c1ZRR29ic1lKYmdEZHNSNnFRQ2RnbDQ2RFYwTDJhZ0dHMFZITDdTV2ZHVy9RTDV5R1VyQ0pJRkcyU1ordW5OeEYwZ2k4dEYyY0tlaE9pMmNQSTUyQjdnbnl2SVJLR2FtS2lNQjJTM1hMdTExMGRhOTF3cC9WM1lnV2xQc3kxcVlIVVlkNmx1bnRKTWExOWJlNlBFNjlEbVRVWlh6ZW15eHJNOWxnRUsvN0pYUGFzc21GOGdtVTdSRnowbzJmZ3FwNUQwWkFrWCtCOVVsdUdNVTloLzd6NVZlYXd0aHp3ZUV2U2FpZFluMC9sWm5Bckc1Y3hRbzV0SGhrejk5emx4NW5MQ3VyU2RyYXoyYXRBNm4zRHIwcVc0ZmxySENlZEtTdmRjVzY1MHFCeWMvUFFEcTdZSVhFeStaWVNSYWU1Wi9vTHRxelJLSGszTlZpc2d3TkVueEU2YWk5MUlPQnkwTkF2cG5RTXpHUStBSllZZ29mTTRKZlE1OGdKVmpqK2hnTTYvMVd4cHNMbnFkaDVIT09mWUFVMGM0enMzR0s0MmhObG1UT2tYZG5yUVY1K29GeExsa2ZjVE9iclNUcTVob2Y5YXVKYXcrNW16dTJ1N090ZjByL2lPMndkVzYyckp6dlRQMWwzd09jaENSSjRuTWh5MmV5bnV4V3JjMHFPOElrL21hTWxGdWdWVWJNM1ZDVEVVNmpDTG83T0pRUENYbkx1Z3pES0ZTRHEydTFwM1cxaU9WL2xCRWtNR0xNYkJWZFNOWFlpTi9NOXZCOUlkVWl5L3l6aG5iZHcwbXdNaVpjSk5GTzJ3Tyttck5YNU1WcE5zRHUzZHd1UisxSEkxNjFIQ3NVNUJjR3QwanRxMDlxdm1NMVI1eHMxUEE0Y204c1ZWRHhxZnlpbjNHb3RxYldWdDd3MVI3bytlT3ZSUEdGaHQ5U04zTmt1NVZ6SzR4MjV0NmNEYm16bE5tblZvY3hvMVhLcjdyZWFkNFZvbnFacWZXNDJYTVZ4WHpnZFF5aHRneGxvb1IrbHdVcVVvM1ZSVzBYdU1RY0dhOFZMcW5aYzRDY1lMTG1VZHFGbFhKSWNUdVlMNllPdEVTSVZEWlkySVZBbXlkaTBBc09KWkVIZ2htbTZtcm8ydjc1SE5tVVdLUEtFQXdTZEthTEU1cnhsV0t0YTNVM3FRUHFUMjJKQW9DVjB4SWdyeUdQNEt1eVhBYUJrcDM3ZGpyWjF5Si9HYlhDTnFUeDY0RS82cTIzTGtTMnFQVmxpTmtuNEgzSllqOHZCNXRRaDl1NWl2ZG5NNVZJUS9HVjdvN2J6TU5mZTY4Y3pnVE5MOXg4WGZ6aHRYQjJSQU5SZkxZOHVQL3I1NUpzcHptdXJvU1lsdFhBa1hRaDZVVjVBVFQvMVRuNGFtL2cxV3NNNzBkTGhKQjZ4dkNPOEUvTE5VUGg2TGwyY2ExT2tSRmxaRjI1RzVnQm0vakZZUHpaRUU0emhhOWx1QlcxaG5BcmNpMXVmODBlWFBuTkhMU0MraTcza3hERC8wZVJ3cUN0bWlKVzJjeEFHNGRtRWNjSnBGblpXV21rbkNzWUE2em1GYUFXTlliem5ZQXEzTEpYL3lNWnFTYkRRVGFvNzNXblplNnVxT3VwbFJkaWE0eXc5UXVsNnBIU1FySEd1MHhiY2g1RjZUbUVWTnZnVXBCUWY5NmFRbm9XSEV4SkRYcmRDSk5DQXhsSktnRDhiaE1UUlNZNUE3QXRXcUFZdGJDZGN1MUlxVGpGbS92TitrRDE2RmpqWGFlQXFNdjZDeUJrclpHeTk3M09JRng3WWl1VjNCU2M3K3d6SjlMRENmYnh0WHNRSUZWMG5oOVplU3F4SlJKTi9jVGJBamFTN053NXlLRHZDd1hlUTI0Y0UyS2hiRFBWVUpvblF4VUpVbEJkakVGOTJwcHVUdlhtaDdKK3lpQlBXUDkxTlFkZThiZzVIZ0xxbmVoWVpPVW1rZkhZcE5Qb3h1Y3VYWFM3bWtKbnpVWkdJZmh4Wk9uSkt1UHVTQTRGcnNmeDJMOE1SZDdNMDVlTGJrZmJjbkZXWHRPZjB0eHkrUFNwWWVERU9IVkpuZEhoUmtVWllnd0tDY1lCQ3d1VzNSajEzSlBmbXFFZmdsZDI5dXF4WnJWQ3p6QjVIRHJPcHRrNGFMckFZQjc1d1BKWDRmdmtpYm8vUjZaSE1Pc2JOZ3lyZC9VQVdGTVNlVzlOMXdUWm5Ma2RVd1A2TjJBc1p5d3N5TjFlY0ZVbUdFbUsxaFRyaGRyUEZXMVFjRVNuc0txMWsyWXJ5eDBaYnRIOUN3OGlZOEJBWEZBUmNTTUoweXExTnV4dGREamhQMEhmdmQ4c3NEdi91dHRZODVSZjByNysvUVdrRHo3WUZ2aDI4c3J1SCtsTUhvMGV2ZmlIWXZoYmhKRCt3b1FkUWFXRVM0NVU4QXgraWh4ckZtSmFlbGFRdVNrWi9BbUFIaDhVQkVtd2pWYVRiT3lRNTRmUlM3YVI0SVBDaW0vaFkrdWRPUDNKV2xtZjNEVWNQdkh3RSs3R1c3YkFjL2w1SDhaRFBYTzQ1VUtGZ3FJbnZJSXJ2ZjdncEQrVWVMaENtTVFQSnZTeWlySXFsRXZDQUlLM2JHRXlPWE1YSlhDMVdUaE1OcHZEamJxT1U1MTByTFBsWExEd2VObXJJY0pVaGtYQjFjd1JZRDJWZXM3T1ZaUE90cnYvR09Pdko1a3N4eE9ENEhTWlJ6cmdpQTRGbmN1SjV6OEZBKzFxc01SZkRmZ2xuSW9XTlB3ZVJXcVFOUWVURDQwQ2VMRXdwZUNRaDI2SjI4SXVLYm85K25TOHNsbnlWa1R6RW5YZGhNL2xmZnFBS3MyeTVEMWhTVHVmRjVua2V3UzdOUGtZempMSFlNOXVVTnpYK0szS21ZbkdJNml1U1hzZ2dIc1h3U2U1NGF1czRmWFNZRCtKMVJHbEF2MWxVWklYdEc5Q01jd29CeWMvSFFmemdZaGdBMDVGZ1Blb0orYURKN3FXSFA2QXF2bEJobWwxQjA0bG5ud09HSGgydE0zZFhDT2tLZUlnanEwZDVRczBWRStlVTFIU3RUcFNCMnlkZzJmM1NDYVRoZGJJSFVtaEFJZzI4RnFCRk05MmdVKzVoaGFVU0NOblMzTmFxb0V0ei9RRXUwc2NWTVpCWGNTSldQRE11c1gyaHhrRnNvVFMwdFllZndJZlRkemdTR0pBMVI4TDFnZkJyZk55SnVMVzhmV3QrUk9uTHpVM2JtODJaQkpmVFhnMzNHTzhQZnV4Uk1DVUgxK3F6dlplVFFBZlh1bGtPK1lHb2Vta0QzWVpwT3A1N1JXZ2EwekhzZUU5UCt4YWdsWVA1VnZnUDlYd1A1WXhFTkdqOWZOQURjMUN3K0pLV2RRTWdEY3JVUzVGTkVWbkY5NUZ1WFU1YnI3SURYQ3BhMFhnVlh4VTV1S21mdXBuSHI4NkZETno0TjNnbFJCNUhJR1hBbm95UDI5QVRIK1NWVVY3bVpBODNnSytaOHY3K3ZPbGZCcFRnYTJlVUswczRlOGdjMU5id0REZVNtTmE3RW0xZ255RzlqS3JQTUwwY05hYmFpZDNqRTF6RS9YTWpQY2dJMVJ2WW5tWHk5dFBjTlVsZkorYVFWQWl3cml2TkRPZGN0bDR1QW44aWxCZ3BJa0dGWUVmNjVCb1pvVEs3RlE4WGZJNHNrZHpIWStQMklKZGJRVVdMTU41R2Q0TVhGeWNlOXh3YzdKSzVnTXZBWWFtRUVUSXFHZHByQ25GMVMzeU5QNTRqbjRpazUvOTRwMm5vUnN6TjJDNk1KVzlNRXIrckphZDYvb3RFeWJKcmluWW5aQzRnbEJUSlgrUENBcmdSMGtiQkZvOEZSRDM2MVpyMnRJdk9DQU1sb2ZJN1pBY0NCVndRdEcvRDJmSEFzNWQrZklTL1hFWHhNbVY3Q0FCcWZGRklXbVFydnh1ZWdVOEdWeHRRSlVCM1NYWHFZUmgvZlg4d01oMmFPL096L2czeHBoNWg4Y1RmM25LK1YyWC96RDMvUHBKMUluZjRwUG45OHFLdm1QQWhqK2VPRnVQQ1lsWVFPTGdpUmFxNlNwVW9OSUg5QmFSeDFpbERUbzlhZTVGdE5TSldBc1pOcEs0N0c5aDB2K3BzcG00YzU3eDRxYlRKZzRGcHY0dkJnQmRUMDZoNUtTSEdlSERLcUFEUXkvaW40R3ZvNnRadzRKSDdSRkw5ZjdXQkZhWUd2Wm9CN3B1bk14SWczUDZOeHFJWU1STHBWdUVReVF6eVBEZmdMOFZYL1FJVm1pTXR6eE1VVjJGYlo4cHViZittbVhkYm1Rd21zeHZwS0ZMbGFHcGNLZTlLZS9xYkRYbCtmMWQvc3UvSzJtclluVXdGeDU4SmErcnVlOTY0bkRqTlZ5ZnBFTUpjbTVLWWxlYS9VSDBwL1lDZlcrbXFzUThYWnplbFcwQXFQOWdwalNVRUFTNW5TdWM3d1dJczh5Q3g4VHZVUitQZXJHSWN1Q1hvT0YxVDB1N1JuNjJiRitsZkUxVXBuSnZIbU5tcXo2S0JUcThyanJwSEZkdHg2dk0xUHJ2SU0rK1p5b2swVklFdElIMkFkN0xtYmdQdzFoemdMb0JodUowNDBXQmtxVWU3eTVXVkpVd3VFczh5UXhBU09VMG5YMk92cHZKb1VuOHljbHYvSmJ5YS93OFN2NENpUHVYc0hmekkxTzVwM3pVd2dYcEZzSU1PR2pBUFkvWG03MmZmSEFibmFaN0doTzdtZllFQ3NqMW9zem1CZ2JsOXFvNVA3RkpUaEpoUDQzckpXTWpPUkVmMGZzaWllSjNmbW0yRDNxdnI4d1plNktYZmJiV29sNWtuamNObHFQOGVwMlgzN2pIZkZZRTcreGQxQ2xVVG1iWHFVL2hiSzdkYnloL3BPcDAxbjFjWG9sSFR0b1ZFdGl5akNEZk5GM0JSZFYvWHo5UnRyZ0lJVHdGQlBtSVNuWGJoMURBMUsvWmJqSHhtWFJrODZBNHpuZThqbmt1VytWMzZnbndSQlhpOUNaZWh3VVc3V0wzTnpFNDJhSm9YVHpZRWpETzBmUThuWDV2UlpmbnNWQm0zY0VleTZtcmlVenRZWUs2Rmx5bGU0cWdEV1ZoZm5JU2J0c0lKVXpscUZqanpiVVg5VlhhL1o5cnRJeitKMXJ5ajZIQVNlODFjTWpQQWhiMlgzNWx2ZXY2YlM4cHFVREVYQm1yQ3FmSFFNWThWWmtQQ1pZVzF1d1VqTnRwWjIxbGNxTkYzS2tGNE96bGlJSG9oWHg0NTRqZnV0YktXTGhrUlR4UDlMZ0grSDJrTzZTbC94ZGx6L3hueDk1NzdoSVRSNmViV0FMYlZiWnArNmYwOTAvUDNJeWVDQUprQVdrbVNzL3A3OW5RajlGZTJxRVkvak05aTkxZVBpbktuWENQMjNtL1lQZkgyQ29SQ3EvTC9IU0tmenU3NVVwRnQ3WHdGeXdwOERXNFgxdyttUm1sWGRneUhZL2V5ZnNBM3QxNGJuRS83TU0wbmkvajdlYlA3SVBMOXB1MS9zLy9JK2Zoei9TNVdZWmZ2ejg0N1JNamgvN2YrVEx0Q2FqRFRPOTJyNnJFcGxQVzZELzdvWFEzS0IwQzBpN2JOWnZhcTF2cVduaXU0M3NvUlQzUWxVQy91ODNBbW1TamExWkVvVGJFSDJ2cXlUQU16eUp4U002RXduOXZFcXR2TkhQZjloaU1vbkZ2amMwaTBBeDg3blplMGUvYzZ3WkthTjFqeVlkNnVFMStqbVlMVnpRTnRzVmVSZjBYTnlIbUxqOWJSZ01SNno3ZVIvOTdlYndjNXNrSHovLzhMZWJQK013WGU3K1dBWkI5TEVNUG43dS8rdjJjVDFYek1oVnpOd3Z5RnJsOEREYmpDTFBNZzRMWG9TTXUxOXNrZnQwL0hod3YzWS90K2Y4djNMSC9PSG85REZNRnE0OVV5bjcrb1I4OXczMjlUSzIrVlJydjdGNy8xMGlSckt3ZEpNQ1cwL0d0cGg3ZkNUZ2Y4OVFBTGVmeEwwWXJ1VDhvbU83c1VuQjhpUGRidllmaHovU2o4UFAyUDh2azY0bGltNzcyM0NteUlsbmRZOEdaekx3SFFxYkJNUFJ6cWwwWE9LbHlGY3cxNU5ZWlB5Tm1Yd3RYZFhHN2JiQmNyUFpIcGFIZUx2NTM3Si9RL0hrRHBwaEpoWElKbFNKc1BQeWJ1SHdvOGhYakRkVkdzSGVxcmYvRmdaNmtmQkNaWENCUWtoWVk1UDNQRTFPWTE1ZkxSWHo0QzVJdGF4Myt6c2RlN2FkeEQzNHVaOG1Lei9iUG5TMi93c084MHNoLzlnbDJ6ejkyUHpYcTRkYXkza1AxbDltV0toWWY4L1ZxZTNjL3c3OThHa0RNNCtiaVFEclJqb21TMzhJT2gvWkpGQ2lKTEMxNDlMNmNmSTVQWGZnR1pYUnV2bTNTamNQK3R0UVhRMHliV1V3NmxkNmg0c1N6ektJeDlENzRqdGxadG5maG1PdXRBdnZEeDN1LzRiVC9FTE1vOTN5djh5N2FnNkYzSFlPOE05ajE0b2lGSkRXZ3lLZjB5TlBNUWNlSHh5cDlzRHZEUGl5TzA5SjNvalJ0SmVXc1BiNFlPRmErc2xMWjhVazdoVmF2MWQrRjc1STU1M0RKVWw1Z2ZBL0IzVTRFOENveWpBTVUvOWRTSWV0Sm5IdmpOZGFmWjlyajNZZU42cy84enpwOTc0UStIZ1QvdnpZNy8xa3VmOXZVMkEwbWNQZ2ZrNmptbHlnbjRYZWlFbGNUa3JRTWdsK3IzTHdaL3FtRG1kNVlCbms1L1ZrM01oeXJETUxqa3FKVmE2elBqODdlWE9TUk1KS2s0YzUxYkt0U0xlWDltenI4U1l6NWM2UnoydmxNMjZmMWY3ajV5bjJQLzZJTjRlUG41dGw4dDkxWHJCTzJzdmIveklSUWVVOXVtcUU4Ty9LbHJCeGlsdWZtZ2txTUNKUndHc0hncVVXbC8yL01WdGZSNmh1NEZ6aXIvMHBlamIvTHg5SlZaTHBrWFVwd3NsVnpDbnkyK3ZiR3loNjFsQi8vWFdtOVh0dmFsL0x0UDQ2SzlYUzBGejcvWVpxRTdSKzcweFVvYUJOdCs5Zzh3ZlEyalQxVXhORHZHTmdsM2RwTTF1Uno2UFBaWk80YW5rYTh3QTUvemJwOXpwYWIvc2VXRE84SmxqTDRLMTJmVEVNYm4vYjBmcmhweTcrdzhmK3NMK1NFdnlmMWRiN1k3YzgrTkgvK01seGYvajQrWE9iZlB4LzZNOHZUdGZuelYyQWxQV2dNWmh1VjVnWnZmK2p5bUlVS1BwV0hleE9UdHo3UCtwQTN5T2w0OXFqdWNlZEUya3pTenhiM0VNR0YrLzBRYjJKd2RIOXkrTlVBRTkxdVBEa2NHZWtjS0RIMDFPTTQ0Y2xIenkwSXdDQWk2UGc4VnpjSWM4S0d0ZXQ4NXJnVzZ6ODFNUjBxZlBxUWhwcGQrL094WjBiaTVmRnljaFYySjNQUXphNzluNENHY0lYY2llVlYrTlV6MTFMWmx5ckYrSXN2cnozT2FJOGgzb1MxQ1RpdDc0Zkd1NXEzNjNJQlF3R0RHbmtqLzVod3FVaUY3T3FTRmcwSkJldmdmVTIwemYxd2xCK1R6SzhlQlBFbS9EZkpTRFRORG02U0Mxa084YTEyQXlYbThyRHJXMWNwNEtPNDdYVE11M0dZeHQvOTVncnZ4TlpyOFNoMzVsakFCRXAzR0hlMlZJQUU2UTZpcVhTWlQxbEducHBsMUVWc3Zsek1icTV4dndsUEE4SVQ2djZSSWE3ais3OHdWY0FSSmdzbFdsVUFNWTJiVzA2RkdNT2ZaWWwyOU1Ga1JodkFPb0thZDdFNTJmbGR5eHQ1QVRweUdIWnU1SjQ5UGhwNkZBUVhXVVF2blRHdDQ2OWJXVUJwMjlLS09SQWJ1L3ZXQlBrVzdnb2xFbWhoZU5YcmNsTElYeGZNb2dQdWZUOTdYRnphRTg0eWo0aTBlSDBVMkFKekc4SkNCMzlzT1FWZWRsZkZaS3lYMzFxNlN1UE40K0I5RXVDVW56K0hvRTh4d3hWSlNsVUJjWE1PbzN0QzllZVZvZmFiSzQ0M2lpWUhzbjdIOHYzTjZyM3A2cHdFb3VwWTUwTEdxT2d1Tk8xbTg3ekdBTS9ER3BORFc4WGNUeCtoLzQyMUhyWExYRkQ5WDVlVDdpMG5OQnA4YjBjU2R6NWVTTS84dS9jdy9wekloLzRHaG9YN2FBcVVlUXpzNVBEbXdmWEVwaUwvQW1zQjhsNU0wZUN6SmcrUmtyeTh0SjZuUE4yOVo3VVB1dmFNdXRZMmVWWmtRSUVaSlVqRjczZlhJQzh3c1hmY1RSUFlLeE5iV2JJaTltY25Vd05WaDVibjlvMEQvWDlrNjZiNEh2M0NEZUhEUFhNdGZTZG15YUpTL0lkR043dUV0U2xkdmVUbW91d0laN2o1dlBlakZNSTJ2RDlRb3FZRm1rNGs2bjJ0NjNuR0kyZytObytqVzBJQ0E4K04yaEpnUS9xZDNibk00ZWRsMDR2ei8va3JyYlg3bUQ5czRsdm00MmNCa2xXUjRFU3ZrSEJVcEhYamoyTHlMdmV5UGVKbjV0cXJJYk9CdTk5Yk92Ujc4bk03TFFFc0dtWkRaUWZCODlDNzRQN09TbWNwV3UxcUdOc2svRTRGczc2OHo3T0RJODdKRjdhdXZHL1pqT2l3SjZkeVB0KzNoOFo3MHZyT241YTEydEpNY2VwK2d0OTFrMG44WlV6NjlVL2E1NERTOTVmeWpNdGdEeTB6eGVmSmZQMmI2WDlmRFI1Y2xvbWNiQTh4SnVRL3V6WDNSazM4cFJrRFduMU5DaC9ONjFHMW5EYmIvaTl3Qmk5MnRLQ2x1R2ptMWZ1enE5R1FHYjkrOWhTdGZVL2crNThRLzJtR0RmTnRXYXR1VEgxZEdyYi91NTF0NitXTUhqMExPTnZ1WUZsQ2FjdE4rVld5dmx2dk9xV1k1MTNMcVMyaFUyNU51WVRUdGkvdzh6TVo4WlpucHE2UERZRWNXRVloODk5c1d6OVhyVjU3Z1JNZXhBNnZGa0VTdmRBUWI2L1pXNHFlSkJTelVOZVc4Rm1CTGtvL3c3NWVOemRLWFB3MVZwTmVNODN0YjltOUw3MjVaMjg0NHBXb1J1N3oreTVzUEtVQk4xZG9vdjgrdjVBVDg0dFYzV3ltREtYa3o5WTVkOXAvZnhhMlRjMk9meFhMRklscVR0MkQvMC96TVdVelpiWE01N05qYmJJeGVEWXlBZmhuRzFweStHdktuUXFuQXRMem00cGJYZFFnU0ZpQlkxaG8xMTcrcUNQVW11TnBFV2FkdUtlN0FFZnNMSHZOeTVZMWZUS2ZmdnlmRzZZeFFMbWpBMzU2UEd6cld1cmh5bTU2R09EN09WcUM4YTBxcmYrZlg1OC9jeWZGdnZSL1VCeUFUaktXRDYrc1I2czVKUHdNTFdFVTZCRWlSK3pmVnJqcG1keWE0MTA3eCs4OVBYKzVkKzg5bE0vN1hZK0FQV2V2UExWTkZWekZvWTJ6WHFXbk5GbTJTVVZ1MTh2YkdCMXdpQjFjdFVYeVdDdHBwNEV2NmNDcm55UDlxWXFBdXNwMmQvbmwvM08rejRhK20vdzJSaWN5ZHhXQzJYckJKRUI5UTE4aCtFVDBrSDFQZmxHbU9WWkp1TkFIREE0RW1LUzZ5R1ZQSklYQTFNMEdPT3dXTXY2Yk01ZUNlL0wvY0Q3UC85TmRYQ3BhbStGZTNUUHI0WjcxOVRBYjl6ODZ6V3JKaVlneFFZNk9IYnZ3V1R6RGVudS9lMmVmT05kbitTdE43dEd2dWtZRUZUcHlnbXpwa1JTek9LNlkwU2RNYUx0RkhtSFFWK3FjMzdJZ2JnWWg4RHZYVmtFNkNoRk1pQUplSUxzQm43Vm56Wno5SGwzTlU0YjAzNUhUK211SEN1TDYyZE1rTUhCQ2RFV2FxSDM2L3N1eGg3WFJjODRQcGFrL2xwVEVJZWgydGRibWdKUTJxZEgwQkttUHAwYXVqemU2SnlUQzgxNS8vUjhjamg1LzIzTmtDYkhRREUzcnEzZWFqU015VjdFMy8vdTBRbGFEYXpPemUrK05zcnlTZE9VamZ2ZjFEUjFqUEZITkUwZDlmVVhOTTBzY2kzMjVDVjZjcU9VOVJQWkc1eW42TVgxZHYyeTEvbkw5RGwyWFJ2UCtmczFXbU5QL3gvUmFQVTFVNDBXK1dtQTkwVVN3L0djSlhrazQxRE9raFFzM0hMbitsbFdVQTJYZWJwNnUralgvaC9JdzYwOXZmKzh5OWJVNjc1aVRRdmZ1cTNBZERTdStkdmpqWjY1bG5Zc1A1dWFPY2tub0gwclBza1JoelFaK0ZpSHNVWFdOMmZMTmYvTHh1djg1aDNpYVp1c3FzaTVTL3c3VmZucUdWQ1N1bUtWeXY3L0tuK2pmTHVzOFB2bjFjemgzckFjd3FuRzBWRGNzaUFZMWJsbVFlWUNQc2UwenUrZ2U1ck1IQUVDSS9zVUl5RE5EL2YvSy9sdjZYNWRwbXlnTGZ0ZjFyNUQybkd2K0w5Z21YSXZsZmMzN21ENUdkeEdyYzlkV3o4Rjltamx6b1hHODNCWVM4cVYwdWpuWklqblE2N29saHFrc05xMlRIeHp2Y2FicWp5MlAxL0wwOTh1Uzc5MTFyOG9iM20xbCtKK2FiRzdZS2hkVFd0VkpBYmdOZTA4SzJHK205NjZPbkozNDIrdlBpOFhWdjdRZUZQN1JxWXB6QzE1cWQ0SlBOYmtzTFJuQmRKbG50WE5QeGJiVUY4TThvVzEvcDE4OFhkMC80MzE2Rmx3eTN1OWVMKzdmc0lRUDd2eTFZd2prVTJRS2NkS2ppait0UW94R0crQVVJTDFVejN4YzRHZStkRkRzc0dQaEZzcExycG52MktMMU9IczVDdmR2Y2NGQWxvcmtra1gyNzhpR0k0aUlHaTkzdS9HZU1EWTE5MThtT1J6b09OMXhrK1JiWjRWcEg3MWFPN29PM3JuN3JPYmVvRUpDY2ZPQXVCSCtWbGpES3JNazFneTQzQ1JSbUNrTHVTTHJNTVdzOHZJQytsZHlJMHN0dUdJUC94VFZaS2p3NTFaVnpGQ05iM0M5d01zQ2lyR01abjduOVlCZW0vWXV6YmlBYlJ4QURsRm4vVUpVaFVpeE0xMzFvNVIxTHBIN08rSVYyWXl5blZWKzI0Y0VuUmZBNldiZWR6NTVQTHJhK3Q5OHpqaE1uMThjT3hvc2VSTS9zcklGNzlVektOcENZVmp6M1krNSs3QXoxaHNRNFBUdDY0MVl6M0ZGTDFOd2p2MnVqbGlScURCREE1RnpUcmo4ZXJuODFOWWFNdFpFTDZsUzl0QmRFN21TNWVSYUhJYWM2UnRSd3IrK1pHTE95L1Y5NEUxUzFScDlGbjM0M2dnSnRnMDN6b0x3dDV4ZERqNnJNK1pBSFhJZGtmWmQ5WU9XRFVuTDhYMnJIR1hMbk5tNVhrbVk5ZGV2MkgrOW9zMUt0MGlVSzdFUEFvYmZjajZUOWYyRzJVS2ZQZURyV3NKcHJmUm8wQkpDamROd0dlZHhPTEM0YUlFdUwwTStmaGhCOUhIMS9YcFg5VzNkM1hHRGYzNjZYNk9LZFNjckJPbTFXNStWWlllMUNrUHlkM25kckgzcTkvenFHeGQ1bXVuMTlmL2hTN0MwSHVja0VCZXZ1a2pYTk5wTGVpT2NrODdCbmRJZ3FJUjUvK1dySDFibDVTNmJMWmFFcTYzVDNuNmI5aU5UMzU3Nzl2bjBiQU5sNlc1Nzh2ZDR6cURaREpMUDJMT21jSWtGcTk4WjNUeStkbVZrdUsvNVZ6dnRobzM4bFdFdU11eDNIUnBDYnRndUw1UlFxYS9UNzdaS25vNzEzV2x6eUoxMCtTNHRHZENNMXVNc1V3Q0pSSGQxTjE1YWNKOFhPcW40UWpweDUyZm11dlpFT080VmJZek9icE1zdkhTYnU1YXMwRmdnKzJTUDVBT3cvMDNWK1Q4TWQrcGJsOW5kcFNCTEhNQWozNWI1NkdZQ012S0xabStLU3VselBCaTRxY3kzRkYxa0J5LytsdWE1YitscXl2OTN0dDg4SHZNZ1RnMDErNjhGMytPcTNGcFhJMTd4NXYydU5RbldOODlvSmZmYjY5TFBQa0s5RW1oL1Evbmx4bG82WXJ0c3IvYWU3SzI3L29ZRDc1VDNhZjgrOC92S3gvMk4veWN0dVBSU3RkY3p4MS9laytDVmJLWjdhYlZaNitlc1orYTU4Qks2dmU4MUpGSWx1ZFdjUFQ0VWVJT1pxeVBZaFRHN0xpV3prTGYycTM3L1IxZDBMQ1Bac2NmQWt4QUEzL3BpL1A3aWMva1M1L28vYXZ2K0s1czFmZjlLenZldkFPUCsyUVA2cnZLaGsrM2Q1Ny9IWDN3dmZ0RDEvcXdEOUd5VGlDMW1jeUZQc3B1UG9uRmtYZDN6US9ydklkMXhDLzVOYitXNndPSzk2bXRELzIweS9ySzlmYTFwY1ZHTG1jY1AvM3R2eW5QZC9WNS9XMElsSEM5ZjB1TWRpVW5waWNPYitiSUY1cmluR3dua0lROHNBVFJaNExjNDgzc1ZsNk1yUFBYL01CNWpYQTJOVGRMVzJmOERmVUovMy8ydnJ3NWRTWFo4NnNRN3Zsakp1YllSZ0poNDRnVE1jYUFnRGJpc0FycDNZNzd0SlNSb0xRMGtzQXcwZC85aFZhMEk0SEFQdmR5SXJxdkFhbVdyS3hmWldYOUtwUFhXTFFuc0crWUhmZGlqTzFva2xlNXltZ0h5R1Bqa2ZLdU9YZGNUb3ZjZ3pRSzkzeW5oNWs2VnVSNDhuaGJIb2dOdEQrdWJ0K1hyenFOejlCajcvaGliK3dadkxVakpsU05sdHBDWHhwK0RwcFVsVUNwU244L3hBYVRrVWhJdmRXQW5PNzdUUWdKdEZYcDd4ZElYMnBWKzJSLzM4ZW5uOVJTa0lobC81Tll6aVFLSFpicFpVUG9OeGNWZWtJczZXdnBsUVIxaXVRVHFZMUo0NUNRaGNBWEQwVU55SFhZSVJScTBrV0lwU3BSWkd0SE4xdFZZcm1vMEV0dVR6UlhHSUYzVVVvYVl2U2t2eDJRMHdvMTRmYUQ1blJIVFJhZjFMNi9wU2R0Y1lCVGFIL2ZRZ21TWHRMTmtkVEhXOXRCazRkOWxGaWRlcGJWeFYwdVZ1T2dmK09FTTZuY09sNEE1aHptWE8zUVZsOGJ4cGpLYnBQMlQvYll2c3NqZ2Q0ckMzNFpqU1dUK0k0MFVtblVpcSt5NEZCQjZDK242RUNpQldyU1cvVW5DM1RRNUNWaTN5OFBKcXN5dGFSRnVnbGhmLytLMFJOZUlQYjlLakhwQ1lObWU5bmZOMkNmN0ZicEpiWHZUeWlFbG9nVmdWTmJhdkphSmREcG5rS0gxenJqc01jdjZUd2pTYlpKTWE4UFkxVUx5SFYxY1Z3NEc4Y2QzVXBkVyszL3ppNjR0M2YxelA2dlAxd1hKODIyN0s3dWZYYmFsSHoyYXM5TE8xNVNoL3A4WDc0YS9UZGtSYytwWSsrc0dKSzM0ZzExTDQxUFp6REs4cHpoaG1VVjR1RDRkZHM3Sy9jd2Z0NkRITzc3VERwakkvdGxTcjllR2c5T09yOEwzQzBhQ1FteEtYeTZ3bDlldHgzY1BjaDNKTkRiRys0R1daQit1eUtGUnhEQzNJQk15eGZIM0hTKzlDRzhhRjRhSXoxdmFHd0ZXdlNuTE5jaWFIK2d6N2RzMXlDQ1MwTWdVT2pWS1lhQi9uN1ZUWnlnQ3orZnpGeTRhZllYMWpLRnd5VTFUNlNqMkw5UDdXc0tEajAwRTBrNi9PNUE5TjQ3WnduWm1mSm5TRUlJMDN3T3RJNStGdmoxWjR5eVRXbmN5c3gwS0Q4aE5CQS9IMjNzYUt0V2ZMTFRyL2dHbzc3bXZkcHJzSlZSRytCd0g2UFhJWWd6bDhSUGxVTGIreXhiREw5KzI2YVhzT0hudzZPNndxQ3pGVFUrWFI3aDk3TVIyYkVOMzVwVm1RTjJKRzRsZmUwL1RUOEswbzB1M2pib3R5ajltaVpId2hsMDNjUzZnM0lzU3U1WGsvbDNvRUwvWGVqTlNaaDR1VEhJRVRiQ3F5dW8yMWtpbnBoWTJYVGRSc2QwTnB2THFiMmpLLzNJVlQ3V0hFZDVXT3UrbFhVWHo5OUpqOTVkZDNEOXRQVTZRak1QWHplMW9qWFhEOUdlbzNhRGRZbG8zak1vOGpPQml1NUZnVzZ5cGs0akJ4cWpzMVVMUnBkMjNFZGRLUnQ5TnR0VmtweHRDRVM0VHV2ejlwdk4xWFBHYjN2R0duWTlLdktOWHZ6YjBvdmpkT2RBK3hvMzlseW5CeW5TemhMTFZVWTdzMzFKdXVRN29wL1k3MWw0ZktBbDU5U3JvK1dGc3hiY0tLV1hvWlQ2amxUajJndWt1aEYybTZSUnczaFVnQ3ljR1J6YUxqTnpRbkl5LzlhNmJTdnQwb29uUCtHUXhEQWViUWQwUEJ1Tk13dkZMNTIrTkJBTG9oTWxqZ1UwNTVJVjdkK3Q2eDE2S1QyTmlVVTN6MDAxejA3dlBJdjZWekFkdkdCTVA0b1pDZjZFSW1oMHFaaVNTZStpRVJiejAwRDl1aFc1eXBxYjdwcjlxa0Z4MkhHVW1uN2UxWU1iSmJ4QVNuaE1tUXBiSWNweG9VY3VNYTZuK2hzOE9tNVMwSGozZHpKdjFLbDRtaCtIMTFkREVpc3owd1NxOEFVb2dDZm9lQnQwckwzRFBwclJwbWpLM3lYcHNlZmJab1hTLy9KUTR6SlRHc3U1cjVObDdKTWZFNjQvZmhmQ29JTHBTUWQ4R0dhMEo3SmNCYkQ3dHpOdEgyYnVtK2VJWnhlYnV0eWpVV3pqdnk0d21ndVFxc3lzOEs1Sjh6c1BGcHgyTlNBYnBUUnhYYmd5VlRiNzlaMnNlSGV3dTc0QlZUYXozVmNzSmx5THhuME1JMDY3TW5DaUxYRTlLdkRmaHQ0YjV4ZjMwMllPVkF6SHZ5MnplRjJreUcwTUhmSG90YStVZDI5VXhodVZNU3VWTWJmT0p1ak40Ym1jNFJpS29hZmZLT2QvUzhwNWxBOXlMU3J1alY1N285ZWVUSytOOWUzNHJrcVl1cENxc3liT25ZaXp0cDU1ZFNIbTU1dWVaZEN6NkZsS01LM3dRUExMbFArdWVyYmdPcjJOdzJGbzBXUjdaWEd5WmdTMEFzZDJpSGp1aGR6WXNhaHQyNHlzTU5UbW5uN21aVXpQcVl0YlRxbzdXY1pIa0NKSG1qazJVM1JtMXJuaTlxYk4zZm9zUUJmUzYwbmthTFkrKzhNamxHUkJaWEp5a2J2VFZpdExLRldGdzF1NVE2aXlkdm54b1NTU3VKek9QczdQNXp5U2hRemg4ZnFlUXR1V1h6Y3YzK3dTbVFmR2VIM0h6RlZyZnJOdHkxZmx0ZEcveC82R1lWWkRtVFBhUnJjbERJZmp2enQzOCt4TUhYbmsrbjNEQ2grN0VpSEtpelhRTkE0eW1uYlBRSkhSUU40OEVyMWdUTTIrbFVLR3hhSEFvYk5NT1NROHhVZnRPSlh2cEFrTTdUMDk3NStVMm5Uc2xsZTJ5K3ZpWG5sWHkrbkF4c2pGQkU3S0JFcDdBYlVKRkc4OUw2ZVRKYk5kTjhGZ0MvWnA2cEhPcG9aZExnRnp4OURNVW1hRVpPU2xQclJrZXYyOEVDSGk1UFlDdVNIQ2ZUeTJnU1NyaVRybnYxeEFrWmpCVmtadXJxMUZSTy9qRHJ6bmZYT1RMRkh6bWNhYkM0S2x1Nis1ZGNRckkvZGluVVpVOWVaVkxVUlVDdXIwOXBTeVI1Q1cyZ2piK1VLaklDVFBTMXlFT3FSU3RiQWg3K1VYZnowQ0syRWJIcmZ6SEhLSUpwNnNYN3NlZjc3T0w0TDZMdmRQd0RYLyswUmV4OG9YNlczYllLVjYyYzRQR0lvZGhDUFlPMGtMckVSZzc2VC91V3JOd3NvZElyelB2eXJmemhmZzZtbnpLYWpuTzB3SFkwU2lTR3dKeGtqZ3Q2UTVaMkxGTzluU25YWVZzWllIOUNOSGZQUDhjOEp2ZUVKYlYxekRNeU9wWHJ5dWJaQ3o3SmorRGNSR05ubGUvNkpzV0M4dXNWRk13S1RNem91MCtNaG8zc3NsQmN5VkxUWHZDU1ptMFBQZVB2Y0ZIYmtoY0NiR3pFL0lnZlpWYTBLZ3pjSHlxWGxESFZWNkczNys2dVlhZ0FCdjZ4eithVjhFOG1NcDdtNFV2YnFHZmxuNnkzWGp0Tkp6d1IwN25jVzdmemNiS3ROaEdJZTNkMmI1dkpYdU5DT2hDVzl2bWFsOTRPL2lFejBYQkhPdmErZVNLRWVJR1c1Y0lVOG1TRUF2b3ZIZEU4Ynd5QndzOCtoejJoNzR2UDBsYnRwM293cTdhMEFXZCt5UDdaWG0zcTc4ZWVUM1hVRjIwNjRZdThrbWtVMmxtVXpQRjZmcXVmbWNOZjZSdFdCWFZ2cno3ZTZmd3h4T25qT2RPMWs4eng1N3dibnRkNG9YT241aC9Xc0MxMG1MYW9JVDZTemowZ0ljNzdickpXNjJ1amNCOGliUStkMDNQQW5KZGQ1Nk1XeWF0aEZwMjg2N0hlM2ZOQzRvNzBZRjRXemNZNW1aKzNmU2M2YTROM0JyM2ZiV1R2MDMyNG9uSkhkYTBTUXQ4T1JuT1hCeWNMWisvSzJjUGlkdUZvSU9CbkxYaStCdEhGT2YyeUhlbUxrSm9icXdmRFF0NUJuWUZOcW81OWF4NFB1Rk9yY0RqcW5BZUxMemxVNUxiWU9xclBUQWM4dW80K0NtbSttNitTNGxPcnlTTnJzS05lL3IxQml4MjNNMGlrUWFWZ1p0bWN6Ukc4UnZtK2p1aTVMWC9kNXJiMjVtcjVSMmN6aTNRK3AwL2UwRU5vZTViYm5BcHJaQTdBeVVHMHdnTDNBNDlGajV0a05wVnFVc0ZwWGwyTk1EcVo0emI0WWI3dTFnQ0RydWZFRTBhdkVYZHZhOTVtY29KVG1DMGhKRDVYSSsyV1c1U2U4OFdVeFRuQ2NwWTVlK1lWMEJQaTh0Nm4wMEhUVXlzUTFzT2tudWtJeFRpN295VzAzUTNyOXBraWpIZXk1MVNPT3RNNmhSb2ZlemhjbTdoTEpQTE9vVE9mcEZTU3FrS3NQZmlBSlZ3RmlaaHEwMHZDQUZMbjJjdjQ0eWw4UnNDVEpzcUhGRVB4TENKVUxEbFUxMzVZOEdmR1ptM3dMNm1RcEFNdEMzeW5xbEtsRGtkam1SYUVEUFJ4VzIwbHRQOGJyR2tBU1dCWlZZYVZibTBmcU9zUzczd2lYSWlGQ21TUjBrNjJLUTcvQWJUdEtITFBxcFVwWDR2R0JlZlloWFg1Z01HQWc2bDY3TmtUb0RtaDNJNzMwRjdsV0JNc2djMkRPdHJJSUppem5NN0lnY3ZnbUsvMHhmL2xXRjUwVnRiYWk2cU1pc3dTOUEzb0ROUXhZZHRaZzVzZVBuRGN0OU1KUm5LOW8wZnpQTVJRNnZyMmdjN2psNXRyVzIvbElQb1hFZW5oTEllWXJYVnlOL1dTdTNyTmh0cGhkOGRXanB1eHRBa3JkMWU5NWQ4TGdnc0o0TzVBNU92THU2RGxwazZwSEtWWG9JMTdIY0FtODhPWkw5dVpKL0M0dWlrSEg4aEpaN3pCckR4b1lUblg2L25UeWVueGNtUWZ0WC9NUTVGVzlkSlZrc0FlTDRnaUt4MWZGM0VaV0Zod0RQRGpiTGR0dG11MjVucEZCazFiTnVDN2w4Y0p6QWJ1clcyQXVXdkZjVy9ldHZTWk54N2hzSGJZL1lMTWtZY2ZwRmxJd1dQRXRDWStvRmNDWUttYWRaZzU0ZjE4Mmczbi92K1o1L04rWHN4SVB6eUhGVjBRNzJjbUtqek9CdHczT1RIOWt4QkMrcEhKM1R6dk1ST2QvV3lldXNrMm1YaWhMV0JsdlBMakZ2MHk4YUpUNGZYUWVHaFYzZStYYjRlVzRDaE5PeDhjS2VzZGV6YkhuTFpjOVdUR3hzbVByUTRLVzJ5dUtXakJiT2hUcm5XTW9LSURwanBUWktrVkN6OVQ3K1BvZXA0OE01TFREa3A5Vm42aTErVEZpeVhaMlJtQkNxYzBlUE0xK2tEZG1yNWo2N201Z29JTmkvYWVBSU0veHNwSytUQXVkSHdYYVNPYTlHYzBIbEtsSC9ROGpkSHBaQmJzNWhkTXlTc1ByMTg2eTEycjJMMFprWkRENFQyTTVJQVRNVEwyWW9ReExXczY2ZktvRUdnckNTQUNueXM4eDBvRmxQbTVmZzB0Si82UGc2eU53QjB4UDJwVEZCc0VsTW9jbTJ4dU1DWnMyL09hMVNGUXZqWEo5R3JkdUMwdGp0MjlTWms2Ky9wUzN1QkJjNlBsWkpOdnFZcEx1dXZMejZqL3BiMW9vRWRBRVkydHFBSUsrcmhaUHE1aFpDb2Vlei9WU2VhZlJRUGNST21IdHN2eUNjenhzN0ZqWE5GUUh5cHNqSVQvZ3VRNEVsdC85OGswZndNQVhUMVQ1UzkvaEliZzQ1VU8vWXF2ZVNPVlBTM2tsdHk5Y3hvS1ptVzhsWm1jRm5DSWYwa0Z6d2RuMFQ5SmcreEREbnNJUnJCMTRPRTRPTHl1RE02MmlIc3JPYlBPbnRLYXFjWTJ3b0ZvZGxIditFa1N0ckhYT2VEak94b1U2KzNwV1pqbzlnNytTbnluZEdHaDI2Qm1hYThmU2NLSHRYNjQ3Qm9RYldHNUVEOTZLc2c3WE13SnlBT0tIblBST3ZZYmRwM1pIMDdzNWtvRTd2M1hmOTlKeU13QmdOV0lEN2FFMXRjeDlMcTFSQ0VDdHIwQ1M0cE1lWWo1WjB4cG1RN05WbitPNFBmZW01RUNzMmZIM3pqVk5zb0pvajdjK3dWMHFRYVlUV1NNMTdNRE9RWkpCcktoZ2t2SjhHQWhadFA5UnVQMFgwNmd1VUs5ZmhCV2hqNGFEeVl5U0dPaGVKWCtITjhVekFJZ0Y5TFhMYU9iZ3ljUk9GYmJNWVc5Nlk2NzRFWTZlZEwrUGVZbklZaC9GcENkRVNBczM0REtTRHJvYm5YUUE3VGpIU0FrblpVaE94SFRBNThmMXJCYUZwTFE3dE9vSmZjUVpIVUhZSi9qV2ZzWERBcjlQUHhUTWt0RXMxV0dMYThEVUJnSXFSZmRwNmthNXpoU1VUVFBWcGZoTzk5eHYxM3Z3OVpzUEU5VGREWUt0TWVKT2QyWFdtb1g5NWZjOXhKdUhKNDF0c0FIMUpKck90czF2QUNvcXlPbWVkbmFFemtjSHJHeWJuT3N1Nzc1MjZ6blo0U0VuQ2hrVzFZK3VzUU9PSXlsVUljMk03cDhtZXdxTDFkY3djeU1IbmFxOVlFdHBKRDZEYkRuMy94VGhRY2Z0MkRBY29jcVF6VGhJWGIveVNzTGdvZVh5VnMrYWIyY0orMlo4NnBqR0JiTGRzcFpmRU00a2ZHeCtXZTVnNmEydzRsNHVUMlhHVGMreGplQ01KOC9Pd3ZucHRuUTNOZmc3RVY0eG9Eb3RJSkcvSnpRbEdiLzJkNURjZVRJYmwvbGJKNUJnNUZVOHpjZThPNjk5cHVKbmR6K0c3a2xDTW44TVhwK0ZyK2EvRnlDQ3pqWCtzdkp2OWt0bUI3ZHRYMUtWdVo0UngrSFRSWFdFYkdyZXhJZUY2b3Q5V3IzcCt3enk4Q3A4ZTh4MjQ5Y0lBK090ZUZETWZzdnFuckhaTWxNVkVxcTlzN0M0a2NZY3AwNlF4SGJEb0NFN3grbzUvellhRkRNY3BocXlmQ29sRGtyQ1BHbC96bUpjemdVTHQ2WENhYTdoMU1CdW03YVVETFRaVWRMdzZHbDRka2dNdDVISFhDeGN0MTNEcnpaakh2bGpLeGhuOVRERVA5NUh4ZThQY2FmejFwdUNocjE4RGV5ZU9pMlAyV2RPVUlXbVZKb2QyQ0NSbjJ4T25XLzZJSlluMGc5aXhUc3hKR2pCaDMrZjJHUmVIdHY2cTR4bGowdnRNWGhGeHpzNElJYy95ZFpnWDdtM20wWVpCWjBZWGJ5TTgvcXl6cEVXTFYxbUpXOUE0M0R1bWRNcmN0S2l4dWxWbU8vcjdESyt2YVJJNzdpSTd1ZXhxMFZ2ZUU4eVlRNXR5TEhzV2JkMlJkM1I4MnZhNEpHMExYS3pQc2hSS2lpenF5dnJVcFhCQzFnMW1QdHB3aTF4TG9jNmltTXJqOWQwSjlKRm8zZUl4K29oWEwrSFYrMlgwa2JTMmZBT1B4QlRac0JJc3M1WHViMmQ5Ky9UaE5QcElWQVpmU3grSmFVOVI1ZHpvSXlZYzh1Q0RNYUIrenpMY0NzajhQUTlVcU93a2NHeHI0QVc4V2d5bDl0S0VZdnJ0OWYrR1V1N0VNa2Q4VWJ0RmlpVE01Vy8xVGdiZU95bDdRaVFkbXEzclh2Q29RenR6ZVUxUzMvK0tyVUVvWmFHRis1NU1XejJCUW5YSVNzTThYdU5qZmZ5aVc4QkJYZm9pTEQ0RWpITmxjMnBheVdaLzRUR0l2V2ltN2p3YXZYbHpRZlp1OURRdHZYREdyNzg5ZCt6TWNjaFFuNm1IMi9OVE5mcjZtc1FRMzUrVzR0RE9TcEZKbHRsdWM4YmFQS2x6S3JyMnhJMUR4dFJCU1hNSzIvQ3RXWlU1ZUpFenlmckV0R2k3UTFDdWhzYVFpTXAzanVpb0UveVEyMkhPODBkdGcySjBOVkp2MzZBcURXUWd2aUw5WmtNLzVYMlduT2xzcFlkWlpVeDZCRE84VmxybTVQNGtiVzJJeWV1V0hWNG1MU0RuQmN5YTdkK2xUNVVsWVpuYllUcE5JaHRPWGlYTlkxZG1wK0ZpWjdUaDhMckdvanhteXM2Yys3UnR5KzM1VHM5c1g5a053aGczSjMzcHdpZGNwd2NwY3RRTXZIczBpRmdjYmlUdmEwNXFReVRqd0tkQVNUTnRpczQwbWlTc2xPc3h0cDBWaFhtQ3QwV2EvSXhQa1orWTF0NXhFNzN4VDJEWFVGbUowSGh5Qkx0dnZhamJ4RjRqeGU1YmRmRXhMOHR4YWQrcGVXTWJtNFdGeFBZODNqWW8xSzNyMVpoS1pwL2FlM3FNRGF3Z3Z4MmszdHZtYVR1eFllZU5EU3ZaYTFHY3ZSaWFHMlhXaWo1VGw4RlVoMkNpK0ZMSXIrS0NpdFpZRkF2ZkZ0ZXB1VEJoMEZrbGFLTll2MVVZZkdiTVNHeHY3Z0U0bEZiZEcyRlRsRkJvY29TdytLekJ5ckJDelZlM2NiN2lPTWVNcmNKV2lISWNPNEFsMjlVcHFrTitIN2dkWmUrdlVBR3ljR1p3YUx2TXpBbUpJWjBiZ20xaXllQ3pGVTkrd2lHSllUemF4aTZTb2xVK1lPQzAwakRYNnRVUXJSdGNaYlF6MXd1K2syQkRSWFVsbTg1NU9qOWFNaTM3K1lpTmtVRXYzRWovTWE3MFJYeFpEWUhydk1ZRyttVmxva3lSMkRJdVlrTjgrNHZVTFpjeDd1SDRPejFmMWZ4clUxei9nVlEzNkdHY3ppTUNhQk5yZXM0RmZGQUZZSXByZzJnVTJZTnNtNEFzUGx2eWVIMFhpeHUyM3BjcFZPaGJ6MGYybmprd0pucmtrRnRmQWpnU1p1a01jK3ZNa2tXUnJZbmxscThQOXdVTFArelZvdVg1eG5TTXpyQ0IySWpwczdEaEtxT1lxQ0xIc2NTdWcxZG9FcHV4TWlId09OelRFclQyRFhaOFFnSFNuWmxHVDlzR21QTUNPTlZ1d3RzU0xVR0RtWSt3RkYrSFFFdTB5a3F3ZlB5MjYvbDJFRVhTRWtOaUt0OVpCZlNNdyt1cklZbVZtZW1oelJHTWxFenNoRHVhSExYNHViVitlYkl5OFdWTThnWmI2VUc2TlVJNENScDBlVmFsU1FKeGdsd1hNVWZhb0dQdGc2d2p0RFE4ZkI4MzFoWStwTStaeFBlN2I0ME5oODkybExrL3RBSmtWOU9ldFczL2VjcmNkYkcvSUR2QTg4L1k4K000WmlmT1hldVc4WmFlOXdSTC9tS2p4eTVTbm5YV3RUVFp1MjNyVmZTbjdoczJwc2xQU00wSitMNnkrblZ1bi95WWN2M3h1eWlHRloxVy9qQ1hzd2J1ellJRGR2OTY1aDViNWFUWmF0U1o3Y3o1ZjFnWHpia1BaVmFxKzdHaURjdzU3dmpvRStTY3d6WTZEUmN5NmxqaXVuTHl2TW1uWjk1NVdCZ2JqdXVuYlhkbldOLy9lYXgrdHRLQW5OUzJ4cURiZ3NiUk5tZkdCcWV0bWUyTHJKanVzeWxmajQ1RkRuenduL0hNOW9PajQveWFlSTZTS01POGVIR1NYM2F4b0RvOWhGMjE5M1p3N3NZaXhTNVJXYkl0MDJOc3g1TllneXZiR2NtYzg1akU2QzhGK0dSajZ6WDMvUDNtNi9ZeU9CbmpaME5Ock9xcGZBYzJXUlFyMDNPaC9DNzdaZmVhR0ZYRmF1ZXA0ek51TFBrNVVXYlJzbWx2eVpadldYYWp6UElhaS9ZRTFpY2ptdVJWY3c5NjNIWk1lZGZFaThwc3orTjEvVjN1UVJxRmU3N1R3MHlkSzlMMlpFaEVvTkdwd2VOdGVTQTIwUDY0dW4xZnZ1bzBQa1BUNjRFNlJmTHdYUnFwTkRyYk8zNXpvYitjb2dPSkZxaEpiOVdmTE5CQms1ZUlmYjg4bUt6SzFKSVc2U2FFL2YwclJrOTRnZGozcThTa0p3eWE3V1YvMzRCOXNsdWxsOVMrUDZFUVdpSldCRTV0cWNscmxVQ25ld290aEEzcU1kTGZaZHZmYlBFdDhMYktTck9kdzV5M3h5SXgwWVI3UzhFM1ZtTnJmWXFlZWIwaEFrc09VYUtwQnVRNjdCQUtOZWtpeEZLVktMSzFvNXV0S3JGY1ZPZ2x0eWVhSzR6QXV5Z2xEVEY2MHQ4T3lHbUZtbkQ3UVhPNm95YUxUMnJmMzlLVHRqakFLYlMvYjZFRVNTL3A1a2pxNDYzdG9NbkRQa3FzTHFQbktUcmcwODlyWXRINWM4VnQvMGlnOThxQ1g3YU0vbHQxKzA2T0lML0kxSVlWUS9LUXE5aHl2dWlZWGdsakhUeElPdnQxOWNQdzZZZGx3eHd5em52anFsTWtzaUtXdzFwQXJpdHpyOTdhRVJPcVJrdHRvUzhOUHdkTnFrcWdWS1cvSDJLRHlVZ2twTjVxUUU3My9TYUVCTnFxOVBjTHBDKzFxbjJ5disvajAwOXFLVWpFc3Y5SkxHY1NoUTdMOUxJaDlKdUxDajBobGllZk0rTXRUNGU2dUswWEdkWmgrNzlYOEJHNE9PMzgxNGREeUk2ZU4wdzd5LzBjd3EvVTlwY3BrcXQxTzlUbisvTFY2TDhoSzNwT1pXb0hqVU9abmhPT2pDODZudGM1VTNTd0lPbjhNS0R2WHZia0kyTXcrZjF3MzdRRE11aDltU0w1eTU5YmgvRFp3L2o1U0tDM04zeU93V2UvVGVJbHJVckQ1b0JNeXhlZnl4bTRkT0JUWHpQM25DSi9pQXVKVWJYVEdIV3pLdC9wQ1JZRFdhSlZ1b3dJWEtlZmcxbG52Mi9kZHpYZlI2MzNUMlhZbWJzVmlTRjVncHEvcGxoVGRwMUR0RzdRRXBRblpIdnJ4VWNta1MzZldWM0tvb0tnTTlwUjA0Q3NhdDIyemwvcnZqZUxZakF3Vm1rTXZibFE1cVMyVDZhTlBmVm1wUksweThGbkd1MW52MTFKWHVGYzFVNHFMQjJNTFdheTJWYWRtci9xNFpNUGk4a2E0L1ZqMEJuV255anV6dVB6K2t4Q1gvOWVMNUd5RDhFQzgrdXQvSmxqUitjd0ZYVUlKcTBrTkhSVzcxYW1IT3FCZWJjN1RmLzREcjg1Nk45b2Z5bHJNSzROd2ZFb2UvbmsyZm5LaXROdjlvMGwyOXYzc0x4d2E2eGlHQmFXYkd1dVBJTjZtMVorTjBmNTNVUDVSZVZUV0dTTzRlckhaWDlkOWdsLzI5eEp6cXFuNnJuNW5IVTNkeGtqby9IaTg2UFpWYk94eTNNbnlFbFlGRk9Dem1kZUdPZU5EWTBIeWhDZE1uTG5mVDhleUR3N3pUZHJBb0VDd0Q4NWVQWTFyOTBrQlNkLy9hckFJTjVZSGR6cUJTVVJpQnV6Y0ZCcHgrMmttVzF5RThTd2xhNjdpQ1FsaTdrTURmeDdCS2xQbEYyK2hBQlo2T0ZuSmV3cFlKdVlQY2xQRm5rRWswMzBiL1A3QytiM2xYVDArbmh4Y1YxdFhUSHdUUEw2YlYyUHdPc0kvOVpZSkNXMmNLNVFMT0lUV2lTNm9KSVNic1RLNjVSa0dSZTFFUkxLRDhzb3NGR0wxU05FQU8yWlFjVys4KzBTR1Jsc1pkUUdPTnpIckhlaGZPeUl5cTU4Q1VUeVg5bUlKaUZKd3IxbTYzd2RmMnNzamlldGdHbjZYRURDamZNM2xPbEpPdUxzbnVOSkt3WmlvMGV2dkw0RjllSTNXMHNkM1RvK1ZrbTZGcCswSk1QbUwxTVV0cVFOM3lFaVZ2WU4zaUVpMDRuZXpuQzAzTC9jWGVKd2hNNi81RDNpcjQrbWR0SWRZdC9ZT1Bma3JFaGlpMEV6eGZQdWp4NkoxM2V1VTJIUWZMMlVnZUNMQm1tMXI5WnRMclpYalFBWm14TTlBWHd5aFQwN2hrRytjRGF4a1NGak9MeHZod3daMUNIMDFwbVJJZy90U01HbmxKQmZzd3lSdVF0WWtIK1gwR3FwOCtta2NHc0ZPR1ZTNnA4VW5Fa3dlOGF3bURDQVg3V1o5L1FzUjNSUjM3eHhlQU1XNXFCUVlzaVphUWRZOXdqeTZZVDV6dXdLOTk5dkllRitxNUJ3bWNld29EQnhsOExyK2F6TW9valZsdWhZanFhcytlNnk2SWpCMTlLdlRHSDBrblRPWGI5KzN2M25YLy81Y1NjeHN2Z0JOUDN1NWU3Ky92NFArUitsc1dLc09mQlNFdVhGR21qYXZid1E1YzlISFVncVpIU1FFcHZWc2svK2tCbFZuSUcxSmlyeVMybUQvQ0d2UkpsL0tZM3RSMS90Ui8rUUphQXpwaUh6OG9kY0trR0dCVkN6L2l5VkJBQ2xCMDE0NUFSbXJZZWFjVjk5UU5DSGl2MGdvNm9QSzRNRmF4bm9RSHNRbFVmVG9ncTlrZlNvS0dzNkkzTlpIOSs0UGZyakRyR2JjSmYwcU1xczlYdmxJMlBCRWlNekM4RGZzN3VYVWdkQUtlazVUcEZVUlFheS9sSTZESUQ1Y0VLZnphODFsWW5wSUdQb2ltUU9RbkJJSnNvS3lDOGxmVzJBUCtUOHF1Q3hobEsxNE0xNnFzK29Od1c0cEFMY1I1K0kxd1ZuQUxJT056UTBIYXpYQ2dReG83eG1HZTZCTVhSQldZdDdSaGNWK1dIMWJNdnVNUDUyQ1NNRmdwc0dwR2xBYkRmV0JnUzJpTzVMakNyaWE4VlFYWkdaMy8xeDV6WnBEVFJyTFAyL0huaDloKytBekt1S0tPdStyMlNGQjc2UHFzTDdQbW1BVzRQQTA2NXFPZDl0d0pyMVZ3cEZUVDk4MmpJNkp5UzNuMU9VTlMvS2Z0MUo3ZzRFakZaSXJlbFM4NGtqWE1zQzZLZVc2aXljNlFXZjBCY1o2RnRsdlJMbHhWSDVPYnBWZkJ2U2V3NDJ3Rk8zY0ozY0dqQTY4T2xlOFoxOTFIUkdOeExxTjFUZXFiK29Dam5JWEVMRXZLaHh5Z2FzZDBmYjRVMXdLT2Fkbzc1RzVsOGZXRkhtVFRtZHZVdzA3SUp1cTBYKzFVS0JZQVErTENHNVNwUWlmdk94bUVVNm9YRE5ZSmVBMDkzVktON0dOenVRS09Ga295Uy84WG1HUlhJelJiNTJOM0tlVFhQTS9EaGppWTR6bDQ0WVF5RnI2bHBMNmwvRG1QaEhhU0NKZXFscmwxU3kxK21TQ3RhU3FKbktycFhFajlKLzM5L2JpL1M5L2Z0L2wwVE5YQTBaRmdMKzRXWXFGR2hUdTc4VDVoU0xOdGRCUUFnWTNwNzVSeHA5VEdDRjJmNEhJL0tMemRQdmFxUUZsODN6RExXYmhmWTlGdEZUVGIzZnlNWUw1WnJONG15K3FlU1ZuSXozRE8rczB1bDZxcW1BcytTdjcxVGdiVFM2djh5dlZHV3R1NE56NzlRbjZMcXF1U1B1d3AzNTRFdXBXcTI0WCtqTWVnSDBYOWJYb1djWlZmMjFWblNGVTZCVG12bUxCaURnZEdYOWN2MFJUaER3eWRQaGhHbkF5TEtpVzNDZzNhYkZGL3JlUTVQaFhXSDRCZ05Oc1ZndmltcWJrVVM0KzZWQWtkdTlsTWFpdklCZ3JEUGN5dmV6Q0xTWGtqdHB1cjgyMWJTcEZKeEJ6Mlh2c3pkRkptKy80bWFWLytYSWxJcVpzb2xUTlZOTjJsOS85aDZ5MXNSTVlFWlZOWitOMWZTZXZhMW4zMnZpaGpSUk1vM3lkLytnNUpKMmJubm42dkFhcUZEa0dPMmxoTmdmTjZJNU5CMVIwNVgxN2wyVVJQMmxoRmlRSUlueUNERDhiZ3c0UmVhMWw1TDFyYXZIYm1mOW1taitnOEdPNTlESTNISTZRVks1dERPL2h1YlIwcHdEVnlwNSttYis0MlhOWFJFYzg2a3RyZzliUS9OZFJwVEIyajhTTGphSEM3Yi9pUkt6QUMrbE5WaUltdTd0VmgrREtIWjQ5V1ZqQyt2L2FRS0RZclVYaHF0V3F4eGZ4eENNK2FpZ0dNdGdUMDhzVnE5OWdPb0grc1JVcWl4QUdLWlNLV09WWi9ETVZwQW5ocS96TmU3NWc2MVhBWWcwNVpjQm9kdkY3Z2VoNkwvV1FBT3k3bjhRaWgrQTIzRVF1SXVmKzA5ZGc3R3VxQy9CYjBzbDhPbVQ0ZUVmcDBnU0kvTXh2OXlYSHJlTXFOOXJncUh6eWxiMlA4R3NGMXE0NHZ2U282M1pydHppaFcwK2VIK3ZHaXdVTmNFMTRuNytyLy85YTlEOGszanR0OGEvWHQ5YS8rY3hEWmlDUlZrUUpDcnl2Y2ovVEhiTitOL3drellnbzJrLzR3WTgrcHJYTCt1ZGhJYzhwK2s1WGRvd1VPUVpYWlFYcnVuLzgrWFpaMFNrUFhuUGdiVXVmb2djbzRPZmo0YTJmb1FLeDhCSDM5ZWE5U0ZUWVN1d1N5eGtCWGIrTWpUQUdXdFIzNzBwc2c0KzliQjZyQTM1VlNNVWVhUW91a3V5aWZ3KzFjRGFCR0VrNWpkblQvK01CbjlqSUZTMnY5YmlSb1JnQVZvYXgwREx0SDhwZlRCUUMxV2lBYzZFbVY5cjVVT01UaDNYRUIwWnNpNUtvR2tUMG9QUGNJektzQ0lVZFJGb2tVbkRyMk1tM24zcDlmMDkvQ1hEOHpFUEVxM0puNDB1MGZ4ejNCck51bSt0a0JRQXd3OWt1RE1sMkJZaDBIYWFEcVNZZmdKNTh4SWVYUnYvWEkwTVY3MWhvQUhhYTBXS3dZRVBFVURlOWEzRS92aUwwWVVYYnoxOE1LdEtyOTZhRUJkdmcyVzd4RGZrdmZubnIxSHJmZkRhakczRlM4bW44MUJremY5Sm9tU3FHdmVnS1VFYzNnQVphTnF2dGNKR0ZPcURFYUd4QmhOaERUUkJnZnhMQ1FzK1lKcjBPTkFqM1ZLdDNqd0tnSUc2c0kvOGFtMFVrREtLVmNNL2Fad0F6QTUySnBOZndkOUVXZFJGQmpZQlpBNTJEVklPTFI1Z0xTcDg0cythd1hGQTAzejlDVTFVYzlvb2huNG93UCt6cWI5aURsbFYvc2F5OG05Z3c4cnIzNHNlbG5ISDZ2a1YydGtleklLWWZXZTBYTzFJd1pGRktGUEpJWjlVVXFQekZMNVJvQ0dCdm1MSWlYTHlMNGpoY2kzNnA0MFpTY3RiK0JVWGZxT0wxK0ZFSTd6bWdYOGJRTk9qQ3dXbkdxYkdsS1ZJdTRDa3JIY3ZwWHE1TDdxL3lRb1B4dTVHeTFkRDBIeFd0SmNTRkdYRHMwbTBnSithU041TTZHQXRPZWRPK0pyaHdLK2dZbGZLbmpMWlFvOHpySk5rYlo4UXYwUlc0VFdJYTVIZmk1cmZwZUEvUm94eEtrUU9KSDBlQnVmTTljMTg5ZVpqS05qSEVIWWErSFpTcFhqTE8vL1l4NFNwY2xUZ0g2VmZ6VVpKMUVxeW9wYzBReldSRmZDbEQyVmRhakpBVXVReDBMVUg4emtMLzE0ZUh4ZWlMaGpzQTZkSWo0ZCsrdjhVTmMwQTJpTlNma2JRYXViV2VycnRHdGZhWTlUZzlock5nZzlsRFVxY3dKamxMRXE2SUdxMmNmS2p4QW1BVzVWMEFWZ0FJNjRCNzhPQ2txTU8vaDRGaDR0WE9PMXhEVDdBR3NnY2VHU3NkZXFlTVhSQnR2NS8vd2crZFNCcklndkJZVWI2Tml6YTR6L1VOYkRxMWtRZGFDSG5uZnVHczU5T09EaWRlWDBuN2E3YnpIakRmdjdtc1M5d1VrWTBMOG4vNTROZlYwZWRvMC83YVVkZndZUDErSVB6Y3JCaW55ZlE5V0cwL20ySUd3WjZIb3dENDhsZVFxTGNnVlFLaWQxZlYrSENMMjE4ZHBTaWdyVlBhdzRQdlkxYXI1Tlc4THZwcjJiZ3V5aFBJWmJwNDlpdGJsL2JqQWdkcDVYSWc5YkhoM1YrWENJVTJURVpQQm1Qd0VZRTIwZ3ZEajNnb0FoazNaNFdMNkZWM2RlbVBBZVRoemZpSGJ0QnF6bGdqemxtOW1GTUhqZklvMDhXZHovdUxJVzVlL2t2NzJKM2duYmQvYmd6TWVEdTVTNTRsbjczNDg2c0pmeGlPb1l1RmZiZTRxRTh4dHpGdWd0Yzd6cmhYdGFSV1pJdXl6QnFsVXAvM0xsZ1pVM0R1NWVTdWdiM0ZyUkErTVA4MjFBWGE0WUhQMVJGMHc4L21CK2NYK0lLdXVjQkJEcTRWeTBsTkl1MWw0OTcyeVpiQTZzUlA2eFAxcjRFOElDLzRXZ0JPSHI4S3RuZGp6dWJVblgzOGw5M3Z0RTJsZjB3M3VZbjM0aTdIOTFmLy9YakRqS2EvdWZha085ZS92K2Rwak9tRWZNblkybzFXa2F4KzNMdEhuMmVJTTh2YVBtbGdqN1U2eFVVeFo3UkNuMzM0ODdzZ2FrZWljOVhIc3FWV3JuK1ZLa2g1dk9xd0dqbTdCMjdtbkwzbng5M3RvYjlhV21ZQ0t6T3hPbVlnd0lITGJ2N2x5L1F3MUU4OEJHdnp3U0Q4RTJ0WkNRNDc5YldVWUM0Z2NCZkhnU09NYmpUTE9Ka1R1UmhjK0JVeFBrTlpDMHo0L1FMQUtqeVVLNDlZOVVhVmtNekFoQlNmbnF1bG10UDFlOERRQTZyc3pnYzhoTk5DNE9qZU83cERaVnVxSFRCMjA5K1hUcUhJeHZlbkNRWjAxOENZVWkxaktEWVU2V2FGY0xxMVdyNXVWWjkrbUlJSzhCNEtzaHFPc1ZjdXUybmJxYlV5K24zd0h6MzBWSk5JL3NteTVmZ0NscDVRc3BsOURucjNneDlxanpYNmsrMTc0QXJ4ZGhFeFJwRFoxaEJON0M1V1VnRlh4cjZXNWhHRlFSQnE1VUtobVNFc0FxR1BEOC9QNlBZbDBEWXZRZjJEcEwxRlBaTUJEUC9za3NkVzB2T0VSaGpyWmNPa05WVDJEeFFkWCs0ZDNraHhMcmgwbmZDcGNPOUdCMDZOSXpYRDR2bkxJdWFBUGlNZlBTc09uWGpyaGZKWFk4OWJBMVIyTk01Nm9HQnljeFBOeHNVNEFBdmdQeXlRUjZ3aDZwTFZIOWlLcy9jUi9uanVmcGNmbnJDV0lZQjRBbGhXQXlwYzAvVkd2YkJJL3dIWUxoYWphdWl5QWY2L0ZGK2ZucDZyb0ZhQmFsaXRkT0k2aFpWUEV6UWl2YlJaaUFMaXFiL1BINlUrZVA0SXc5aCt2V0R0dUdpRlhwNEdxRnJSNSsxZHhmV0t6OVQxK3FzTE53dm9zRWVJV3JuSWxRWFFvZE9Jallua01RZE82MkdZUlgwWkk1NXpOc2hjbmdlYnZnYVdEYVRPeGNHY3R0bUJXVG00a1ZWS0Nmckw2TWRtTXZTUTU4ZWFsV3NqRlRMR0piSjBrTWZhdVducDBxMS9rV2JWZHM2SzlyUXMvNGlmZnlzeXhsNlhrQ05zKzI4Mnc3MFp1bUZsZXBtNkgwclF5OHdMbjlOT3kvU1JkdVNjcHVmMVpUS2I2dFpGZDlMaG00ZG9QK01zVnhPc09qOFJUdTBQd2N6Zng1b2Z6Zmo3MmI4ZmEzeFY2U2pyLzcwWEt0VnE3Vk01bC85b1l3Z0ZRd3JWNTR2WWY3OTY4ZWRzeGJjdlNBLzdqejFEdHQyZC8vNW53QUFBUC8vbHpPaE0yeUlCZ0E9
  kind: Secret
  metadata:
    creationTimestamp: "2025-06-28T18:20:27Z"
    labels:
      modifiedAt: "1751134839"
      name: ingress-nginx
      owner: helm
      status: deployed
      version: "1"
    name: sh.helm.release.v1.ingress-nginx.v1
    namespace: ingress-nginx
    resourceVersion: "2946"
    uid: b97391c0-9a98-4f48-8a5b-21860833375b
  type: helm.sh/release.v1
- apiVersion: v1
  data:
    release: 
  kind: Secret
  metadata:
    creationTimestamp: "2025-06-29T18:39:06Z"
    labels:
      modifiedAt: "1751222347"
      name: nginx-hello-friend
      owner: helm
      status: superseded
      version: "1"
    name: sh.helm.release.v1.nginx-hello-friend.v1
    namespace: nginx-hello-friend
    resourceVersion: "247630"
    uid: f62474af-d11f-4ebf-b327-9ae4b420223f
  type: helm.sh/release.v1
- apiVersion: v1
  data:
    release: 
  kind: Secret
  metadata:
    creationTimestamp: "2025-06-29T18:46:01Z"
    labels:
      modifiedAt: "1751222347"
      name: nginx-hello-friend
      owner: helm
      status: superseded
      version: "2"
    name: sh.helm.release.v1.nginx-hello-friend.v2
    namespace: nginx-hello-friend
    resourceVersion: "249293"
    uid: 5d74ca83-1eb3-40a6-9c19-8dcb3fb13644
  type: helm.sh/release.v1
- apiVersion: v1
  data:
    release: SDRzSUFBQUFBQUFDLytSN1czT2l5dnIzVjdGNEwvYkZTaktBSVJPczJoZENCREZvRkpWRDcxbTFDeG9DeE9hd0JGUmNOZC85clc0T29qRXprMW43N2o5VlRxVHA0M1A0UGIrbnUvMmJpdTNJb3daVTdJZng0VGJ3RUVwdVg3ZWhGN3ZVRFJYR3J3azErSnQ2RGJkWi9sL1hTMUZTZWk0MW9GaWE1VzdwaDF1V1h6R1BnejQvb0IvdUh0aXZOTjluSHhoQTNWREkvbEVEamh0dzdCMS9UOS9mUDdJTWp4dTRIdkp5VXBVOFpIQWJwbm1ZeE5TQVdxZisxbmE5SGt5aUZGZWlicWdzdC9NaW93WlVPOFFORlNlNWg0dVl1NTdzNWIwODhIcDJtcUlRMnJpZjNscFRlMDdaMnhaeEhNWStmcDJSTGlNN2RyUEJ0N2pYQy9JOEhYejVZa09PZVh4OGNPOGZIYzY1OXhpT1oreXY5KzdEVjlycHM2K1F2MzI4Zi9oS2MvZmM0MTJSM1hwMmx0OHlkeDV5N3V6SVBpYXh2Yy91WUJKOStSWlQzMjhvR05qYkhJc3c4bkxidFhNYmYvK1J5SGZlTnF1V1RkOHhkL1E3WVF4N1l3OUZQZEp2N3pYWjlwNEx4OXZHSGw3N0RXV25vZDUyc0dOSlNYb3FZZTZZQjlKblhxWjRCaDM1NE1taUJHNm9RVndnZEVQbFhwUWltMGowUCsyTTI4SXZzNWZWYUhtWEgzSThRYklzYXJxODl6VldwNVd4bG9DbEVNQ3hrTm5HTEhCbHRITkNRVjl2OXI0VmIzd1k2NFVUb1FLVUFtM0wraEVzaFRlSFpYTEw0RGJ3bUR4Ny9TeFhaQlFwSW1kWXhvRUI1clN3RFM2R2tYNkVKWWVjU0FvZFdkOG9ZNFlYNC95cnVoUkt5K0Jpc0J4dWJKay91dUx3WWI0Y0Zub2taYTZoSDFVOFZuK0NZSDlha1BmanFmOXEwcytLS0h6MVN0cUhrVlFBZHUycnNSQzRjbkFrL1laRDN4NXJOQnpuWDZ1NUxLNzI1OG9IVWgvMmNUMjlBS0xBdjY2U25ZcWZSUzF4K2pOYWpZSWQ3Qy84VjVQNTZwWERBc29TYmVONmk4Ulh4bVQreUlrV1pFN1YydXQrRmltWkh6QU9XRVlwQ0xHY09Ob3lVQUhMWWJpSytBM1FoUjJNRjJGWFZwRFZTemRDYjJESjBaNHBvR1k5d0F6MlRuOUNLeU51cm8zMDEvV0lYK3BQOU9aWnpoa3IwdDljZWU4RHJEK1J6cDFJeW9FNTIxdkdET0U1S2lLM0JNWUJXZVlNcVJzdWNBejlDR1hwRFN3Ri9uVTV6SjFTK0F1eWZMVzJKenIwU3U0SVpmMU5qZkg4dEtOeEZGdzE0blpBMWhkNERxOUx4Vy9uYVU1OXI1LzV0c0c5T1dOOUE1YkQwSW5jMUluOTNKYjF6SkVmY3hCUFVtQndHelVDakNNZkNzdGdrQklPQzd5Mlp5eEhXYitITWwrNm92Q3lvalhKcE5GaXZsd2tkbDhQZ1RHakhWR0lnYm53SFN3emMrcXJTNGIwQWZ0Q1lMRnJNcjZLSnNpUjlRQ3k2MkoxdG42R1YwUm1wOGpwMFdHNXZXVnF5WHc1K2FwR2lBWUdVNjB0bnRHV3FUR3c1QUlnYXlVd1owZGd6cHlwUkJlV29XMkk3ZmJwc0o3cm15MC9WdmIxbE96VVVtdm4vQkxXM3hsaHZrYUx4aDR5eUs1OTI3QjhpK1VMVjVaU0o1NzZ5dWF3c3d4TnRJeEQ0RVF6QkVQRlZ4RUluTEdPWU1rZGdUbGhiV09HMUZqam9MeXViWDdvSzFoR2pDYTloTUxFRllYY01qZStLMHRiN0xPS0RKQmJDcmx0Y0l3cjYwZEZCanNZWWo5ZCt5dVpEOEJvRWppeVZGaXNYaW9qdEZERzJrNlJKMGlSSmRZeVVHWVprd3dzNyt0eG1vOEFuUDdhdDFpcFVNWnU0TXF6cE1hSW95dEx0R3RPZlllMUxyQmhHRi9xN3RNNkc4OVlxeHptYm9uOVhFaWRhSmE1aG9ZVWNWSUFGaFdleUNUQU9HUk95VVF3UXRnSEN4QmplOFAydlE0VjhSN0xMRDd6SFdrbXJSR1lMR2o5ZGFrUCtZa1liRjFqZ3F5K2xpbXlpMXhST0xyUmI5aFhoVE9GeFI0WUlLOTlKZUppMitEdVZTTkFqbnpZcVFZb2JRUGpBaGU1ZU02NC9WTHgxYkR5UDlYVWtHTUttV1dTOVgzMVN2eHBjVEd4RFc0RFROL3YyR25tc05KbUVVbVpaWEJ2d0ZRNkdEdmNQMk8vTnZPdmFzendlTzdZOThnOFk0Wlh3ZzNHVG1TeHdVNlJBOW9kRHgvVThuR3pwdldsdmtGUG1zNVAxazhwd2JvV00rTVpnakZJTFhaZDFINzZVM3hic0FjRzlqVUVOMmlCZmYxYVgrNFk3UWtHbldQQVlrVnJyNnVOTk5OV1YvQnRMT3pBK0xjd0lGUEVTUURIdzRMWXBqa3BnS2xoWDB1ZGtpZDl6YzFmMXVNWmhxbXl0SWNpUjJ3SlJoekN2cWRHYUtleXFJQjlqZmczNmZzZERoTy9EbitLVHhHRFhGbmFXS1lXcUJIQjcxYVAzcGpFRUg5Qjh5LzZTSnFzTnZxeXhwOXI5cjEzMk4vd1JWRTc2ZVJIOFNLYTdaeFlDMnlEUXpDdThKUG9kRnhqYVlOL2tWNnVTZms1cGlvSXBKQkZkTWN1RDlNM1dFekYrNzM2Tm5wNGVScmVUMFdCZGtxQndaanFHVHdEdzB1dW9tQzVuTmI5Nlhnb0VLeFFEYkNEc1J2QWFPRlBKR0d1U2Z6TFlzMUl5cE8vZjNrYVBreEdzL2tLYWNKeXpVbHJ4QzlXekdSZDg1bVdEMURmYjY2UXIvOEdIa3E5YlhhWHArakV2N3grdG52MlU4a2JDd0Z1NzhvQlVpb3NJL2hhUGM4U3k1elFxcC84cGZaYi9yUUJCa2lkNkpmc05UL3hGQTJCU0dLYzhjSlhOM1cvdFUxMjRoQnB0K29EQkhFTXgzRklGR2lNODFZNVpLZWw4S2lNdGRJMm1KVnJnTWcyZlY4SjZiREQ3VnBaa09jeWVWNzBKNGpnbkR6eWdheEhscWxucmlnUVhQU1d3c0UxcE13MlFBcU1oVytad3I2V1FTRWlGK0d4WElON3E5cEx0UEprSFd1WkhIRWNzMWlKMkFWaytSd3NCYlhyajQwc0FZNFZzblpVWktrRVMydzNUT29TUHFydGNGeXp6YW4vTEUrNE9zYU5WbWpxWS92QitLcU1aM3RnVEZQVlR5Y2dGTXJHaHBxK3UvSGRZb01BKzJXRjlVTHFpa0xmTmc0WmliZGovVml0YitwYnkycnQ3VHJEWkhldUkxUjhnbE4xOUh2T3dVK3hVWis3a1Y3Q0NHMHE3SzF3dktQelU0eGE4eXd3SjZXTjQrNTQ3N3ZqQ2VORVUzLzJOcTNzSUVMNXVxOUhJRUwzaXFqa1N2Z3VMclRQazFwR0wyOTBSKy9EWWxISnFjS2NNOTcvOFZ3dnVWVFQ5enNNTzF2ZnUzZVBqVDBSTzZyV2x6cjZqQUVSU0QxeEdLcExwY3ZyQ1k5cm44ZENhUnNjRGNKaE9ER24rY1NjaHRmd3ZabmI3L3JOOVp5aWl1ZWlqNThmL3hJM3N4SVlFbzF6TVZ1V2NBeXQ3RUdXY0R1c3c2TnQ4SVVpUzhmVzl1TE5HYVlvOGlHd0lqMzdEV3lweDFSODFXemI3V0dFQ2xlMmZDWFVqK3BTUCtKWWVhbnI1bG5IT21aSm52bW9qQ2NJNHJtd2ExOEpzMUFSSjY5SytHbGQxZklpK1NqRzFTZWNvenJzdmUvSVVvaHQ4L04rVnNrSGx2VTZJeXdIdW9Dc3Y2dDkvZUVUUFBBa3M5Wm5mbzNqUWxiUENLL3VUNmFXTVVIT2VOcHczYTdmUDFYOWN3SWNDMGFyZjJ3ejBRZGNoV0Q4TEhYWSs0YzZSbjdReDk2SHByNXo1ZlUxKy95SVgrV1d3UVdBMVRlcU1lRmVRb0h3eTNXRTF5SWR3WkpiTmZuT2oyTEh1bDI3OHZ0NmpHY1lCOTVjbVM5WGRSOE5idUo0bzBhRWI1Wk9wTlBWM3NYamptRGhLdmxFbm51V2czellyMjF3T0ljcUxIYjljSjJYckg5bzB6RFNBNnlIcTF4aDNQSnMzekptYjA1Zkw5d1RkM3ArRHZrVG5zaDZoRG5iVCt5dXl2ZlgwcHZGOG93VGF5OC9pem52Mnl3S3E0bi80ek9NQ1Z6alFDdGk4RHQ1WHZxek1aMkxXSEFabXpyeEtEeDl2NTZQTDFwWjFwenFwNWlkL1BzNkQ2dzJQeU12enU5S08rcFFRY3NVMGhZUzN4SkNnMkRKczlORnVzV3A0RXNvaklBcFpFNGY1Y0RnYUxHVEhyejRtRTRUMFR6OG83UjAwZlJUVStQYS9DK3BZWk5DNEdYRHZvQ3NZNExwZDRubmh5azVQTDVyMTc1YlZPcHB0dk9PeFBUNzJnNitKZFVXaE15UTdZYkdUY25hcWkwSkRETVA3MDJFVUgrY051MGRXYUxCcXUzblhENVZIMWtObnc5aWVOcnV3TEorQ2QrNWRsalZFVWlhMCttalRYa3hQSjdLOFlmMkc5aTQ2T3Q4ZTBWR3VXVzRDSTk1SWFmVU1hUVlMSW04ZGpndGN2cVlsakw4UzB5Z29yTzl5Z1FBcDlPeUZKTjA3V3dlUTc5NnJ5K3dqdGN5ajJYZlFuQm5XNVRNUTQwRlRDY1hEbnRJcmY2bXMrMVVmOGJWbHVETHhSaUtPTXdWdVpQK0laS1dQdUIwU2ZRL2NvRWd0UzlzL3hxTVdLWk9PLzNabTJVY1VpZUNCVEM0d0lvT3FBMDVNbXJEMDBzb0JLNnA3U0E3Q3h3WkZRRDdqZC82amVMMEo2a1hFZXFJWmJGWm5QcEcwRTl6WUdvQmtDWGFJclpUMGFoS1ZyKzlCZlg4M3RhRW1zYitTaWpwMEE1TWcyUXVkU0lOWWIrWlZlcy8yZVM0V29lT1V4dFdwOWVSSGpWNitoaFRxdmMyaXdyd2xQaWFyTzhkbWVjY1F5L2NZZlh1OCtIdi9UWXZYcmRqSUJ6eTk0Nk0zaXh6Mm9TOEQvVjhVYitSWlc2WndmSUgrSEtoZis2OGZ0bGdHNE13aGJUNmx6cXhmdFFYYlptVEdKamEwMXJTZFZkR21XMm0xYllERWhDTVpnamJQMkM3MjdXMFQ3YTVWb20vanZTajA5ZExpMTIzUGdWUFpXYzQxTWpjNmd0TXQ5eXRkWHZwZjgwWXVxbWxqb3dlTFB5WHZkaktsU1djQ21Bc09KLzcyMDlsK1BsMVh4eU5kTXBTME4wT2pDVEdsZm1qeGVLMG40dlZXQXRnNUNKM3hDREg0RXRQMTJuYk9LUmVKTkhZdjljeWxwVk9zSzdkT2hTSHZyb1V5SEhKU3lnc2dUbmJ1ZWJrRFN4YW5DN2JzaVltVk9XTmYrZkFZSFl3M25UZjFXdGVuT2tGbDlmam5NdmhRaCtXQ1JDTXBCaGN6UDg5N3Y1djF2L2pOUEhmSCtCdkdQdGJMOHQrQVlNL1BNS0xwTDJ0ZDFJSG1VUHUyTjNCS0NjK2JCK0RPcjJ3RGlJcFd6d29vL1lJN3RreGROb3l0TUNWUjBUT0g4VE12QjEvLzQ5NFNlcEVMam5lV2JDSEFQWm5MeWQ4djM3a2FIWHFOVGdHWXowRDVqbHV0TWVRM2ZoZGoxVWRJV3J0MFdRVks2c3R6cTV0a2UzVUN6N3lzMlBPcy9nN3h1LzhCbGZKVnZLVmVuNVZMMWpYZG53NjFwUXVqNW82OWh4SmJ6YXI0eGp4N2gzaGJqVTl2c0lMenZEc2RMekpuTWZRL2ZWMlpQdjQ2cGgxdjdHZTQ3VHFKUnplVDRmbmZWelE4Ri93azQ5NFN1WnRkeUgwZnNMVDNiZlJjeE5IMTgwNkZ4OXlpdE1SbjNIT3kxcy9xTGVzMzl2bnhaYjFPUWRvMDl0TzdQK1EwMWJiODYzTjVSVy9XN3lMeloxajZlb29yV3RYNHhxenBBN25DMDh4NmNJL3J4NXRmb3hSdGV4dENKUGlYYXIwNmF4VFpLNVJ4bTVxdFhxWDZRMy9PUzM4UWZaOG9rY1hhVTY5dGw5SjM3S3puU0JSS01pSm9jSFJ5dFBpN0xhRXl5TGFGcStkeHVtQ3hjNTJyc0hSYWlRVlRzVFRGWVhnV3FpeERLNXcrbG9WN3VKeitITmxIbGdHay8xcy9OYlZxckNYRS9sSzcrZWd5L3dXR1BjZm0yRlh0NWcyc2d4cGR5MGJ2MjVXdVpmbDFmKzNNSWxqRCtaaEVuL0d3V1YrODJIaVRjNXdmenRoeUYxWlA3b2lnNVBMQWhnekV2aEpVbGZ2MGNKamNrYW9mbVVjNTdUWFJmYnd5RG05ckJldU9LUi9yT0ZoU0FCanlSMXRrVThjbHQ4cVdCWjRqc01POEhTVHY3Z0RLTzFtaEl2SjFQTjVVcnArVU9RSkEvc29kUHArKzg1aStkd3hKQ0pubzNUN21QQk9tRk5Rd3NRTUUzK2pkUCtKbkI4K0JxYnFUUFhWcEdPVDNQUEJaRUFMWUt3MWlmR0RNdUtRRytsbEJWeC8zbEE3R3hWZVJnMytwdXdpVHpKb296RDI4YU1YMnc3eVhHcndhcVBNdTZFaSs2QjU1T1pXUmczWUd5b0s0OU16YzBQbDl0YjNjbkcrWHVjaENvL2tmdGZjMjBJdnptM2Zvd2FQOVBjYjZyVkFDTnYweTg3YmJrUFhxMjdlaFJHcDhUZVZGZ2pORXhUQ2tocFF5dXNzeWVkYkwvUGluTHFodGw2YVpHR2ViUEc3dEhCUUNPODh1TDJ6OTltWDhDSDZDcitXL0JmWGl4SUt6OFduQmhUeG1KejZma1BWaEpHc01vNlRuRXdPUDM2L29TQ3lzMnpXdVJ4SDNaeldubThMNzRZS2tpeXZycVRoYjlTQSt0L2MxcU51cU5UT2c2cG4vSTBhVUYvcXdsVjFWMjYrOVY3REEvWDlUNnlxSE9HcWYzNi9vZDZMRUpka3FRMC92T0szclhRbDRtaEU5TFgxc3FUWVFxOFdReDJ2aUJhU2JZNzExZDdZRTFHUjVkNVdtVk9uaXNNcXNPSDZjT3ZadWRjSXE0WXM2anV1Q3dNdnNwdmJmYThoT3IvWmR4ZDRLQXI5T05sNkovUlNTbUZobVJvTnpFa0JTN0x6bXdLVzI4Rm83YnRzZ0p4UUNGMERaWUNrZUFLbUdsdkxjQkVzNzUrVlVsamJNam9xNHhrRDZ5MGZaVHdqWHFYSWJ1YXdpdThZRW0yeEFhYjVHZllRQjFOSUU2Q2FocDYvbDZVQ0RKTTNuQjRBdGtwbEZESFl3MGlQYkROQVFCVDZOcWFyNGloVlEySHVSQWRPa2ZrQ0xJVjlzd1psTENBWTRqU2VRNnFmRkpvMGUxMzNOYndlUE4vMmhFZmZ6RmFLcktVd25qNnJrWnU2NG1QMVYwYXhFL0VsV0NTRkZhZWx1cS8rMm9aYk9QMEpFa011QVNXdUc4U2RzcU1iM2UvRWNPb3ZDQ3J4aFNKUEFvdk5HU2dLa1cwY0VOd25mNm54ckErSHlWOXFOQWxzOHF6bDFUTmYyZ1o4Zm82SlRBM0xuS1JPWHo4cUl6VFN6T216R2d1bHc2Ykk2aStlMVFodGdESGFpV0ZTdURLemh4SC9seGh5TEdSbk95Q3ZkNWNVNlNtQkcyK0xiZUZNNXlPSG5XMkJPU0Z6RXpkZ3VhTHBKcDE2c0l6REhzdFAzTXptYTJuajF6ZUxDbnVzNVk0NDNMbm1yRlQ3NUVRUXFXek5OOWlBZG96OTdxenVNRG1McTJIc2VvZTdJTzlHejdrNHlxdm9wQ0ZQNUJKWFpzaHRqTG1mUENwcmJiNWdOTEFlclgzUzM5UDk4MXdtNC95Qkk4ZGNEcEJsTFA2b284aWpLeVBha2RkL0xDdnE2bXYxVnROYzVHbmIxREt3SWxzZGp5cDdhamVYSnpzdzNyUjkyRStqcG4ybXlBMTNldHJIbkt6T1JUNlpydXJ0a3FmRGZvNnFtd0Q0VTk4eWVYUE5HZTJ3dEwvYXVKTVY4bkc2aGxQdzBqVTRraDVqcnFhTXRKM0Y1Z2lHbzBlMVA2em1JZktodzJvY1huY3R5eitxVkFNalVHVEg0YXRId1BEMjl2WmIvUDk2UzRJbWc5NTc5UG55UTFiOExUN2RIeDcwZHN5M2VCUEc3cUMzUE1PWmIzRnpsNW5jbXNiNnV6WVVmb2RzeDBQVjVlcGVEeVBNWFJaOElWZVhyN1c0SlRlZXE4cDJtdDV0MnB2TmQySHk1VWZqWEtzZnhsbHV4L0JUYlhiTjJyL1ZWNlcvVVI5Vmplelk5ajMzMWlrSDVFYjJ0eGdIN1FnTDZGeGNxMlRqeFlOdjhXL281bGVVY2xVYmRmdmJ6aUROU3hLWnJzc2tTejFJT3NrODVNRTgyUTdheFdPSmREc2pZc0hCcVZIdUxYa2E5QjVyL2ZWNkZRbVpkMHB4Q0J2MDJnajJPWkZjbkhXZFM4Vk8wK3pMU1RSUGJkMVAyT3F2Q3FlTzN0bWd4MXlSVldUbk1GQzdadit4L0pyRk5VMjdNOFgvMEhrM0gzZlU2N1d6dy85Z0V1ZDJHSHZiYnR2Yjk0cy92ZXoxQ08vRG5mK0l6ZzBxR3RjTTJtazViOW5pb05jbGk5MktYWE01emFxZDdNbFNQbU1XM2YzSGM1dUl2WHlmYkRkaDdOOXRIaXZ2YmcxRXFWcjkxRHJDcHQ2dm0wZmRSR3lvYkYyZFdFNkJ2Sk8va0YrYm5LUkI2T2VaZEc1SjJhRDM1VnhrRFNVZDlDcEdldjdXc2VIR2k5MExNZmNhUkhoWC9oUEVPUDlIWFB4OWNhOFhGNUhqYlN2dFVaaWtKNXN6ZG5rRjZ5L3ladXFHd3FyQlFUOXhhK0o5dGVHWFgwekFPMUh4T243T0UvZXEvci85d213ckQvZy9GZDE2dlU2NlZxLzVHOVdzR212OEd6WG9FWGc0T2NNN0pHcFFhTzk3TFRiVTBPTVVXZWtraHhPSWtWOW1EWHIvK1JldS9LOC9XelRkK2hrdWZiL3V3U05kVmR0NldXNXY4d2FRWnQ3TzIrSlVjdWZGSkhta1NETDZaLzBydFcwUjQ5U0pOUEhjLzlwNWxjWTF2elk3bGFTQm5kWDUxSitkSDJyMWY1cnlmZi8vQVFBQS8vL2pWM3VEWmpjQUFBPT0=
  kind: Secret
  metadata:
    creationTimestamp: "2025-06-29T18:55:53Z"
    labels:
      modifiedAt: "1751222347"
      name: nginx-hello-friend
      owner: helm
      status: deployed
      version: "3"
    name: sh.helm.release.v1.nginx-hello-friend.v3
    namespace: nginx-hello-friend
    resourceVersion: "249296"
    uid: 1604f9c5-ee9f-4f5a-b27a-e5015a8c7d6f
  type: helm.sh/release.v1
kind: List
metadata:
  resourceVersion: ""
apiVersion: v1
items: []
kind: List
metadata:
  resourceVersion: ""
apiVersion: v1
items: []
kind: List
metadata:
  resourceVersion: ""
apiVersion: v1
items:
- apiVersion: networking.k8s.io/v1
  kind: Ingress
  metadata:
    creationTimestamp: "2025-06-28T18:24:10Z"
    generation: 1
    name: demo
    namespace: default
    resourceVersion: "3671"
    uid: 61acd13b-ffe6-4b4d-ac6e-277430df4520
  spec:
    ingressClassName: nginx
    rules:
    - host: www.demo.io
      http:
        paths:
        - backend:
            service:
              name: demo
              port:
                number: 80
          path: /
          pathType: Exact
  status:
    loadBalancer:
      ingress:
      - hostname: ac51886d48b5b4e1591a74d670b32fc9-846705458.us-east-1.elb.amazonaws.com
- apiVersion: networking.k8s.io/v1
  kind: Ingress
  metadata:
    annotations:
      meta.helm.sh/release-name: nginx-hello-friend
      meta.helm.sh/release-namespace: nginx-hello-friend
    creationTimestamp: "2025-06-29T18:39:07Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
    name: nginx-hello-ingress
    namespace: nginx-hello-friend
    resourceVersion: "246530"
    uid: 93f76e70-4109-4b72-a3fe-7305e10c220e
  spec:
    ingressClassName: nginx
    rules:
    - http:
        paths:
        - backend:
            service:
              name: service-nginx-hello
              port:
                number: 80
          path: /
          pathType: Prefix
  status:
    loadBalancer:
      ingress:
      - hostname: ac51886d48b5b4e1591a74d670b32fc9-846705458.us-east-1.elb.amazonaws.com
kind: List
metadata:
  resourceVersion: ""
apiVersion: v1
items:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:34:37Z"
    name: default
    namespace: 2048-game
    resourceVersion: "5402"
    uid: fe87bae8-5054-4f30-bec6-1da3d4a3e9d3
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:07:22Z"
    name: default
    namespace: default
    resourceVersion: "359"
    uid: faa7f5bb-eba0-4936-a511-4c5389e6f407
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:20:27Z"
    name: default
    namespace: ingress-nginx
    resourceVersion: "2791"
    uid: ad00e222-ffb0-4692-a360-d1c804c2e8c1
- apiVersion: v1
  automountServiceAccountToken: true
  kind: ServiceAccount
  metadata:
    annotations:
      meta.helm.sh/release-name: ingress-nginx
      meta.helm.sh/release-namespace: ingress-nginx
    creationTimestamp: "2025-06-28T18:20:32Z"
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
      app.kubernetes.io/version: 1.12.3
      helm.sh/chart: ingress-nginx-4.12.3
    name: ingress-nginx
    namespace: ingress-nginx
    resourceVersion: "2845"
    uid: 07d0b658-d9aa-4919-bfa2-19f43ab9b778
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:07:22Z"
    name: default
    namespace: kube-node-lease
    resourceVersion: "360"
    uid: d9a963c9-7857-43db-a8d3-55c704689b8a
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:07:22Z"
    name: default
    namespace: kube-public
    resourceVersion: "361"
    uid: 4c05f45d-8afd-40cd-a97b-7d92035ae362
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:07:19Z"
    name: attachdetach-controller
    namespace: kube-system
    resourceVersion: "336"
    uid: 014c89fa-e483-4da8-bacf-7a16060f252e
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:07:14Z"
    name: aws-cloud-provider
    namespace: kube-system
    resourceVersion: "205"
    uid: 1e811468-4151-4322-a8c5-24d115bcd01a
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:09:32Z"
    labels:
      app.kubernetes.io/instance: aws-vpc-cni
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: aws-node
      app.kubernetes.io/version: v1.19.0
      helm.sh/chart: aws-vpc-cni-1.19.0
      k8s-app: aws-node
    name: aws-node
    namespace: kube-system
    resourceVersion: "704"
    uid: a6d96219-98be-4c9d-96a4-3c3f6a8f749c
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:07:18Z"
    name: certificate-controller
    namespace: kube-system
    resourceVersion: "327"
    uid: 0866c845-26b1-4134-8df5-6f6cec217787
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:07:18Z"
    name: clusterrole-aggregation-controller
    namespace: kube-system
    resourceVersion: "329"
    uid: df091301-da5d-4c16-b046-d13e8b5d6b8f
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:09:31Z"
    labels:
      eks.amazonaws.com/component: coredns
      k8s-app: kube-dns
    name: coredns
    namespace: kube-system
    resourceVersion: "678"
    uid: 16c580b6-3596-46a9-9bb5-b9d5245187de
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:07:19Z"
    name: cronjob-controller
    namespace: kube-system
    resourceVersion: "331"
    uid: 777eeaad-f153-40c5-8438-13131b8b48dd
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:07:20Z"
    name: daemon-set-controller
    namespace: kube-system
    resourceVersion: "341"
    uid: 97c68a8f-acb5-4c7c-806e-0eb055f15e20
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:07:22Z"
    name: default
    namespace: kube-system
    resourceVersion: "362"
    uid: f41edad5-829b-4f14-96fe-5bd998e774ec
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:07:21Z"
    name: deployment-controller
    namespace: kube-system
    resourceVersion: "349"
    uid: 9b1cc366-b773-4c30-91a2-0afaf445e388
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:07:22Z"
    name: disruption-controller
    namespace: kube-system
    resourceVersion: "357"
    uid: 40774152-5dda-4dfb-8e90-c9681846e4c4
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:15:37Z"
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: eks-node-monitoring-agent
      app.kubernetes.io/managed-by: EKS
      app.kubernetes.io/name: eks-node-monitoring-agent
      app.kubernetes.io/version: 1.3.0
    name: eks-node-monitoring-agent
    namespace: kube-system
    resourceVersion: "1852"
    uid: 9bdeec95-16b9-402e-bb2c-d903fd1a082b
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:07:19Z"
    name: endpoint-controller
    namespace: kube-system
    resourceVersion: "335"
    uid: 90d213ec-f2f0-4668-839a-5cb8254bc4b3
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:07:21Z"
    name: endpointslice-controller
    namespace: kube-system
    resourceVersion: "346"
    uid: 63cb74f6-a2a1-4603-bfde-541891b497a5
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:07:22Z"
    name: endpointslicemirroring-controller
    namespace: kube-system
    resourceVersion: "355"
    uid: 59e108da-c69b-4b10-b4ab-8c59b10fe91d
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:07:18Z"
    name: ephemeral-volume-controller
    namespace: kube-system
    resourceVersion: "325"
    uid: 6ab2f766-f048-4a11-b143-5ba4f46d15cf
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:07:19Z"
    name: expand-controller
    namespace: kube-system
    resourceVersion: "332"
    uid: 009d9c7e-9a37-43ed-9077-138c394ee3ab
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:07:18Z"
    name: generic-garbage-collector
    namespace: kube-system
    resourceVersion: "322"
    uid: 1b94484c-1d6b-4a8c-93a3-906e4e25039b
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:07:21Z"
    name: horizontal-pod-autoscaler
    namespace: kube-system
    resourceVersion: "350"
    uid: 9f296d51-0285-49c7-98b6-4ef03a633406
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:07:21Z"
    name: job-controller
    namespace: kube-system
    resourceVersion: "348"
    uid: 3524d582-66d2-4eaf-9b1c-d98b225e0c96
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:09:31Z"
    labels:
      eks.amazonaws.com/component: kube-proxy
      k8s-app: kube-proxy
    name: kube-proxy
    namespace: kube-system
    resourceVersion: "668"
    uid: 8d2ede9b-b157-4d74-aab7-40d48b64250e
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:07:22Z"
    name: legacy-service-account-token-cleaner
    namespace: kube-system
    resourceVersion: "354"
    uid: 54b2fc4f-a114-4cc1-9a98-80c6345215ce
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:07:20Z"
    name: namespace-controller
    namespace: kube-system
    resourceVersion: "340"
    uid: dc4a203c-2df8-4f2f-a425-a502cb9883b5
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: node-controller
    namespace: kube-system
    resourceVersion: "208"
    uid: 8c4e610b-b1db-45a9-aa45-6b69432a87f5
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:07:18Z"
    name: persistent-volume-binder
    namespace: kube-system
    resourceVersion: "328"
    uid: aca0c80e-950f-4729-929e-8a0ab2c28dfc
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:07:21Z"
    name: pod-garbage-collector
    namespace: kube-system
    resourceVersion: "347"
    uid: 230b12ac-22ee-4c42-a9ab-ed632711b3b7
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:07:22Z"
    name: pv-protection-controller
    namespace: kube-system
    resourceVersion: "352"
    uid: 58c5f1a0-6135-40f5-ada6-58ef326fdfec
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:07:19Z"
    name: pvc-protection-controller
    namespace: kube-system
    resourceVersion: "333"
    uid: 826c52be-70d4-40f8-ab8d-90fc435c321c
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:07:18Z"
    name: replicaset-controller
    namespace: kube-system
    resourceVersion: "326"
    uid: 6b7cc0ce-7569-46fb-990f-f362a38b4bdf
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:07:19Z"
    name: replication-controller
    namespace: kube-system
    resourceVersion: "337"
    uid: 85b6e8bd-a239-4357-be7c-7cc20fb1953b
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:07:20Z"
    name: resourcequota-controller
    namespace: kube-system
    resourceVersion: "338"
    uid: 7ab0605a-aee7-48af-9d09-8da151e13cb8
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:07:20Z"
    name: root-ca-cert-publisher
    namespace: kube-system
    resourceVersion: "343"
    uid: e894290d-eef2-4ad9-b1e6-461c5482d551
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:07:22Z"
    name: service-account-controller
    namespace: kube-system
    resourceVersion: "356"
    uid: f3bee2ef-59d6-43c4-beeb-4e75b80d4ad9
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: service-controller
    namespace: kube-system
    resourceVersion: "206"
    uid: 0438b785-a205-4f0d-9bd1-74df30568086
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:07:18Z"
    name: statefulset-controller
    namespace: kube-system
    resourceVersion: "323"
    uid: 0cca1eda-a67b-4868-a997-eff27a3b9102
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: tagging-controller
    namespace: kube-system
    resourceVersion: "207"
    uid: 5a62b683-090f-4485-b05a-c48c445a81b6
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:07:20Z"
    name: ttl-after-finished-controller
    namespace: kube-system
    resourceVersion: "342"
    uid: 3e6c9552-be28-4ed6-a8c8-988ef9ae22e4
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:07:21Z"
    name: ttl-controller
    namespace: kube-system
    resourceVersion: "351"
    uid: 49850fe6-7689-4cb9-ab63-2a71be40496f
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-28T18:07:19Z"
    name: validatingadmissionpolicy-status-controller
    namespace: kube-system
    resourceVersion: "334"
    uid: d108372b-be15-402a-b49e-ac98d4ad2577
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-06-29T18:39:06Z"
    name: default
    namespace: nginx-hello-friend
    resourceVersion: "246412"
    uid: a850ba85-4337-4889-b555-c17fa83f9cbf
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations:
      meta.helm.sh/release-name: nginx-hello-friend
      meta.helm.sh/release-namespace: nginx-hello-friend
    creationTimestamp: "2025-06-29T18:39:06Z"
    labels:
      app.kubernetes.io/instance: nginx-hello-friend
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: nginx-hello-friend
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: nginx-hello-friend-0.1.0
    name: nginx-hello-friend
    namespace: nginx-hello-friend
    resourceVersion: "246414"
    uid: 0535b9cb-0197-4693-ab26-f8a30f362d8d
kind: List
metadata:
  resourceVersion: ""
apiVersion: v1
items:
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      meta.helm.sh/release-name: ingress-nginx
      meta.helm.sh/release-namespace: ingress-nginx
    creationTimestamp: "2025-06-28T18:20:32Z"
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
      app.kubernetes.io/version: 1.12.3
      helm.sh/chart: ingress-nginx-4.12.3
    name: ingress-nginx
    namespace: ingress-nginx
    resourceVersion: "2849"
    uid: 02cba3da-eaca-4a4f-b39b-e16cd20140d3
  rules:
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - configmaps
    - pods
    - secrets
    - endpoints
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses/status
    verbs:
    - update
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingressclasses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - coordination.k8s.io
    resourceNames:
    - ingress-nginx-leader
    resources:
    - leases
    verbs:
    - get
    - update
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - list
    - watch
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:bootstrap-signer
    namespace: kube-public
    resourceVersion: "191"
    uid: 3ae2cccf-ce6a-4a74-97d8-9f2a91f5f1a8
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resourceNames:
    - cluster-info
    resources:
    - configmaps
    verbs:
    - update
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"Role","metadata":{"annotations":{},"name":"eks-vpc-resource-controller-role","namespace":"kube-system"},"rules":[{"apiGroups":["apps"],"resourceNames":["vpc-resource-controller"],"resources":["deployments"],"verbs":["get","list","watch"]},{"apiGroups":[""],"resourceNames":["amazon-vpc-cni"],"resources":["configmaps"],"verbs":["get","list","watch"]},{"apiGroups":[""],"resources":["configmaps"],"verbs":["create","list","watch"]},{"apiGroups":[""],"resourceNames":["cp-vpc-resource-controller"],"resources":["configmaps"],"verbs":["get","update","patch"]},{"apiGroups":[""],"resources":["events"],"verbs":["create"]},{"apiGroups":["coordination.k8s.io"],"resources":["leases"],"verbs":["create"]},{"apiGroups":["coordination.k8s.io"],"resourceNames":["cp-vpc-resource-controller"],"resources":["leases"],"verbs":["get","update"]}]}
    creationTimestamp: "2025-06-28T18:07:17Z"
    name: eks-vpc-resource-controller-role
    namespace: kube-system
    resourceVersion: "308"
    uid: 1090b895-c94b-4edc-bf3b-623e656b798b
  rules:
  - apiGroups:
    - apps
    resourceNames:
    - vpc-resource-controller
    resources:
    - deployments
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resourceNames:
    - amazon-vpc-cni
    resources:
    - configmaps
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - create
    - list
    - watch
  - apiGroups:
    - ""
    resourceNames:
    - cp-vpc-resource-controller
    resources:
    - configmaps
    verbs:
    - get
    - update
    - patch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
  - apiGroups:
    - coordination.k8s.io
    resourceNames:
    - cp-vpc-resource-controller
    resources:
    - leases
    verbs:
    - get
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"Role","metadata":{"annotations":{},"name":"eks:addon-manager","namespace":"kube-system"},"rules":[{"apiGroups":["policy"],"resourceNames":["ebs-csi-controller-pod-disruption-budget","ebs-csi-controller"],"resources":["poddisruptionbudgets"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":[""],"resourceNames":["coredns","kube-proxy","kube-proxy-config"],"resources":["configmaps"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["apps"],"resourceNames":["aws-node","kube-proxy","ebs-csi-node","ebs-csi-node-windows"],"resources":["daemonsets"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["apps"],"resourceNames":["coredns","ebs-csi-controller"],"resources":["deployments"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":[""],"resourceNames":["kube-dns"],"resources":["services"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":[""],"resourceNames":["coredns","aws-node","kube-proxy","ebs-csi-controller-sa","ebs-csi-node-sa"],"resources":["serviceaccounts"],"verbs":["create","delete","get","list","patch","update","watch"]}]}
    creationTimestamp: "2025-06-28T18:07:16Z"
    name: eks:addon-manager
    namespace: kube-system
    resourceVersion: "288"
    uid: 84820847-e01a-45b9-9a5f-ced43b63a8eb
  rules:
  - apiGroups:
    - policy
    resourceNames:
    - ebs-csi-controller-pod-disruption-budget
    - ebs-csi-controller
    resources:
    - poddisruptionbudgets
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resourceNames:
    - coredns
    - kube-proxy
    - kube-proxy-config
    resources:
    - configmaps
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - apps
    resourceNames:
    - aws-node
    - kube-proxy
    - ebs-csi-node
    - ebs-csi-node-windows
    resources:
    - daemonsets
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - apps
    resourceNames:
    - coredns
    - ebs-csi-controller
    resources:
    - deployments
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resourceNames:
    - kube-dns
    resources:
    - services
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resourceNames:
    - coredns
    - aws-node
    - kube-proxy
    - ebs-csi-controller-sa
    - ebs-csi-node-sa
    resources:
    - serviceaccounts
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"Role","metadata":{"annotations":{},"name":"eks:authenticator","namespace":"kube-system"},"rules":[{"apiGroups":[""],"resources":["events"],"verbs":["create","update","patch"]},{"apiGroups":[""],"resourceNames":["aws-auth"],"resources":["configmaps"],"verbs":["get","list","watch"]}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:authenticator
    namespace: kube-system
    resourceVersion: "209"
    uid: 22ab9dee-91e2-4c8a-a1b2-ceee27842ae4
  rules:
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - update
    - patch
  - apiGroups:
    - ""
    resourceNames:
    - aws-auth
    resources:
    - configmaps
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"Role","metadata":{"annotations":{},"name":"eks:az-poller","namespace":"kube-system"},"rules":[{"apiGroups":["coordination.k8s.io"],"resourceNames":["kube-controller-manager","kube-scheduler","cloud-controller-manager","eks-certificates-controller","fargate-scheduler","cp-vpc-resource-controller","amazon-network-policy-controller-k8s","eks-coredns-autoscaler","kms-storage-migrator-lease"],"resources":["leases"],"verbs":["get","patch"]}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:az-poller
    namespace: kube-system
    resourceVersion: "217"
    uid: 2b69108e-5e7c-48ba-bab8-90c753dba4fe
  rules:
  - apiGroups:
    - coordination.k8s.io
    resourceNames:
    - kube-controller-manager
    - kube-scheduler
    - cloud-controller-manager
    - eks-certificates-controller
    - fargate-scheduler
    - cp-vpc-resource-controller
    - amazon-network-policy-controller-k8s
    - eks-coredns-autoscaler
    - kms-storage-migrator-lease
    resources:
    - leases
    verbs:
    - get
    - patch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"Role","metadata":{"annotations":{},"name":"eks:certificate-controller","namespace":"kube-system"},"rules":[{"apiGroups":[""],"resources":["configmaps"],"verbs":["get","update","create"]},{"apiGroups":["coordination.k8s.io"],"resources":["leases"],"verbs":["create"]},{"apiGroups":["coordination.k8s.io"],"resourceNames":["eks-certificates-controller"],"resources":["leases"],"verbs":["get","update"]}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:certificate-controller
    namespace: kube-system
    resourceVersion: "227"
    uid: 0dd099ba-dcc9-4c5f-bfa9-b42f2e6f3c23
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - get
    - update
    - create
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
  - apiGroups:
    - coordination.k8s.io
    resourceNames:
    - eks-certificates-controller
    resources:
    - leases
    verbs:
    - get
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"Role","metadata":{"annotations":{},"name":"eks:coredns-autoscaler","namespace":"kube-system"},"rules":[{"apiGroups":["coordination.k8s.io"],"resources":["leases"],"verbs":["create"]},{"apiGroups":["coordination.k8s.io"],"resourceNames":["eks-coredns-autoscaler"],"resources":["leases"],"verbs":["get","update","patch"]},{"apiGroups":["apps"],"resourceNames":["coredns"],"resources":["deployments/scale"],"verbs":["get","update"]},{"apiGroups":[""],"resources":["events"],"verbs":["create","patch"]},{"apiGroups":[""],"resources":["pods"],"verbs":["list"]},{"apiGroups":["metrics.k8s.io"],"resources":["pods"],"verbs":["list"]}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:coredns-autoscaler
    namespace: kube-system
    resourceVersion: "232"
    uid: 3deb8ecc-cf24-4cd7-a380-c1a72d42a4ae
  rules:
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
  - apiGroups:
    - coordination.k8s.io
    resourceNames:
    - eks-coredns-autoscaler
    resources:
    - leases
    verbs:
    - get
    - update
    - patch
  - apiGroups:
    - apps
    resourceNames:
    - coredns
    resources:
    - deployments/scale
    verbs:
    - get
    - update
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - list
  - apiGroups:
    - metrics.k8s.io
    resources:
    - pods
    verbs:
    - list
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"Role","metadata":{"annotations":{},"name":"eks:fargate-manager","namespace":"kube-system"},"rules":[{"apiGroups":[""],"resourceNames":["aws-auth"],"resources":["configmaps"],"verbs":["get","update","patch","delete"]},{"apiGroups":[""],"resources":["configmaps"],"verbs":["create"]},{"apiGroups":[""],"resources":["events"],"verbs":["get","list"]}]}
    creationTimestamp: "2025-06-28T18:07:16Z"
    name: eks:fargate-manager
    namespace: kube-system
    resourceVersion: "281"
    uid: 84f2afe2-7af7-40b5-b1b6-64c4c6483018
  rules:
  - apiGroups:
    - ""
    resourceNames:
    - aws-auth
    resources:
    - configmaps
    verbs:
    - get
    - update
    - patch
    - delete
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - get
    - list
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"Role","metadata":{"annotations":{},"name":"eks:k8s-metrics","namespace":"kube-system"},"rules":[{"apiGroups":["apps"],"resourceNames":["aws-node","eks-node-monitoring-agent"],"resources":["daemonsets"],"verbs":["get"]},{"apiGroups":["apps"],"resourceNames":["vpc-resource-controller"],"resources":["deployments"],"verbs":["get"]},{"apiGroups":[""],"resourceNames":["amazon-vpc-cni"],"resources":["configmaps"],"verbs":["list","get"]},{"apiGroups":[""],"resourceNames":["eks-extension-metrics-api"],"resources":["services"],"verbs":["get"]},{"apiGroups":["coordination.k8s.io"],"resources":["leases"],"verbs":["list"]}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:k8s-metrics
    namespace: kube-system
    resourceVersion: "238"
    uid: 7f9d6770-571d-4586-9a4b-4a5f4ee1a1ef
  rules:
  - apiGroups:
    - apps
    resourceNames:
    - aws-node
    - eks-node-monitoring-agent
    resources:
    - daemonsets
    verbs:
    - get
  - apiGroups:
    - apps
    resourceNames:
    - vpc-resource-controller
    resources:
    - deployments
    verbs:
    - get
  - apiGroups:
    - ""
    resourceNames:
    - amazon-vpc-cni
    resources:
    - configmaps
    verbs:
    - list
    - get
  - apiGroups:
    - ""
    resourceNames:
    - eks-extension-metrics-api
    resources:
    - services
    verbs:
    - get
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - list
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"Role","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"amazon-network-policy-controller-k8s"},"name":"eks:network-policy-controller","namespace":"kube-system"},"rules":[{"apiGroups":[""],"resourceNames":["amazon-vpc-cni"],"resources":["configmaps"],"verbs":["get","list","watch"]},{"apiGroups":["coordination.k8s.io"],"resources":["leases"],"verbs":["create"]},{"apiGroups":["coordination.k8s.io"],"resourceNames":["amazon-network-policy-controller-k8s"],"resources":["leases"],"verbs":["get","update","patch"]},{"apiGroups":[""],"resources":["events"],"verbs":["create","patch"]}]}
    creationTimestamp: "2025-06-28T18:07:17Z"
    labels:
      app.kubernetes.io/name: amazon-network-policy-controller-k8s
    name: eks:network-policy-controller
    namespace: kube-system
    resourceVersion: "294"
    uid: 523d4337-8f93-40e1-82e3-62b44b2464b3
  rules:
  - apiGroups:
    - ""
    resourceNames:
    - amazon-vpc-cni
    resources:
    - configmaps
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
  - apiGroups:
    - coordination.k8s.io
    resourceNames:
    - amazon-network-policy-controller-k8s
    resources:
    - leases
    verbs:
    - get
    - update
    - patch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"Role","metadata":{"annotations":{},"name":"eks:node-manager","namespace":"kube-system"},"rules":[{"apiGroups":[""],"resourceNames":["aws-auth"],"resources":["configmaps"],"verbs":["get","update","patch"]},{"apiGroups":[""],"resources":["configmaps"],"verbs":["create"]},{"apiGroups":[""],"resources":["events"],"verbs":["get","list"]}]}
    creationTimestamp: "2025-06-28T18:07:16Z"
    name: eks:node-manager
    namespace: kube-system
    resourceVersion: "272"
    uid: 71890d43-27ba-45f7-814f-cc01fbf62d8a
  rules:
  - apiGroups:
    - ""
    resourceNames:
    - aws-auth
    resources:
    - configmaps
    verbs:
    - get
    - update
    - patch
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - get
    - list
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"Role","metadata":{"annotations":{},"name":"eks:service-operations-configmaps","namespace":"kube-system"},"rules":[{"apiGroups":[""],"resourceNames":["coredns","cp-vpc-resource-controller","kube-proxy","kube-proxy-config"],"resources":["configmaps"],"verbs":["get"]},{"apiGroups":[""],"resourceNames":["aws-auth"],"resources":["configmaps"],"verbs":["get","create","delete","patch","update"]}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:service-operations-configmaps
    namespace: kube-system
    resourceVersion: "252"
    uid: a13783ce-b7b8-4e30-8249-09d9756f7db4
  rules:
  - apiGroups:
    - ""
    resourceNames:
    - coredns
    - cp-vpc-resource-controller
    - kube-proxy
    - kube-proxy-config
    resources:
    - configmaps
    verbs:
    - get
  - apiGroups:
    - ""
    resourceNames:
    - aws-auth
    resources:
    - configmaps
    verbs:
    - get
    - create
    - delete
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: extension-apiserver-authentication-reader
    namespace: kube-system
    resourceVersion: "185"
    uid: 613c7576-b37b-4c9b-b29c-11af09b34b3a
  rules:
  - apiGroups:
    - ""
    resourceNames:
    - extension-apiserver-authentication
    resources:
    - configmaps
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system::leader-locking-kube-controller-manager
    namespace: kube-system
    resourceVersion: "189"
    uid: d442818b-3b60-4f6e-aea3-f1a404bfafaa
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - watch
  - apiGroups:
    - ""
    resourceNames:
    - kube-controller-manager
    resources:
    - configmaps
    verbs:
    - get
    - update
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
    - get
    - list
    - update
    - watch
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leasecandidates
    verbs:
    - create
    - get
    - list
    - update
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system::leader-locking-kube-scheduler
    namespace: kube-system
    resourceVersion: "190"
    uid: 41c430b8-d898-4f60-8d72-1dd05a908062
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - watch
  - apiGroups:
    - ""
    resourceNames:
    - kube-scheduler
    resources:
    - configmaps
    verbs:
    - get
    - update
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
    - get
    - list
    - update
    - watch
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leasecandidates
    verbs:
    - create
    - get
    - list
    - update
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:bootstrap-signer
    namespace: kube-system
    resourceVersion: "186"
    uid: b9c73e37-f6a8-4631-8b66-bef94c74363d
  rules:
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:cloud-provider
    namespace: kube-system
    resourceVersion: "187"
    uid: 526a7126-90d8-4934-a917-11ea70360252
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - create
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:token-cleaner
    namespace: kube-system
    resourceVersion: "188"
    uid: 38736cf6-72e2-4677-934d-5aa7bbedda9f
  rules:
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
kind: List
metadata:
  resourceVersion: ""
apiVersion: v1
items:
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      meta.helm.sh/release-name: ingress-nginx
      meta.helm.sh/release-namespace: ingress-nginx
    creationTimestamp: "2025-06-28T18:20:32Z"
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
      app.kubernetes.io/version: 1.12.3
      helm.sh/chart: ingress-nginx-4.12.3
    name: ingress-nginx
    namespace: ingress-nginx
    resourceVersion: "2850"
    uid: 827f6a0c-916e-4fca-8700-1e318f948dc2
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: ingress-nginx
  subjects:
  - kind: ServiceAccount
    name: ingress-nginx
    namespace: ingress-nginx
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:bootstrap-signer
    namespace: kube-public
    resourceVersion: "198"
    uid: 9aa237f8-a4a1-42b2-8b32-692cf5d126b5
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: system:controller:bootstrap-signer
  subjects:
  - kind: ServiceAccount
    name: bootstrap-signer
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"annotations":{},"name":"eks-vpc-resource-controller-rolebinding","namespace":"kube-system"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"eks-vpc-resource-controller-role"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:vpc-resource-controller"}]}
    creationTimestamp: "2025-06-28T18:07:17Z"
    name: eks-vpc-resource-controller-rolebinding
    namespace: kube-system
    resourceVersion: "309"
    uid: 4f08d078-0707-4b0b-bbd6-762b897f525c
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: eks-vpc-resource-controller-role
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:vpc-resource-controller
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"annotations":{},"name":"eks:addon-manager","namespace":"kube-system"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"eks:addon-manager"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:addon-manager"}]}
    creationTimestamp: "2025-06-28T18:07:16Z"
    name: eks:addon-manager
    namespace: kube-system
    resourceVersion: "287"
    uid: be30f98b-5464-4b4e-b1e0-0053e35c2311
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: eks:addon-manager
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:addon-manager
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"annotations":{},"name":"eks:authenticator","namespace":"kube-system"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"eks:authenticator"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:authenticator"}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:authenticator
    namespace: kube-system
    resourceVersion: "210"
    uid: 401c1963-7ed4-4841-b12a-36ea7dc327d3
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: eks:authenticator
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:authenticator
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"annotations":{},"name":"eks:az-poller","namespace":"kube-system"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"eks:az-poller"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:az-poller"}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:az-poller
    namespace: kube-system
    resourceVersion: "218"
    uid: d7c7a9a0-ba5d-47d6-868c-37ce5009b4de
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: eks:az-poller
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:az-poller
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"annotations":{},"name":"eks:certificate-controller","namespace":"kube-system"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"eks:certificate-controller"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:certificate-controller"}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:certificate-controller
    namespace: kube-system
    resourceVersion: "228"
    uid: adffa66c-f785-4ac8-972f-7a4b76406fa5
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: eks:certificate-controller
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:certificate-controller
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"annotations":{},"name":"eks:cloud-controller-manager:apiserver-authentication-reader","namespace":"kube-system"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"extension-apiserver-authentication-reader"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:cloud-controller-manager"}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:cloud-controller-manager:apiserver-authentication-reader
    namespace: kube-system
    resourceVersion: "215"
    uid: 421b1eaa-536c-4250-b749-82602a28f15b
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: extension-apiserver-authentication-reader
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:cloud-controller-manager
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"annotations":{},"name":"eks:coredns-autoscaler","namespace":"kube-system"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"eks:coredns-autoscaler"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:coredns-autoscaler"}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:coredns-autoscaler
    namespace: kube-system
    resourceVersion: "234"
    uid: 0e898dfa-30d4-4930-9739-8de77d6fbb39
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: eks:coredns-autoscaler
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:coredns-autoscaler
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"annotations":{},"name":"eks:fargate-manager","namespace":"kube-system"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"eks:fargate-manager"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:fargate-manager"}]}
    creationTimestamp: "2025-06-28T18:07:16Z"
    name: eks:fargate-manager
    namespace: kube-system
    resourceVersion: "280"
    uid: adcf64ca-310c-4f7e-9cce-8653d154849b
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: eks:fargate-manager
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:fargate-manager
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"annotations":{},"name":"eks:k8s-metrics","namespace":"kube-system"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"eks:k8s-metrics"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:k8s-metrics"}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:k8s-metrics
    namespace: kube-system
    resourceVersion: "239"
    uid: 7b7d628d-6ad6-42f1-bf3b-418bbcdd8a0f
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: eks:k8s-metrics
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:k8s-metrics
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"rbac","app.kubernetes.io/created-by":"amazon-network-policy-controller-k8s","app.kubernetes.io/name":"amazon-network-policy-controller-k8s","app.kubernetes.io/part-of":"amazon-network-policy-controller-k8s"},"name":"eks:network-policy-controller","namespace":"kube-system"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"eks:network-policy-controller"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:network-policy-controller"}]}
    creationTimestamp: "2025-06-28T18:07:17Z"
    labels:
      app.kubernetes.io/component: rbac
      app.kubernetes.io/created-by: amazon-network-policy-controller-k8s
      app.kubernetes.io/name: amazon-network-policy-controller-k8s
      app.kubernetes.io/part-of: amazon-network-policy-controller-k8s
    name: eks:network-policy-controller
    namespace: kube-system
    resourceVersion: "296"
    uid: cb595f2c-5021-4d76-91ad-aa983e78727f
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: eks:network-policy-controller
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:network-policy-controller
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"annotations":{},"name":"eks:node-manager","namespace":"kube-system"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"eks:node-manager"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:node-manager"}]}
    creationTimestamp: "2025-06-28T18:07:16Z"
    name: eks:node-manager
    namespace: kube-system
    resourceVersion: "271"
    uid: d31cc95b-4875-4c0a-8dfa-ccef515a8ef2
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: eks:node-manager
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:node-manager
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"annotations":{},"name":"eks:service-operations","namespace":"kube-system"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"eks:service-operations-configmaps"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"Group","name":"eks:service-operations"}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:service-operations
    namespace: kube-system
    resourceVersion: "253"
    uid: 842c7c20-4236-4888-9b5a-40b73cbf9bc5
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: eks:service-operations-configmaps
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: eks:service-operations
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system::extension-apiserver-authentication-reader
    namespace: kube-system
    resourceVersion: "192"
    uid: 961b3557-4561-4686-94db-e6d6b34378a6
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: extension-apiserver-authentication-reader
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:kube-controller-manager
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:kube-scheduler
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system::leader-locking-kube-controller-manager
    namespace: kube-system
    resourceVersion: "193"
    uid: 52353709-d731-40fa-8959-04e8698faf9b
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: system::leader-locking-kube-controller-manager
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:kube-controller-manager
  - kind: ServiceAccount
    name: kube-controller-manager
    namespace: kube-system
  - kind: ServiceAccount
    name: leader-election-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system::leader-locking-kube-scheduler
    namespace: kube-system
    resourceVersion: "194"
    uid: 9fe10db6-63d3-4ef6-85d6-eae013effae2
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: system::leader-locking-kube-scheduler
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:kube-scheduler
  - kind: ServiceAccount
    name: kube-scheduler
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:bootstrap-signer
    namespace: kube-system
    resourceVersion: "195"
    uid: 7417ba76-e813-4623-92ff-ae276cbd75d7
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: system:controller:bootstrap-signer
  subjects:
  - kind: ServiceAccount
    name: bootstrap-signer
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:cloud-provider
    namespace: kube-system
    resourceVersion: "196"
    uid: 7b6b5f60-bff7-45e6-b2a9-638eb14eb08d
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: system:controller:cloud-provider
  subjects:
  - kind: ServiceAccount
    name: cloud-provider
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:token-cleaner
    namespace: kube-system
    resourceVersion: "197"
    uid: a1f4f060-3c90-40c4-82f3-be9e9273b380
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: system:controller:token-cleaner
  subjects:
  - kind: ServiceAccount
    name: token-cleaner
    namespace: kube-system
kind: List
metadata:
  resourceVersion: ""
apiVersion: v1
items:
- aggregationRule:
    clusterRoleSelectors:
    - matchLabels:
        rbac.authorization.k8s.io/aggregate-to-admin: "true"
  apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:13Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: admin
    resourceVersion: "371"
    uid: 03893c38-7fa1-433e-8410-266cd134bcd3
  rules:
  - apiGroups:
    - ""
    resources:
    - pods/attach
    - pods/exec
    - pods/portforward
    - pods/proxy
    - secrets
    - services/proxy
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - serviceaccounts
    verbs:
    - impersonate
  - apiGroups:
    - ""
    resources:
    - pods
    - pods/attach
    - pods/exec
    - pods/portforward
    - pods/proxy
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods/eviction
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - configmaps
    - events
    - persistentvolumeclaims
    - replicationcontrollers
    - replicationcontrollers/scale
    - secrets
    - serviceaccounts
    - services
    - services/proxy
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - serviceaccounts/token
    verbs:
    - create
  - apiGroups:
    - apps
    resources:
    - daemonsets
    - deployments
    - deployments/rollback
    - deployments/scale
    - replicasets
    - replicasets/scale
    - statefulsets
    - statefulsets/scale
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - jobs
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    - deployments
    - deployments/rollback
    - deployments/scale
    - ingresses
    - networkpolicies
    - replicasets
    - replicasets/scale
    - replicationcontrollers/scale
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    - networkpolicies
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - configmaps
    - endpoints
    - persistentvolumeclaims
    - persistentvolumeclaims/status
    - pods
    - replicationcontrollers
    - replicationcontrollers/scale
    - serviceaccounts
    - services
    - services/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - bindings
    - events
    - limitranges
    - namespaces/status
    - pods/log
    - pods/status
    - replicationcontrollers/status
    - resourcequotas
    - resourcequotas/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - controllerrevisions
    - daemonsets
    - daemonsets/status
    - deployments
    - deployments/scale
    - deployments/status
    - replicasets
    - replicasets/scale
    - replicasets/status
    - statefulsets
    - statefulsets/scale
    - statefulsets/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    - horizontalpodautoscalers/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - cronjobs/status
    - jobs
    - jobs/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    - daemonsets/status
    - deployments
    - deployments/scale
    - deployments/status
    - ingresses
    - ingresses/status
    - networkpolicies
    - replicasets
    - replicasets/scale
    - replicasets/status
    - replicationcontrollers/scale
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    - poddisruptionbudgets/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    - ingresses/status
    - networkpolicies
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - authorization.k8s.io
    resources:
    - localsubjectaccessreviews
    verbs:
    - create
  - apiGroups:
    - rbac.authorization.k8s.io
    resources:
    - rolebindings
    - roles
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    creationTimestamp: "2025-06-28T18:09:32Z"
    labels:
      app.kubernetes.io/instance: aws-vpc-cni
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: aws-node
      app.kubernetes.io/version: v1.19.0
      helm.sh/chart: aws-vpc-cni-1.19.0
      k8s-app: aws-node
    name: aws-node
    resourceVersion: "713"
    uid: bf3d024c-1932-4c36-98a2-dc0a370f873b
  rules:
  - apiGroups:
    - crd.k8s.amazonaws.com
    resources:
    - eniconfigs
    verbs:
    - list
    - watch
    - get
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - list
    - watch
    - get
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - list
    - watch
    - get
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - list
    - watch
    - get
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - list
  - apiGroups:
    - networking.k8s.aws
    resources:
    - policyendpoints
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.aws
    resources:
    - policyendpoints/status
    verbs:
    - get
  - apiGroups:
    - vpcresources.k8s.aws
    resources:
    - cninodes
    verbs:
    - get
    - list
    - watch
    - patch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:13Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: cluster-admin
    resourceVersion: "73"
    uid: e662fae7-de96-47f8-be1b-4c0cef63fbf1
  rules:
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs:
    - '*'
  - nonResourceURLs:
    - '*'
    verbs:
    - '*'
- aggregationRule:
    clusterRoleSelectors:
    - matchLabels:
        rbac.authorization.k8s.io/aggregate-to-edit: "true"
  apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:13Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
      rbac.authorization.k8s.io/aggregate-to-admin: "true"
    name: edit
    resourceVersion: "369"
    uid: 406681e3-171d-47fc-8509-ea00da961861
  rules:
  - apiGroups:
    - ""
    resources:
    - pods/attach
    - pods/exec
    - pods/portforward
    - pods/proxy
    - secrets
    - services/proxy
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - serviceaccounts
    verbs:
    - impersonate
  - apiGroups:
    - ""
    resources:
    - pods
    - pods/attach
    - pods/exec
    - pods/portforward
    - pods/proxy
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods/eviction
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - configmaps
    - events
    - persistentvolumeclaims
    - replicationcontrollers
    - replicationcontrollers/scale
    - secrets
    - serviceaccounts
    - services
    - services/proxy
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - serviceaccounts/token
    verbs:
    - create
  - apiGroups:
    - apps
    resources:
    - daemonsets
    - deployments
    - deployments/rollback
    - deployments/scale
    - replicasets
    - replicasets/scale
    - statefulsets
    - statefulsets/scale
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - jobs
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    - deployments
    - deployments/rollback
    - deployments/scale
    - ingresses
    - networkpolicies
    - replicasets
    - replicasets/scale
    - replicationcontrollers/scale
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    - networkpolicies
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - configmaps
    - endpoints
    - persistentvolumeclaims
    - persistentvolumeclaims/status
    - pods
    - replicationcontrollers
    - replicationcontrollers/scale
    - serviceaccounts
    - services
    - services/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - bindings
    - events
    - limitranges
    - namespaces/status
    - pods/log
    - pods/status
    - replicationcontrollers/status
    - resourcequotas
    - resourcequotas/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - controllerrevisions
    - daemonsets
    - daemonsets/status
    - deployments
    - deployments/scale
    - deployments/status
    - replicasets
    - replicasets/scale
    - replicasets/status
    - statefulsets
    - statefulsets/scale
    - statefulsets/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    - horizontalpodautoscalers/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - cronjobs/status
    - jobs
    - jobs/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    - daemonsets/status
    - deployments
    - deployments/scale
    - deployments/status
    - ingresses
    - ingresses/status
    - networkpolicies
    - replicasets
    - replicasets/scale
    - replicasets/status
    - replicationcontrollers/scale
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    - poddisruptionbudgets/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    - ingresses/status
    - networkpolicies
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    creationTimestamp: "2025-06-28T18:15:37Z"
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: eks-node-monitoring-agent
      app.kubernetes.io/managed-by: EKS
      app.kubernetes.io/name: eks-node-monitoring-agent
      app.kubernetes.io/version: 1.3.0
    name: eks-node-monitoring-agent
    resourceVersion: "1853"
    uid: 0d2f2b64-528d-4643-aad2-45cca4618064
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - watch
    - list
  - apiGroups:
    - ""
    resources:
    - nodes/status
    verbs:
    - patch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
  - apiGroups:
    - eks.amazonaws.com
    resources:
    - nodediagnostics
    verbs:
    - get
    - watch
    - list
  - apiGroups:
    - eks.amazonaws.com
    resources:
    - nodediagnostics/status
    verbs:
    - patch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"eks:addon-manager"},"rules":[{"apiGroups":["crd.k8s.amazonaws.com"],"resources":["eniconfigs"],"verbs":["get","list","watch"]},{"apiGroups":[""],"resources":["pods","namespaces"],"verbs":["get","list","watch"]},{"apiGroups":[""],"resources":["nodes"],"verbs":["get","list","update","watch"]},{"apiGroups":["extensions"],"resources":["*"],"verbs":["list","watch"]},{"apiGroups":["rbac.authorization.k8s.io"],"resourceNames":["aws-node","system:coredns","eks:kube-proxy","ebs-csi-provisioner-binding","ebs-csi-node-binding","ebs-csi-attacher-binding","ebs-csi-snapshotter-binding","ebs-csi-resizer-binding","ebs-csi-node-getter-binding"],"resources":["clusterrolebindings"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["rbac.authorization.k8s.io"],"resourceNames":["aws-node","system:coredns","ebs-external-attacher-role","ebs-csi-node-role","ebs-external-provisioner-role","ebs-external-snapshotter-role","ebs-external-resizer-role"],"resources":["clusterroles"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["apiextensions.k8s.io"],"resourceNames":["eniconfigs.crd.k8s.amazonaws.com"],"resources":["customresourcedefinitions"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":[""],"resources":["endpoints"],"verbs":["list","watch"]},{"apiGroups":[""],"resources":["events"],"verbs":["list","watch","create","patch","update"]},{"apiGroups":[""],"resources":["services"],"verbs":["list","watch"]},{"apiGroups":[""],"resources":["secrets"],"verbs":["get","list"]},{"apiGroups":["discovery.k8s.io"],"resources":["endpointslices"],"verbs":["list","watch"]},{"apiGroups":["events.k8s.io"],"resources":["events"],"verbs":["list","watch","create","patch","update"]},{"apiGroups":["apps"],"resources":["replicasets"],"verbs":["get","list","watch"]},{"apiGroups":["storage.k8s.io"],"resourceNames":["ebs.csi.aws.com"],"resources":["csidrivers"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":[""],"resources":["persistentvolumes"],"verbs":["create","delete","get","list","watch","update","patch"]},{"apiGroups":[""],"resources":["persistentvolumeclaims"],"verbs":["get","list","watch","update"]},{"apiGroups":[""],"resources":["persistentvolumeclaims/status"],"verbs":["update","patch"]},{"apiGroups":["csi.storage.k8s.io"],"resources":["csinodeinfos"],"verbs":["get","list","watch"]},{"apiGroups":["storage.k8s.io"],"resources":["storageclasses"],"verbs":["get","list","watch"]},{"apiGroups":["storage.k8s.io"],"resources":["volumeattachments"],"verbs":["get","list","watch","update","patch"]},{"apiGroups":["storage.k8s.io"],"resources":["volumeattachments/status"],"verbs":["patch"]},{"apiGroups":["snapshot.storage.k8s.io"],"resources":["volumesnapshots"],"verbs":["get","list"]},{"apiGroups":["snapshot.storage.k8s.io"],"resources":["volumesnapshotcontents"],"verbs":["create","get","list","watch","update","delete","patch"]},{"apiGroups":["snapshot.storage.k8s.io"],"resources":["volumesnapshotclasses"],"verbs":["get","list","watch"]},{"apiGroups":["snapshot.storage.k8s.io"],"resources":["volumesnapshotcontents/status"],"verbs":["update"]},{"apiGroups":["storage.k8s.io"],"resources":["csinodes"],"verbs":["get","list","watch"]},{"apiGroups":["coordination.k8s.io"],"resources":["leases"],"verbs":["get","watch","list","delete","update","create"]},{"apiGroups":["storage.k8s.io"],"resources":["volumeattachments"],"verbs":["get","list","watch"]}]}
    creationTimestamp: "2025-06-28T18:07:16Z"
    name: eks:addon-manager
    resourceVersion: "275"
    uid: 703e3cbf-afd7-4af7-a988-1355190e3012
  rules:
  - apiGroups:
    - crd.k8s.amazonaws.com
    resources:
    - eniconfigs
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - pods
    - namespaces
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - extensions
    resources:
    - '*'
    verbs:
    - list
    - watch
  - apiGroups:
    - rbac.authorization.k8s.io
    resourceNames:
    - aws-node
    - system:coredns
    - eks:kube-proxy
    - ebs-csi-provisioner-binding
    - ebs-csi-node-binding
    - ebs-csi-attacher-binding
    - ebs-csi-snapshotter-binding
    - ebs-csi-resizer-binding
    - ebs-csi-node-getter-binding
    resources:
    - clusterrolebindings
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - rbac.authorization.k8s.io
    resourceNames:
    - aws-node
    - system:coredns
    - ebs-external-attacher-role
    - ebs-csi-node-role
    - ebs-external-provisioner-role
    - ebs-external-snapshotter-role
    - ebs-external-resizer-role
    resources:
    - clusterroles
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - apiextensions.k8s.io
    resourceNames:
    - eniconfigs.crd.k8s.amazonaws.com
    resources:
    - customresourcedefinitions
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - endpoints
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - list
    - watch
    - create
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - get
    - list
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - list
    - watch
  - apiGroups:
    - events.k8s.io
    resources:
    - events
    verbs:
    - list
    - watch
    - create
    - patch
    - update
  - apiGroups:
    - apps
    resources:
    - replicasets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resourceNames:
    - ebs.csi.aws.com
    resources:
    - csidrivers
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumes
    verbs:
    - create
    - delete
    - get
    - list
    - watch
    - update
    - patch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - get
    - list
    - watch
    - update
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims/status
    verbs:
    - update
    - patch
  - apiGroups:
    - csi.storage.k8s.io
    resources:
    - csinodeinfos
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - storageclasses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - volumeattachments
    verbs:
    - get
    - list
    - watch
    - update
    - patch
  - apiGroups:
    - storage.k8s.io
    resources:
    - volumeattachments/status
    verbs:
    - patch
  - apiGroups:
    - snapshot.storage.k8s.io
    resources:
    - volumesnapshots
    verbs:
    - get
    - list
  - apiGroups:
    - snapshot.storage.k8s.io
    resources:
    - volumesnapshotcontents
    verbs:
    - create
    - get
    - list
    - watch
    - update
    - delete
    - patch
  - apiGroups:
    - snapshot.storage.k8s.io
    resources:
    - volumesnapshotclasses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - snapshot.storage.k8s.io
    resources:
    - volumesnapshotcontents/status
    verbs:
    - update
  - apiGroups:
    - storage.k8s.io
    resources:
    - csinodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - get
    - watch
    - list
    - delete
    - update
    - create
  - apiGroups:
    - storage.k8s.io
    resources:
    - volumeattachments
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"eks:az-poller"},"rules":[{"apiGroups":[""],"resourceNames":["kubernetes"],"resources":["endpoints"],"verbs":["get","patch"]},{"apiGroups":[""],"resources":["services"],"verbs":["list","patch","get"]},{"apiGroups":[""],"resources":["nodes"],"verbs":["get","list","patch"]}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:az-poller
    resourceVersion: "216"
    uid: 5d14e8d5-0cec-4c53-9724-ba893b04d86f
  rules:
  - apiGroups:
    - ""
    resourceNames:
    - kubernetes
    resources:
    - endpoints
    verbs:
    - get
    - patch
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - list
    - patch
    - get
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - patch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"eks:certificate-controller-approver"},"rules":[{"apiGroups":["certificates.k8s.io"],"resourceNames":["kubernetes.io/kubelet-serving"],"resources":["signers"],"verbs":["approve"]}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:certificate-controller-approver
    resourceVersion: "220"
    uid: 9fd7cc16-e042-4f0f-a68e-08549d62cacd
  rules:
  - apiGroups:
    - certificates.k8s.io
    resourceNames:
    - kubernetes.io/kubelet-serving
    resources:
    - signers
    verbs:
    - approve
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"eks:certificate-controller-manager"},"rules":[{"apiGroups":[""],"resources":["nodes"],"verbs":["get","list","watch"]}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:certificate-controller-manager
    resourceVersion: "222"
    uid: d0b7c637-eea0-40e4-a599-57c4629ab799
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"eks:certificate-controller-signer"},"rules":[{"apiGroups":["certificates.k8s.io"],"resourceNames":["beta.eks.amazonaws.com/app-serving"],"resources":["signers"],"verbs":["sign"]}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:certificate-controller-signer
    resourceVersion: "221"
    uid: 23ef9f57-1160-40d1-97db-d1ac569de251
  rules:
  - apiGroups:
    - certificates.k8s.io
    resourceNames:
    - beta.eks.amazonaws.com/app-serving
    resources:
    - signers
    verbs:
    - sign
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"eks:cloud-controller-manager"},"rules":[{"apiGroups":[""],"resources":["events"],"verbs":["create","patch","update"]},{"apiGroups":[""],"resources":["nodes"],"verbs":["*"]},{"apiGroups":[""],"resources":["nodes/status"],"verbs":["patch"]},{"apiGroups":[""],"resources":["services"],"verbs":["list","patch","update","watch"]},{"apiGroups":[""],"resources":["services/status"],"verbs":["list","patch","update","watch"]},{"apiGroups":[""],"resources":["serviceaccounts"],"verbs":["create","get"]},{"apiGroups":[""],"resources":["persistentvolumes"],"verbs":["get","list","update","watch"]},{"apiGroups":[""],"resources":["endpoints"],"verbs":["create","get","list","watch","update"]},{"apiGroups":["coordination.k8s.io"],"resources":["leases"],"verbs":["create","get","list","watch","update"]},{"apiGroups":[""],"resources":["serviceaccounts/token"],"verbs":["create"]}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:cloud-controller-manager
    resourceVersion: "213"
    uid: c3cdc582-93e4-481d-afeb-f8b5976d1485
  rules:
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - '*'
  - apiGroups:
    - ""
    resources:
    - nodes/status
    verbs:
    - patch
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - services/status
    verbs:
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - serviceaccounts
    verbs:
    - create
    - get
  - apiGroups:
    - ""
    resources:
    - persistentvolumes
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - endpoints
    verbs:
    - create
    - get
    - list
    - watch
    - update
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
    - get
    - list
    - watch
    - update
  - apiGroups:
    - ""
    resources:
    - serviceaccounts/token
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"eks:cloud-provider-extraction-migration"},"rules":[{"apiGroups":["coordination.k8s.io"],"resources":["leases"],"verbs":["create"]},{"apiGroups":["coordination.k8s.io"],"resourceNames":["cloud-provider-extraction-migration"],"resources":["leases"],"verbs":["create","list","get","update"]}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:cloud-provider-extraction-migration
    resourceVersion: "255"
    uid: e45fd5a7-0339-4740-9c30-be84a2e3281f
  rules:
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
  - apiGroups:
    - coordination.k8s.io
    resourceNames:
    - cloud-provider-extraction-migration
    resources:
    - leases
    verbs:
    - create
    - list
    - get
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"eks:cluster-event-watcher"},"rules":[{"apiGroups":[""],"resources":["pods","nodes"],"verbs":["get","list","watch"]}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:cluster-event-watcher
    resourceVersion: "229"
    uid: daed6419-e1fd-4cf0-8e14-b61b03bc412a
  rules:
  - apiGroups:
    - ""
    resources:
    - pods
    - nodes
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"eks:coredns-autoscaler"},"rules":[{"apiGroups":[""],"resources":["nodes"],"verbs":["list","watch"]},{"apiGroups":["metrics.k8s.io"],"resources":["nodes"],"verbs":["list"]}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:coredns-autoscaler
    resourceVersion: "231"
    uid: 2fd34552-e57e-433a-9209-0df635cc535f
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - list
    - watch
  - apiGroups:
    - metrics.k8s.io
    resources:
    - nodes
    verbs:
    - list
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"eks:extension-metrics-apiserver"},"rules":null}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:extension-metrics-apiserver
    resourceVersion: "235"
    uid: c4355344-e914-465b-986b-385657e8785b
  rules: null
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"eks:fargate-manager"},"rules":[{"apiGroups":[""],"resources":["pods"],"verbs":["get","list","watch","delete"]},{"apiGroups":[""],"resources":["nodes"],"verbs":["get","list","watch"]},{"apiGroups":[""],"resources":["pods/eviction"],"verbs":["create"]}]}
    creationTimestamp: "2025-06-28T18:07:16Z"
    name: eks:fargate-manager
    resourceVersion: "284"
    uid: 0f43c928-e6be-4c5a-ad53-c8c0db7ddd62
  rules:
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
    - list
    - watch
    - delete
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - pods/eviction
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"eks:fargate-scheduler"},"rules":[{"apiGroups":[""],"resources":["pods","persistentvolumes","persistentvolumeclaims"],"verbs":["get","list","watch"]},{"apiGroups":[""],"resources":["pods/status"],"verbs":["get","list","watch","update"]},{"apiGroups":[""],"resources":["configmaps"],"verbs":["get","list","watch","create"]},{"apiGroups":[""],"resourceNames":["fargate-scheduler"],"resources":["configmaps"],"verbs":["update"]},{"apiGroups":["coordination.k8s.io"],"resourceNames":["fargate-scheduler"],"resources":["leases"],"verbs":["get","update"]},{"apiGroups":["coordination.k8s.io"],"resources":["leases"],"verbs":["create"]},{"apiGroups":[""],"resources":["pods/binding"],"verbs":["create"]},{"apiGroups":[""],"resources":["nodes"],"verbs":["get","list","watch","delete"]},{"apiGroups":["events.k8s.io",""],"resources":["events"],"verbs":["create"]}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:fargate-scheduler
    resourceVersion: "236"
    uid: e876a83b-bc0a-4eff-a4ad-eb4b00547eea
  rules:
  - apiGroups:
    - ""
    resources:
    - pods
    - persistentvolumes
    - persistentvolumeclaims
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - pods/status
    verbs:
    - get
    - list
    - watch
    - update
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - get
    - list
    - watch
    - create
  - apiGroups:
    - ""
    resourceNames:
    - fargate-scheduler
    resources:
    - configmaps
    verbs:
    - update
  - apiGroups:
    - coordination.k8s.io
    resourceNames:
    - fargate-scheduler
    resources:
    - leases
    verbs:
    - get
    - update
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - pods/binding
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
    - delete
  - apiGroups:
    - events.k8s.io
    - ""
    resources:
    - events
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"eks:k8s-metrics"},"rules":[{"apiGroups":[""],"resources":["endpoints","pods","nodes"],"verbs":["list","watch"]},{"apiGroups":["apps"],"resources":["deployments"],"verbs":["list","watch","get"]},{"nonResourceURLs":["/metrics","/metrics/slis","/debug/api_priority_and_fairness/*","/version"],"verbs":["get"]}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:k8s-metrics
    resourceVersion: "240"
    uid: 191810d4-6600-4732-bdb6-17410708fda6
  rules:
  - apiGroups:
    - ""
    resources:
    - endpoints
    - pods
    - nodes
    verbs:
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - deployments
    verbs:
    - list
    - watch
    - get
  - nonResourceURLs:
    - /metrics
    - /metrics/slis
    - /debug/api_priority_and_fairness/*
    - /version
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"eks:kms-storage-migrator"},"rules":[{"apiGroups":[""],"resources":["configmaps","secrets"],"verbs":["get","list","watch","patch"]},{"apiGroups":["coordination.k8s.io"],"resources":["leases"],"verbs":["create","get","list","watch"]},{"apiGroups":["coordination.k8s.io"],"resourceNames":["kms-storage-migrator-lease"],"resources":["leases"],"verbs":["update"]}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:kms-storage-migrator
    resourceVersion: "242"
    uid: df05a36d-3539-4769-a260-7bebd6c0cc2f
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    - secrets
    verbs:
    - get
    - list
    - watch
    - patch
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
    - get
    - list
    - watch
  - apiGroups:
    - coordination.k8s.io
    resourceNames:
    - kms-storage-migrator-lease
    resources:
    - leases
    verbs:
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"creationTimestamp":null,"labels":{"app.kubernetes.io/name":"amazon-network-policy-controller-k8s"},"name":"eks:network-policy-controller"},"rules":[{"apiGroups":[""],"resources":["namespaces"],"verbs":["get","list","watch"]},{"apiGroups":[""],"resources":["pods"],"verbs":["get","list","watch"]},{"apiGroups":[""],"resources":["services"],"verbs":["get","list","watch"]},{"apiGroups":["networking.k8s.aws"],"resources":["policyendpoints"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["networking.k8s.aws"],"resources":["policyendpoints/finalizers"],"verbs":["update"]},{"apiGroups":["networking.k8s.aws"],"resources":["policyendpoints/status"],"verbs":["get","patch","update"]},{"apiGroups":["networking.k8s.io"],"resources":["networkpolicies"],"verbs":["get","list","patch","update","watch"]}]}
    creationTimestamp: "2025-06-28T18:07:17Z"
    labels:
      app.kubernetes.io/name: amazon-network-policy-controller-k8s
    name: eks:network-policy-controller
    resourceVersion: "295"
    uid: 2ad66553-cb3b-4cec-927c-dc30215de9ae
  rules:
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.aws
    resources:
    - policyendpoints
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - networking.k8s.aws
    resources:
    - policyendpoints/finalizers
    verbs:
    - update
  - apiGroups:
    - networking.k8s.aws
    resources:
    - policyendpoints/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - networking.k8s.io
    resources:
    - networkpolicies
    verbs:
    - get
    - list
    - patch
    - update
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"eks:network-webhooks"},"rules":[{"apiGroups":[""],"resources":["services"],"verbs":["get","list","watch"]},{"apiGroups":["eks.amazonaws.com"],"resources":["targetgroupbindings"],"verbs":["get","list","watch"]}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:network-webhooks
    resourceVersion: "244"
    uid: 2d0b6b26-4b74-4b36-91a3-a658d3f419d7
  rules:
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - eks.amazonaws.com
    resources:
    - targetgroupbindings
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"labels":{"eks.amazonaws.com/component":"node"},"name":"eks:node-bootstrapper"},"rules":[{"apiGroups":["certificates.k8s.io"],"resources":["certificatesigningrequests/selfnodeserver"],"verbs":["create"]}]}
    creationTimestamp: "2025-06-28T18:07:16Z"
    labels:
      eks.amazonaws.com/component: node
    name: eks:node-bootstrapper
    resourceVersion: "286"
    uid: eac9076c-6c42-4cd5-b186-4e55965f73fb
  rules:
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests/selfnodeserver
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"eks:node-manager"},"rules":[{"apiGroups":[""],"resources":["pods"],"verbs":["get","list","watch","delete"]},{"apiGroups":[""],"resources":["nodes"],"verbs":["get","list","watch","patch"]},{"apiGroups":[""],"resources":["pods/eviction"],"verbs":["create"]},{"apiGroups":["apps"],"resourceNames":["aws-node"],"resources":["daemonsets"],"verbs":["get"]},{"apiGroups":[""],"resources":["events"],"verbs":["list"]}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:node-manager
    resourceVersion: "211"
    uid: a4d0f326-f7b5-4d4b-a143-9b3155d483c5
  rules:
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
    - list
    - watch
    - delete
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
    - patch
  - apiGroups:
    - ""
    resources:
    - pods/eviction
    verbs:
    - create
  - apiGroups:
    - apps
    resourceNames:
    - aws-node
    resources:
    - daemonsets
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - list
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"eks:nodewatcher"},"rules":[{"apiGroups":[""],"resources":["nodes"],"verbs":["get","watch","list"]}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:nodewatcher
    resourceVersion: "246"
    uid: a6d35deb-864f-4a5a-9857-97058b1a654f
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - watch
    - list
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"eks:pod-identity-mutating-webhook"},"rules":[{"apiGroups":[""],"resources":["serviceaccounts"],"verbs":["get","watch","list"]}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:pod-identity-mutating-webhook
    resourceVersion: "248"
    uid: 914bd598-5295-4ff4-832d-ae0e37f5d02d
  rules:
  - apiGroups:
    - ""
    resources:
    - serviceaccounts
    verbs:
    - get
    - watch
    - list
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"eks:service-operations"},"rules":[{"nonResourceURLs":["/healthz*","/readyz*","/metrics*","/debug/api_priority_and_fairness/*"],"verbs":["get"]},{"apiGroups":[""],"resources":["endpoints","persistentvolumeclaims","persistentvolumeclaims/status","pods","replicationcontrollers","replicationcontrollers/scale","serviceaccounts","services","services/status","bindings","events","limitranges","namespaces/status","pods/status","replicationcontrollers/status","resourcequotas","resourcequotas/status","namespaces","nodes","nodes/status"],"verbs":["get","list","watch"]},{"apiGroups":["events.k8s.io"],"resources":["events"],"verbs":["get","list","watch"]},{"apiGroups":["discovery.k8s.io"],"resources":["*"],"verbs":["get","list","watch"]},{"apiGroups":["apps"],"resources":["*"],"verbs":["get","list","watch"]},{"apiGroups":["autoscaling"],"resources":["*"],"verbs":["get","list","watch"]},{"apiGroups":["batch"],"resources":["*"],"verbs":["get","list","watch"]},{"apiGroups":["extensions"],"resources":["*"],"verbs":["get","list","watch"]},{"apiGroups":["policy"],"resources":["*"],"verbs":["get","list","watch"]},{"apiGroups":["networking.k8s.io"],"resources":["*"],"verbs":["get","list","watch"]},{"apiGroups":["coordination.k8s.io"],"resources":["*"],"verbs":["get","list","watch"]},{"apiGroups":["rbac.authorization.k8s.io"],"resources":["*"],"verbs":["get","list","watch"]},{"apiGroups":["storage.k8s.io"],"resources":["*"],"verbs":["get","list","watch"]},{"apiGroups":["certificates.k8s.io"],"resources":["*"],"verbs":["get","list","watch"]},{"apiGroups":["admissionregistration.k8s.io"],"resources":["*"],"verbs":["get","list","watch"]},{"apiGroups":["apiextensions.k8s.io"],"resources":["*"],"verbs":["get","list","watch"]},{"apiGroups":["apiregistration.k8s.io"],"resources":["*"],"verbs":["get","list","watch"]},{"apiGroups":["policy"],"resources":["podsecuritypolicies"],"verbs":["get","list","watch"]},{"apiGroups":["node.k8s.io"],"resources":["*"],"verbs":["get","list","watch"]},{"apiGroups":["flowcontrol.apiserver.k8s.io"],"resources":["*"],"verbs":["get","list","watch"]},{"apiGroups":["scheduling.k8s.io"],"resources":["*"],"verbs":["get","list"]},{"apiGroups":["crd.k8s.amazonaws.com"],"resources":["eniconfigs"],"verbs":["get","list","watch"]},{"apiGroups":["vpcresources.k8s.aws"],"resources":["securitygrouppolicies","cninodes"],"verbs":["get","list","watch"]},{"apiGroups":["networking.k8s.aws"],"resources":["policyendpoints"],"verbs":["get","list","watch"]}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:service-operations
    resourceVersion: "250"
    uid: ae62757d-7593-4ad9-975a-ae6900c9af6b
  rules:
  - nonResourceURLs:
    - /healthz*
    - /readyz*
    - /metrics*
    - /debug/api_priority_and_fairness/*
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - endpoints
    - persistentvolumeclaims
    - persistentvolumeclaims/status
    - pods
    - replicationcontrollers
    - replicationcontrollers/scale
    - serviceaccounts
    - services
    - services/status
    - bindings
    - events
    - limitranges
    - namespaces/status
    - pods/status
    - replicationcontrollers/status
    - resourcequotas
    - resourcequotas/status
    - namespaces
    - nodes
    - nodes/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - events.k8s.io
    resources:
    - events
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - discovery.k8s.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - autoscaling
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - batch
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - coordination.k8s.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - rbac.authorization.k8s.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - certificates.k8s.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - admissionregistration.k8s.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apiextensions.k8s.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apiregistration.k8s.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - podsecuritypolicies
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - node.k8s.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - flowcontrol.apiserver.k8s.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - scheduling.k8s.io
    resources:
    - '*'
    verbs:
    - get
    - list
  - apiGroups:
    - crd.k8s.amazonaws.com
    resources:
    - eniconfigs
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - vpcresources.k8s.aws
    resources:
    - securitygrouppolicies
    - cninodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.aws
    resources:
    - policyendpoints
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"eks:tagging-controller"},"rules":[{"apiGroups":[""],"resources":["nodes"],"verbs":["get","patch"]}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:tagging-controller
    resourceVersion: "256"
    uid: 7a52c2f8-15f3-4231-84db-233ba2953785
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - patch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      meta.helm.sh/release-name: ingress-nginx
      meta.helm.sh/release-namespace: ingress-nginx
    creationTimestamp: "2025-06-28T18:20:32Z"
    labels:
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
      app.kubernetes.io/version: 1.12.3
      helm.sh/chart: ingress-nginx-4.12.3
    name: ingress-nginx
    resourceVersion: "2847"
    uid: 6f4acb1c-2f33-4b46-b6e4-5c51862425c9
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    - endpoints
    - nodes
    - pods
    - secrets
    - namespaces
    verbs:
    - list
    - watch
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses/status
    verbs:
    - update
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingressclasses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - list
    - watch
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:13Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
      rbac.authorization.k8s.io/aggregate-to-admin: "true"
    name: system:aggregate-to-admin
    resourceVersion: "81"
    uid: dbf86425-43c5-4048-912c-b68012798474
  rules:
  - apiGroups:
    - authorization.k8s.io
    resources:
    - localsubjectaccessreviews
    verbs:
    - create
  - apiGroups:
    - rbac.authorization.k8s.io
    resources:
    - rolebindings
    - roles
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:13Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
      rbac.authorization.k8s.io/aggregate-to-edit: "true"
    name: system:aggregate-to-edit
    resourceVersion: "82"
    uid: c5ed7ee7-d583-45d4-8b57-03eacb8c9cb2
  rules:
  - apiGroups:
    - ""
    resources:
    - pods/attach
    - pods/exec
    - pods/portforward
    - pods/proxy
    - secrets
    - services/proxy
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - serviceaccounts
    verbs:
    - impersonate
  - apiGroups:
    - ""
    resources:
    - pods
    - pods/attach
    - pods/exec
    - pods/portforward
    - pods/proxy
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods/eviction
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - configmaps
    - events
    - persistentvolumeclaims
    - replicationcontrollers
    - replicationcontrollers/scale
    - secrets
    - serviceaccounts
    - services
    - services/proxy
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - serviceaccounts/token
    verbs:
    - create
  - apiGroups:
    - apps
    resources:
    - daemonsets
    - deployments
    - deployments/rollback
    - deployments/scale
    - replicasets
    - replicasets/scale
    - statefulsets
    - statefulsets/scale
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - jobs
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    - deployments
    - deployments/rollback
    - deployments/scale
    - ingresses
    - networkpolicies
    - replicasets
    - replicasets/scale
    - replicationcontrollers/scale
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    - networkpolicies
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:13Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
      rbac.authorization.k8s.io/aggregate-to-view: "true"
    name: system:aggregate-to-view
    resourceVersion: "83"
    uid: 40a46ead-40da-4b38-a340-7a3554fe8f86
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    - endpoints
    - persistentvolumeclaims
    - persistentvolumeclaims/status
    - pods
    - replicationcontrollers
    - replicationcontrollers/scale
    - serviceaccounts
    - services
    - services/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - bindings
    - events
    - limitranges
    - namespaces/status
    - pods/log
    - pods/status
    - replicationcontrollers/status
    - resourcequotas
    - resourcequotas/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - controllerrevisions
    - daemonsets
    - daemonsets/status
    - deployments
    - deployments/scale
    - deployments/status
    - replicasets
    - replicasets/scale
    - replicasets/status
    - statefulsets
    - statefulsets/scale
    - statefulsets/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    - horizontalpodautoscalers/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - cronjobs/status
    - jobs
    - jobs/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    - daemonsets/status
    - deployments
    - deployments/scale
    - deployments/status
    - ingresses
    - ingresses/status
    - networkpolicies
    - replicasets
    - replicasets/scale
    - replicasets/status
    - replicationcontrollers/scale
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    - poddisruptionbudgets/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    - ingresses/status
    - networkpolicies
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:13Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:auth-delegator
    resourceVersion: "89"
    uid: fdc495a6-966a-4779-88c7-d56d71361688
  rules:
  - apiGroups:
    - authentication.k8s.io
    resources:
    - tokenreviews
    verbs:
    - create
  - apiGroups:
    - authorization.k8s.io
    resources:
    - subjectaccessreviews
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:13Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:basic-user
    resourceVersion: "76"
    uid: 76b9920c-5bc1-4dc2-babf-4ef1e0ef3cb7
  rules:
  - apiGroups:
    - authorization.k8s.io
    resources:
    - selfsubjectaccessreviews
    - selfsubjectrulesreviews
    verbs:
    - create
  - apiGroups:
    - authentication.k8s.io
    resources:
    - selfsubjectreviews
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:13Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:certificates.k8s.io:certificatesigningrequests:nodeclient
    resourceVersion: "94"
    uid: f0d3f144-e828-432d-8542-8cc606c2d22a
  rules:
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests/nodeclient
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:13Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:certificates.k8s.io:certificatesigningrequests:selfnodeclient
    resourceVersion: "95"
    uid: aace31b7-e2a2-4900-bbe5-5719c1987403
  rules:
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests/selfnodeclient
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:13Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:certificates.k8s.io:kube-apiserver-client-approver
    resourceVersion: "102"
    uid: d026c887-c645-4ab7-8ad9-8ebe9d13aecd
  rules:
  - apiGroups:
    - certificates.k8s.io
    resourceNames:
    - kubernetes.io/kube-apiserver-client
    resources:
    - signers
    verbs:
    - approve
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:13Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:certificates.k8s.io:kube-apiserver-client-kubelet-approver
    resourceVersion: "103"
    uid: c2e5b301-6fe1-436f-b4f6-a7602e3d8179
  rules:
  - apiGroups:
    - certificates.k8s.io
    resourceNames:
    - kubernetes.io/kube-apiserver-client-kubelet
    resources:
    - signers
    verbs:
    - approve
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:13Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:certificates.k8s.io:kubelet-serving-approver
    resourceVersion: "101"
    uid: 07349368-6825-49e5-86d4-72deab3cd0a7
  rules:
  - apiGroups:
    - certificates.k8s.io
    resourceNames:
    - kubernetes.io/kubelet-serving
    resources:
    - signers
    verbs:
    - approve
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:13Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:certificates.k8s.io:legacy-unknown-approver
    resourceVersion: "100"
    uid: 89e97bc2-4abe-4cde-9ac5-92da55d30524
  rules:
  - apiGroups:
    - certificates.k8s.io
    resourceNames:
    - kubernetes.io/legacy-unknown
    resources:
    - signers
    verbs:
    - approve
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:13Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:attachdetach-controller
    resourceVersion: "107"
    uid: 61f84dd2-b923-4254-99a1-5dbc26385ad5
  rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    - persistentvolumes
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
  - apiGroups:
    - storage.k8s.io
    resources:
    - volumeattachments
    verbs:
    - create
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - csidrivers
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - csinodes
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:certificate-controller
    resourceVersion: "133"
    uid: e464b290-9e0e-4584-8f76-8db5a55732f8
  rules:
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests
    verbs:
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests/approval
    - certificatesigningrequests/status
    verbs:
    - update
  - apiGroups:
    - certificates.k8s.io
    resourceNames:
    - kubernetes.io/kube-apiserver-client-kubelet
    resources:
    - signers
    verbs:
    - approve
  - apiGroups:
    - certificates.k8s.io
    resourceNames:
    - kubernetes.io/kube-apiserver-client
    - kubernetes.io/kube-apiserver-client-kubelet
    - kubernetes.io/kubelet-serving
    - kubernetes.io/legacy-unknown
    resources:
    - signers
    verbs:
    - sign
  - apiGroups:
    - authorization.k8s.io
    resources:
    - subjectaccessreviews
    verbs:
    - create
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:clusterrole-aggregation-controller
    resourceVersion: "108"
    uid: e6e7beb3-b4f8-429c-936c-a5a2b2e40e14
  rules:
  - apiGroups:
    - rbac.authorization.k8s.io
    resources:
    - clusterroles
    verbs:
    - escalate
    - get
    - list
    - patch
    - update
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:cronjob-controller
    resourceVersion: "109"
    uid: 2751af5d-5036-417a-81f1-9387e53b8e67
  rules:
  - apiGroups:
    - batch
    resources:
    - cronjobs
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - batch
    resources:
    - jobs
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - batch
    resources:
    - cronjobs/status
    verbs:
    - update
  - apiGroups:
    - batch
    resources:
    - cronjobs/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - delete
    - list
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:daemon-set-controller
    resourceVersion: "110"
    uid: dd41367e-f6f1-44c8-9dc5-9a01d20fa311
  rules:
  - apiGroups:
    - apps
    - extensions
    resources:
    - daemonsets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    - extensions
    resources:
    - daemonsets/status
    verbs:
    - update
  - apiGroups:
    - apps
    - extensions
    resources:
    - daemonsets/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - delete
    - list
    - patch
    - watch
  - apiGroups:
    - ""
    resources:
    - pods/binding
    verbs:
    - create
  - apiGroups:
    - apps
    resources:
    - controllerrevisions
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:deployment-controller
    resourceVersion: "111"
    uid: ce544754-4ed0-4d31-b0b9-bc29dbb647ad
  rules:
  - apiGroups:
    - apps
    - extensions
    resources:
    - deployments
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - apps
    - extensions
    resources:
    - deployments/status
    verbs:
    - update
  - apiGroups:
    - apps
    - extensions
    resources:
    - deployments/finalizers
    verbs:
    - update
  - apiGroups:
    - apps
    - extensions
    resources:
    - replicasets
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:disruption-controller
    resourceVersion: "112"
    uid: e9282d87-fc61-4f2a-af1d-cad6bd2cca69
  rules:
  - apiGroups:
    - apps
    - extensions
    resources:
    - deployments
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    - extensions
    resources:
    - replicasets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - replicationcontrollers
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - statefulsets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets/status
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - pods/status
    verbs:
    - patch
    - update
  - apiGroups:
    - '*'
    resources:
    - '*/scale'
    verbs:
    - get
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:endpoint-controller
    resourceVersion: "113"
    uid: fd59b1e2-f1fb-4866-9cab-1575a5b4e5e9
  rules:
  - apiGroups:
    - ""
    resources:
    - pods
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - endpoints
    verbs:
    - create
    - delete
    - get
    - list
    - update
  - apiGroups:
    - ""
    resources:
    - endpoints/restricted
    verbs:
    - create
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:endpointslice-controller
    resourceVersion: "114"
    uid: f1e82ea4-3ec3-4634-9db5-1730dd23ccb8
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    - pods
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - services/finalizers
    verbs:
    - update
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - create
    - delete
    - get
    - list
    - update
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:endpointslicemirroring-controller
    resourceVersion: "115"
    uid: b27159e2-88b9-4ae3-b981-82377dc1c894
  rules:
  - apiGroups:
    - ""
    resources:
    - endpoints
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - services/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - endpoints/finalizers
    verbs:
    - update
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - create
    - delete
    - get
    - list
    - update
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:ephemeral-volume-controller
    resourceVersion: "117"
    uid: eff1179b-d96e-4bc3-83f2-2c1bf8c0c914
  rules:
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - pods/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - create
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:expand-controller
    resourceVersion: "116"
    uid: a58c9ad3-391d-4ae0-949f-c2e8fc5a676a
  rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumes
    verbs:
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - storageclasses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - endpoints
    - services
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - get
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:generic-garbage-collector
    resourceVersion: "118"
    uid: b4cbb13a-4cde-4f59-8743-4bfa363ad2ae
  rules:
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs:
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:horizontal-pod-autoscaler
    resourceVersion: "119"
    uid: e091a60f-4e53-463e-9ab8-795b4ae2c479
  rules:
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers/status
    verbs:
    - update
  - apiGroups:
    - '*'
    resources:
    - '*/scale'
    verbs:
    - get
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - list
  - apiGroups:
    - metrics.k8s.io
    resources:
    - pods
    verbs:
    - list
  - apiGroups:
    - custom.metrics.k8s.io
    resources:
    - '*'
    verbs:
    - get
    - list
  - apiGroups:
    - external.metrics.k8s.io
    resources:
    - '*'
    verbs:
    - get
    - list
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:job-controller
    resourceVersion: "120"
    uid: 1bb0eaa5-cded-48ff-9e6b-de840111d0ba
  rules:
  - apiGroups:
    - batch
    resources:
    - jobs
    verbs:
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - batch
    resources:
    - jobs/status
    verbs:
    - update
  - apiGroups:
    - batch
    resources:
    - jobs/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - delete
    - list
    - patch
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:legacy-service-account-token-cleaner
    resourceVersion: "139"
    uid: 6e0c6673-0360-47db-b718-93bf046b7767
  rules:
  - apiGroups:
    - ""
    resourceNames:
    - kube-apiserver-legacy-service-account-token-tracking
    resources:
    - configmaps
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - delete
    - patch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:namespace-controller
    resourceVersion: "121"
    uid: 6645124e-5ab7-4980-b12b-94aad5828d2e
  rules:
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces/finalize
    - namespaces/status
    verbs:
    - update
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs:
    - delete
    - deletecollection
    - get
    - list
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:node-controller
    resourceVersion: "122"
    uid: 56096ad0-3c0b-4357-8aef-f338cd58c29a
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - delete
    - get
    - list
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - nodes/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - delete
    - get
    - list
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:persistent-volume-binder
    resourceVersion: "123"
    uid: 6f54f9e5-36ac-4de6-8b3f-b448039c7a3d
  rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumes
    verbs:
    - create
    - delete
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumes/status
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims/status
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - storageclasses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - endpoints
    verbs:
    - create
    - delete
    - get
    - update
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - create
    - delete
    - get
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:pod-garbage-collector
    resourceVersion: "124"
    uid: 85a25e14-90c0-4d28-a20f-278939f80705
  rules:
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - delete
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
  - apiGroups:
    - ""
    resources:
    - pods/status
    verbs:
    - patch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:pv-protection-controller
    resourceVersion: "135"
    uid: 627c17a8-9695-4c17-984f-a4f9f0afafe0
  rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumes
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:pvc-protection-controller
    resourceVersion: "134"
    uid: e6139937-bf0c-4e9e-b2b4-5623f94a1f71
  rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:replicaset-controller
    resourceVersion: "125"
    uid: 01984e41-c72c-4ddb-91b4-f39089676dfd
  rules:
  - apiGroups:
    - apps
    - extensions
    resources:
    - replicasets
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - apps
    - extensions
    resources:
    - replicasets/status
    verbs:
    - update
  - apiGroups:
    - apps
    - extensions
    resources:
    - replicasets/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - delete
    - list
    - patch
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:replication-controller
    resourceVersion: "126"
    uid: 6df9162c-f626-4003-8cc8-26f95e40618e
  rules:
  - apiGroups:
    - ""
    resources:
    - replicationcontrollers
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - replicationcontrollers/status
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - replicationcontrollers/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - delete
    - list
    - patch
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:resourcequota-controller
    resourceVersion: "127"
    uid: f3b4f4a2-b815-4c92-8e01-31d3d6827cbe
  rules:
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - resourcequotas/status
    verbs:
    - update
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:root-ca-cert-publisher
    resourceVersion: "137"
    uid: ade9cffc-4dcb-44b7-8ce1-bed29ef14c27
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - create
    - update
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:route-controller
    resourceVersion: "128"
    uid: 4773c7df-6211-429d-bb73-25365b4edd2d
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes/status
    verbs:
    - patch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:service-account-controller
    resourceVersion: "129"
    uid: 1cbe9da9-ba6a-4c33-ac56-cc232e1b009f
  rules:
  - apiGroups:
    - ""
    resources:
    - serviceaccounts
    verbs:
    - create
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:service-controller
    resourceVersion: "130"
    uid: 8302cd24-7cac-42a2-b6c1-68b380e525be
  rules:
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - services/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:statefulset-controller
    resourceVersion: "131"
    uid: bf34a5ff-ff51-47c1-8d50-ae64a1d0dbaf
  rules:
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - statefulsets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - statefulsets/status
    verbs:
    - update
  - apiGroups:
    - apps
    resources:
    - statefulsets/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - delete
    - get
    - patch
    - update
  - apiGroups:
    - apps
    resources:
    - controllerrevisions
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - create
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - delete
    - update
  - apiGroups:
    - ""
    resources:
    - pods/finalizers
    verbs:
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:ttl-after-finished-controller
    resourceVersion: "136"
    uid: becd218f-a0af-4a7e-806c-76d0fc9b9c64
  rules:
  - apiGroups:
    - batch
    resources:
    - jobs
    verbs:
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:ttl-controller
    resourceVersion: "132"
    uid: 91da64eb-91c6-449d-bb9a-2da91744db42
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:validatingadmissionpolicy-status-controller
    resourceVersion: "138"
    uid: 3d0c08b4-3fc2-4955-8281-473a56f3f4d3
  rules:
  - apiGroups:
    - admissionregistration.k8s.io
    resources:
    - validatingadmissionpolicies
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - admissionregistration.k8s.io
    resources:
    - validatingadmissionpolicies/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    creationTimestamp: "2025-06-28T18:09:31Z"
    labels:
      eks.amazonaws.com/component: coredns
      k8s-app: kube-dns
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:coredns
    resourceVersion: "682"
    uid: 84c966cf-2461-4c24-8052-a29b1691c74f
  rules:
  - apiGroups:
    - ""
    resources:
    - endpoints
    - services
    - pods
    - namespaces
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:13Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:discovery
    resourceVersion: "74"
    uid: a4c81e3c-018d-4a5e-b394-755b70dc8791
  rules:
  - nonResourceURLs:
    - /api
    - /api/*
    - /apis
    - /apis/*
    - /healthz
    - /livez
    - /openapi
    - /openapi/*
    - /readyz
    - /version
    - /version/
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:13Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:heapster
    resourceVersion: "84"
    uid: 81c319ce-ecb7-4bbc-9143-d4e59324c657
  rules:
  - apiGroups:
    - ""
    resources:
    - events
    - namespaces
    - nodes
    - pods
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    resources:
    - deployments
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:13Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:kube-aggregator
    resourceVersion: "90"
    uid: 383e925f-d14e-40c9-b0f6-b2467dc695ba
  rules:
  - apiGroups:
    - ""
    resources:
    - endpoints
    - services
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:13Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:kube-controller-manager
    resourceVersion: "91"
    uid: a470cbcd-d8c8-48b9-9822-0bac046e5767
  rules:
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
  - apiGroups:
    - coordination.k8s.io
    resourceNames:
    - kube-controller-manager
    resources:
    - leases
    verbs:
    - get
    - update
  - apiGroups:
    - ""
    resources:
    - secrets
    - serviceaccounts
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - delete
  - apiGroups:
    - ""
    resources:
    - configmaps
    - namespaces
    - secrets
    - serviceaccounts
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - secrets
    - serviceaccounts
    verbs:
    - update
  - apiGroups:
    - authentication.k8s.io
    resources:
    - tokenreviews
    verbs:
    - create
  - apiGroups:
    - authorization.k8s.io
    resources:
    - subjectaccessreviews
    verbs:
    - create
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - serviceaccounts/token
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:13Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:kube-dns
    resourceVersion: "92"
    uid: 4fdd5705-b3d6-4841-8c41-d160c95e66f4
  rules:
  - apiGroups:
    - ""
    resources:
    - endpoints
    - services
    verbs:
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:13Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:kube-scheduler
    resourceVersion: "106"
    uid: d210b1cd-a4e4-4e4b-b8a9-cf98d39b189f
  rules:
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
  - apiGroups:
    - coordination.k8s.io
    resourceNames:
    - kube-scheduler
    resources:
    - leases
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leasecandidates
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - bindings
    - pods/binding
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - pods/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - replicationcontrollers
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    - extensions
    resources:
    - replicasets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - statefulsets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    - persistentvolumes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - authentication.k8s.io
    resources:
    - tokenreviews
    verbs:
    - create
  - apiGroups:
    - authorization.k8s.io
    resources:
    - subjectaccessreviews
    verbs:
    - create
  - apiGroups:
    - storage.k8s.io
    resources:
    - csinodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - csidrivers
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - csistoragecapacities
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:13Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:kubelet-api-admin
    resourceVersion: "87"
    uid: a732b603-9859-4971-86b6-162b510b79a9
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - proxy
  - apiGroups:
    - ""
    resources:
    - nodes/log
    - nodes/metrics
    - nodes/proxy
    - nodes/stats
    verbs:
    - '*'
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:13Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:monitoring
    resourceVersion: "75"
    uid: f6fbe3fc-d82e-4bcc-a9b3-2a1222ab88e0
  rules:
  - nonResourceURLs:
    - /healthz
    - /healthz/*
    - /livez
    - /livez/*
    - /metrics
    - /metrics/slis
    - /readyz
    - /readyz/*
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:13Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:node
    resourceVersion: "85"
    uid: 338336fa-4b7b-46ed-bb2a-9e94b19567a2
  rules:
  - apiGroups:
    - authentication.k8s.io
    resources:
    - tokenreviews
    verbs:
    - create
  - apiGroups:
    - authorization.k8s.io
    resources:
    - localsubjectaccessreviews
    - subjectaccessreviews
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - create
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - delete
  - apiGroups:
    - ""
    resources:
    - pods/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods/eviction
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - configmaps
    - secrets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    - persistentvolumes
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - endpoints
    verbs:
    - get
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests
    verbs:
    - create
    - get
    - list
    - watch
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
    - delete
    - get
    - patch
    - update
  - apiGroups:
    - storage.k8s.io
    resources:
    - volumeattachments
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - serviceaccounts/token
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - storage.k8s.io
    resources:
    - csidrivers
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - csinodes
    verbs:
    - create
    - delete
    - get
    - patch
    - update
  - apiGroups:
    - node.k8s.io
    resources:
    - runtimeclasses
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:13Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:node-bootstrapper
    resourceVersion: "88"
    uid: 520f254c-016d-4cac-b8b9-f206eb645c00
  rules:
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests
    verbs:
    - create
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:13Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:node-problem-detector
    resourceVersion: "86"
    uid: 0d6eda04-a60a-448a-b2cf-70ce9676e459
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - nodes/status
    verbs:
    - patch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:13Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:node-proxier
    resourceVersion: "105"
    uid: d5a01229-804c-464f-8a61-aa67e6e38dca
  rules:
  - apiGroups:
    - ""
    resources:
    - endpoints
    - services
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:13Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:persistent-volume-provisioner
    resourceVersion: "93"
    uid: 91bda1f8-3dbb-419d-821c-309b8d14b895
  rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumes
    verbs:
    - create
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - storageclasses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:13Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:public-info-viewer
    resourceVersion: "77"
    uid: e9b1ef1f-6332-49a2-8dba-035b6da2ad16
  rules:
  - nonResourceURLs:
    - /healthz
    - /livez
    - /readyz
    - /version
    - /version/
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:13Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:service-account-issuer-discovery
    resourceVersion: "104"
    uid: 080ac719-bc25-4f9d-b07c-0b8321ebb0f9
  rules:
  - nonResourceURLs:
    - /.well-known/openid-configuration
    - /.well-known/openid-configuration/
    - /openid/v1/jwks
    - /openid/v1/jwks/
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:13Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:volume-scheduler
    resourceVersion: "97"
    uid: 21c3ffee-6bfd-4413-82ce-c15f858adbfc
  rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumes
    verbs:
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - storageclasses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - get
    - list
    - patch
    - update
    - watch
- aggregationRule:
    clusterRoleSelectors:
    - matchLabels:
        rbac.authorization.k8s.io/aggregate-to-view: "true"
  apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:13Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
      rbac.authorization.k8s.io/aggregate-to-edit: "true"
    name: view
    resourceVersion: "367"
    uid: 5470f8c6-96b2-4933-aee4-5241e636c04c
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    - endpoints
    - persistentvolumeclaims
    - persistentvolumeclaims/status
    - pods
    - replicationcontrollers
    - replicationcontrollers/scale
    - serviceaccounts
    - services
    - services/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - bindings
    - events
    - limitranges
    - namespaces/status
    - pods/log
    - pods/status
    - replicationcontrollers/status
    - resourcequotas
    - resourcequotas/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - controllerrevisions
    - daemonsets
    - daemonsets/status
    - deployments
    - deployments/scale
    - deployments/status
    - replicasets
    - replicasets/scale
    - replicasets/status
    - statefulsets
    - statefulsets/scale
    - statefulsets/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    - horizontalpodautoscalers/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - cronjobs/status
    - jobs
    - jobs/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    - daemonsets/status
    - deployments
    - deployments/scale
    - deployments/status
    - ingresses
    - ingresses/status
    - networkpolicies
    - replicasets
    - replicasets/scale
    - replicasets/status
    - replicationcontrollers/scale
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    - poddisruptionbudgets/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    - ingresses/status
    - networkpolicies
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"vpc-resource-controller-role"},"rules":[{"apiGroups":[""],"resources":["events"],"verbs":["create","update","patch"]},{"apiGroups":[""],"resources":["nodes"],"verbs":["get","list","watch"]},{"apiGroups":[""],"resources":["nodes/status"],"verbs":["get","patch"]},{"apiGroups":[""],"resources":["pods"],"verbs":["get","list","patch","watch"]},{"apiGroups":[""],"resources":["serviceaccounts"],"verbs":["get","list","watch"]},{"apiGroups":["crd.k8s.amazonaws.com"],"resources":["eniconfigs"],"verbs":["get","list","watch"]},{"apiGroups":["vpcresources.k8s.aws"],"resources":["securitygrouppolicies"],"verbs":["get","list","watch"]},{"apiGroups":["vpcresources.k8s.aws"],"resources":["cninodes"],"verbs":["create","get","list","patch","update","watch"]}]}
    creationTimestamp: "2025-06-28T18:07:17Z"
    name: vpc-resource-controller-role
    resourceVersion: "306"
    uid: 03ee5a8b-aa17-47b2-8d58-555259aa940d
  rules:
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - update
    - patch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes/status
    verbs:
    - get
    - patch
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
    - list
    - patch
    - watch
  - apiGroups:
    - ""
    resources:
    - serviceaccounts
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - crd.k8s.amazonaws.com
    resources:
    - eniconfigs
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - vpcresources.k8s.aws
    resources:
    - securitygrouppolicies
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - vpcresources.k8s.aws
    resources:
    - cninodes
    verbs:
    - create
    - get
    - list
    - patch
    - update
    - watch
kind: List
metadata:
  resourceVersion: ""
apiVersion: v1
items:
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    creationTimestamp: "2025-06-28T18:09:32Z"
    labels:
      app.kubernetes.io/instance: aws-vpc-cni
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: aws-node
      app.kubernetes.io/version: v1.19.0
      helm.sh/chart: aws-vpc-cni-1.19.0
      k8s-app: aws-node
    name: aws-node
    resourceVersion: "715"
    uid: 434af12b-208a-45da-833a-261bee922df6
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: aws-node
  subjects:
  - kind: ServiceAccount
    name: aws-node
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: cluster-admin
    resourceVersion: "140"
    uid: b6e0477d-77c3-4490-9b5f-fcb23c2c58a4
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: cluster-admin
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:masters
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    creationTimestamp: "2025-06-28T18:15:37Z"
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: eks-node-monitoring-agent
      app.kubernetes.io/managed-by: EKS
      app.kubernetes.io/name: eks-node-monitoring-agent
      app.kubernetes.io/version: 1.3.0
    name: eks-node-monitoring-agent
    resourceVersion: "1868"
    uid: 60f1e407-ebe2-43aa-9d2e-44bed756a608
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks-node-monitoring-agent
  subjects:
  - kind: ServiceAccount
    name: eks-node-monitoring-agent
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"eks:addon-cluster-admin"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"cluster-admin"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:addon-manager"}]}
    creationTimestamp: "2025-06-28T18:07:16Z"
    name: eks:addon-cluster-admin
    resourceVersion: "274"
    uid: e6936df5-4567-466b-b6d4-5a3010ed94f7
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: cluster-admin
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:addon-manager
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"eks:addon-manager"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"eks:addon-manager"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:addon-manager"}]}
    creationTimestamp: "2025-06-28T18:07:16Z"
    name: eks:addon-manager
    resourceVersion: "273"
    uid: 8c3545e4-7c5d-44ef-8247-a3d91ff1aeba
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks:addon-manager
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:addon-manager
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"eks:az-poller"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"eks:az-poller"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:az-poller"}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:az-poller
    resourceVersion: "219"
    uid: b5f8586e-1735-4654-897b-bc9e7f3ab47c
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks:az-poller
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:az-poller
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"eks:certificate-controller"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"system:controller:certificate-controller"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:certificate-controller"}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:certificate-controller
    resourceVersion: "224"
    uid: 279c698a-89be-4897-b440-39a45ba0993c
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:certificate-controller
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:certificate-controller
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"eks:certificate-controller-approver"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"eks:certificate-controller-approver"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:certificate-controller"}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:certificate-controller-approver
    resourceVersion: "225"
    uid: bb6488a2-7866-4838-a5d0-3922a1a9bc69
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks:certificate-controller-approver
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:certificate-controller
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"eks:certificate-controller-manager"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"eks:certificate-controller-manager"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:certificate-controller"}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:certificate-controller-manager
    resourceVersion: "223"
    uid: 6f87c5e0-5c9a-4580-bc3e-4ec9ebeabed3
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks:certificate-controller-manager
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:certificate-controller
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"eks:certificate-controller-signer"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"eks:certificate-controller-signer"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:certificate-controller"}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:certificate-controller-signer
    resourceVersion: "226"
    uid: 856ec93c-85a2-4c62-94d6-abe1a67a673f
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks:certificate-controller-signer
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:certificate-controller
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"eks:cloud-controller-manager"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"eks:cloud-controller-manager"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:cloud-controller-manager"}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:cloud-controller-manager
    resourceVersion: "214"
    uid: 8ffba039-5f5d-4595-89ae-f7f68a5e6e2e
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks:cloud-controller-manager
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:cloud-controller-manager
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"eks:cloud-provider-extraction-migration"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"eks:cloud-provider-extraction-migration"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"system:kube-controller-manager"}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:cloud-provider-extraction-migration
    resourceVersion: "254"
    uid: b1a0a0b2-b9ea-4af9-b494-b518953d4530
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks:cloud-provider-extraction-migration
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:kube-controller-manager
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"eks:cluster-event-watcher"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"eks:cluster-event-watcher"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:cluster-event-watcher"}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:cluster-event-watcher
    resourceVersion: "230"
    uid: 3f244507-8803-4c97-b1ee-f3c3c0daee9b
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks:cluster-event-watcher
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:cluster-event-watcher
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"eks:coredns-autoscaler"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"eks:coredns-autoscaler"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:coredns-autoscaler"}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:coredns-autoscaler
    resourceVersion: "233"
    uid: b16cddfd-7c87-414e-9cf5-d3b366fd4524
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks:coredns-autoscaler
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:coredns-autoscaler
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"eks:fargate-manager"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"eks:fargate-manager"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:fargate-manager"}]}
    creationTimestamp: "2025-06-28T18:07:16Z"
    name: eks:fargate-manager
    resourceVersion: "283"
    uid: 9807cf8b-0a2f-47b0-b28a-ba65c62097dc
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks:fargate-manager
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:fargate-manager
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"eks:fargate-scheduler"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"eks:fargate-scheduler"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:fargate-scheduler"}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:fargate-scheduler
    resourceVersion: "237"
    uid: 2d661954-c73a-48ec-8013-eadd35083d4f
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks:fargate-scheduler
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:fargate-scheduler
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"eks:k8s-metrics"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"eks:k8s-metrics"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:k8s-metrics"}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:k8s-metrics
    resourceVersion: "241"
    uid: 5d64a22b-ca79-470b-be8e-874030518d2b
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks:k8s-metrics
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:k8s-metrics
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"eks:kms-storage-migrator"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"eks:kms-storage-migrator"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:kms-storage-migrator"}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:kms-storage-migrator
    resourceVersion: "243"
    uid: 11b836c6-1b03-4928-be17-cb5db7323dee
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks:kms-storage-migrator
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:kms-storage-migrator
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    creationTimestamp: "2025-06-28T18:09:31Z"
    labels:
      eks.amazonaws.com/component: kube-proxy
      k8s-app: kube-proxy
    name: eks:kube-proxy
    resourceVersion: "672"
    uid: ec3c2021-deb7-407c-8fb7-e1d94a003cd2
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:node-proxier
  subjects:
  - kind: ServiceAccount
    name: kube-proxy
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"eks:kube-proxy-fargate"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"system:node-proxier"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"Group","name":"system:node-proxier"}]}
    creationTimestamp: "2025-06-28T18:07:16Z"
    name: eks:kube-proxy-fargate
    resourceVersion: "282"
    uid: 3cbf7732-5e73-4618-b221-8d05a1092424
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:node-proxier
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:node-proxier
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"labels":{"eks.amazonaws.com/component":"kube-proxy","k8s-app":"kube-proxy"},"name":"eks:kube-proxy-windows"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"system:node-proxier"},"subjects":[{"kind":"Group","name":"eks:kube-proxy-windows"}]}
    creationTimestamp: "2025-06-28T18:07:16Z"
    labels:
      eks.amazonaws.com/component: kube-proxy
      k8s-app: kube-proxy
    name: eks:kube-proxy-windows
    resourceVersion: "279"
    uid: 7fae6cac-1550-49f8-b89c-ab7a33307664
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:node-proxier
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: eks:kube-proxy-windows
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"rbac","app.kubernetes.io/created-by":"amazon-network-policy-controller-k8s","app.kubernetes.io/instance":"manager-rolebinding","app.kubernetes.io/name":"amazon-network-policy-controller-k8s","app.kubernetes.io/part-of":"amazon-network-policy-controller-k8s"},"name":"eks:network-policy-controller"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"eks:network-policy-controller"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:network-policy-controller"}]}
    creationTimestamp: "2025-06-28T18:07:17Z"
    labels:
      app.kubernetes.io/component: rbac
      app.kubernetes.io/created-by: amazon-network-policy-controller-k8s
      app.kubernetes.io/instance: manager-rolebinding
      app.kubernetes.io/name: amazon-network-policy-controller-k8s
      app.kubernetes.io/part-of: amazon-network-policy-controller-k8s
    name: eks:network-policy-controller
    resourceVersion: "297"
    uid: 4c61984e-7110-4975-8f71-c57263b988de
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks:network-policy-controller
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:network-policy-controller
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"eks:network-webhooks"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"eks:network-webhooks"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:network-webhooks"}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:network-webhooks
    resourceVersion: "245"
    uid: c0d6c2df-a291-447a-9bc6-aff02a099aa0
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks:network-webhooks
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:network-webhooks
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"labels":{"eks.amazonaws.com/component":"node"},"name":"eks:node-bootstrapper"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"eks:node-bootstrapper"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"Group","name":"system:bootstrappers"},{"apiGroup":"rbac.authorization.k8s.io","kind":"Group","name":"system:nodes"}]}
    creationTimestamp: "2025-06-28T18:07:16Z"
    labels:
      eks.amazonaws.com/component: node
    name: eks:node-bootstrapper
    resourceVersion: "285"
    uid: 4c404076-e6ef-4b8a-a6b9-a771901f7b06
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks:node-bootstrapper
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:bootstrappers
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:nodes
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"eks:node-manager"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"eks:node-manager"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:node-manager"}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:node-manager
    resourceVersion: "212"
    uid: e312555c-72e8-4dd1-b5e6-14db2508912f
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks:node-manager
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:node-manager
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"eks:nodewatcher"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"eks:nodewatcher"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:nodewatcher"}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:nodewatcher
    resourceVersion: "247"
    uid: 6fc6d6d7-1e40-4cf8-97b9-70a5c8e573a8
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks:nodewatcher
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:nodewatcher
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"eks:pod-identity-mutating-webhook"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"eks:pod-identity-mutating-webhook"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:pod-identity-mutating-webhook"}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:pod-identity-mutating-webhook
    resourceVersion: "249"
    uid: b3109144-a571-4730-8d40-e9e300675373
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks:pod-identity-mutating-webhook
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:pod-identity-mutating-webhook
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"eks:service-operations"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"eks:service-operations"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"Group","name":"eks:service-operations"}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:service-operations
    resourceVersion: "251"
    uid: 1c2afe72-a5c5-4356-99f4-2e5a235f18ee
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks:service-operations
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: eks:service-operations
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"eks:tagging-controller"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"eks:tagging-controller"},"subjects":[{"kind":"ServiceAccount","name":"tagging-controller","namespace":"kube-system"}]}
    creationTimestamp: "2025-06-28T18:07:15Z"
    name: eks:tagging-controller
    resourceVersion: "257"
    uid: d71e65f2-29f8-406b-bdd7-3faae08dc027
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks:tagging-controller
  subjects:
  - kind: ServiceAccount
    name: tagging-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      meta.helm.sh/release-name: ingress-nginx
      meta.helm.sh/release-namespace: ingress-nginx
    creationTimestamp: "2025-06-28T18:20:32Z"
    labels:
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
      app.kubernetes.io/version: 1.12.3
      helm.sh/chart: ingress-nginx-4.12.3
    name: ingress-nginx
    resourceVersion: "2848"
    uid: 20363642-bb45-4c05-a1b4-f99ef5fe6e30
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: ingress-nginx
  subjects:
  - kind: ServiceAccount
    name: ingress-nginx
    namespace: ingress-nginx
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:basic-user
    resourceVersion: "143"
    uid: 4dc98325-9fe8-46e3-a0df-5e0f929b1eba
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:basic-user
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:authenticated
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:attachdetach-controller
    resourceVersion: "152"
    uid: 09e6b7dc-9813-413e-b2e3-36ebe7d80009
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:attachdetach-controller
  subjects:
  - kind: ServiceAccount
    name: attachdetach-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:certificate-controller
    resourceVersion: "178"
    uid: 358cd099-91fd-477e-8515-39d20670a198
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:certificate-controller
  subjects:
  - kind: ServiceAccount
    name: certificate-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:clusterrole-aggregation-controller
    resourceVersion: "153"
    uid: 29188afd-0838-4f43-bf85-10a26c9902da
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:clusterrole-aggregation-controller
  subjects:
  - kind: ServiceAccount
    name: clusterrole-aggregation-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:cronjob-controller
    resourceVersion: "154"
    uid: 58bf7dd1-b6fd-4e49-a009-95e75e53e9e1
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:cronjob-controller
  subjects:
  - kind: ServiceAccount
    name: cronjob-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:daemon-set-controller
    resourceVersion: "155"
    uid: 5f2b4800-86f3-49d9-a249-c0a850b2594e
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:daemon-set-controller
  subjects:
  - kind: ServiceAccount
    name: daemon-set-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:deployment-controller
    resourceVersion: "156"
    uid: 71c73832-8727-494a-9423-517ecfa01a8a
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:deployment-controller
  subjects:
  - kind: ServiceAccount
    name: deployment-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:disruption-controller
    resourceVersion: "157"
    uid: 80546452-8e70-4024-8bd9-54b955cfc8fa
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:disruption-controller
  subjects:
  - kind: ServiceAccount
    name: disruption-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:endpoint-controller
    resourceVersion: "158"
    uid: a870b0f5-0fae-4925-abea-9aead4a988d7
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:endpoint-controller
  subjects:
  - kind: ServiceAccount
    name: endpoint-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:endpointslice-controller
    resourceVersion: "159"
    uid: 5e2bf118-c0b5-4e62-abe3-5057cbed9625
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:endpointslice-controller
  subjects:
  - kind: ServiceAccount
    name: endpointslice-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:endpointslicemirroring-controller
    resourceVersion: "160"
    uid: 1eed26d7-ebd2-4597-bb19-297b9a6f5c60
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:endpointslicemirroring-controller
  subjects:
  - kind: ServiceAccount
    name: endpointslicemirroring-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:ephemeral-volume-controller
    resourceVersion: "162"
    uid: abc6dd35-a3ab-472b-aac5-936e7acdacc9
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:ephemeral-volume-controller
  subjects:
  - kind: ServiceAccount
    name: ephemeral-volume-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:expand-controller
    resourceVersion: "161"
    uid: 071da102-2bad-4c9a-920f-3e83a6448684
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:expand-controller
  subjects:
  - kind: ServiceAccount
    name: expand-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:generic-garbage-collector
    resourceVersion: "163"
    uid: 4bee921d-fd48-45d1-8ed1-98144af69622
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:generic-garbage-collector
  subjects:
  - kind: ServiceAccount
    name: generic-garbage-collector
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:horizontal-pod-autoscaler
    resourceVersion: "164"
    uid: 64f1d243-335f-4faa-8928-a5e51b161b37
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:horizontal-pod-autoscaler
  subjects:
  - kind: ServiceAccount
    name: horizontal-pod-autoscaler
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:job-controller
    resourceVersion: "165"
    uid: f2b7df9e-3c05-4d53-b3d7-71904bb1fee8
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:job-controller
  subjects:
  - kind: ServiceAccount
    name: job-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:legacy-service-account-token-cleaner
    resourceVersion: "184"
    uid: 971d3fb4-6f7a-4ac0-a4b3-7977279cc269
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:legacy-service-account-token-cleaner
  subjects:
  - kind: ServiceAccount
    name: legacy-service-account-token-cleaner
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:namespace-controller
    resourceVersion: "166"
    uid: 316d19b7-de50-4ad1-bc7e-8eed7d20e0f3
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:namespace-controller
  subjects:
  - kind: ServiceAccount
    name: namespace-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:node-controller
    resourceVersion: "167"
    uid: 60cc67bb-ba80-41fc-8243-509ce4e16bec
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:node-controller
  subjects:
  - kind: ServiceAccount
    name: node-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:persistent-volume-binder
    resourceVersion: "168"
    uid: cb83558c-f6de-4e09-b97a-d677b29a39ac
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:persistent-volume-binder
  subjects:
  - kind: ServiceAccount
    name: persistent-volume-binder
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:pod-garbage-collector
    resourceVersion: "169"
    uid: 0b33ee38-8a0b-47d4-8052-bac03296646f
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:pod-garbage-collector
  subjects:
  - kind: ServiceAccount
    name: pod-garbage-collector
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:pv-protection-controller
    resourceVersion: "180"
    uid: 6d78c663-8723-493e-852a-50cad67bdb11
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:pv-protection-controller
  subjects:
  - kind: ServiceAccount
    name: pv-protection-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:pvc-protection-controller
    resourceVersion: "179"
    uid: 9d6ae1d1-f6f2-4c57-85a1-c8049dd026f8
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:pvc-protection-controller
  subjects:
  - kind: ServiceAccount
    name: pvc-protection-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:replicaset-controller
    resourceVersion: "170"
    uid: e6991b94-5438-4ed7-b49c-9e9200fe0ec7
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:replicaset-controller
  subjects:
  - kind: ServiceAccount
    name: replicaset-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:replication-controller
    resourceVersion: "171"
    uid: a5546c39-be7f-4664-9457-80f9874c7d01
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:replication-controller
  subjects:
  - kind: ServiceAccount
    name: replication-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:resourcequota-controller
    resourceVersion: "172"
    uid: 22c1ecfe-01b7-4b00-b03c-1c360c4a46a9
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:resourcequota-controller
  subjects:
  - kind: ServiceAccount
    name: resourcequota-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:root-ca-cert-publisher
    resourceVersion: "182"
    uid: e60b4f49-fe43-41fd-b5d0-2174f8979fa1
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:root-ca-cert-publisher
  subjects:
  - kind: ServiceAccount
    name: root-ca-cert-publisher
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:route-controller
    resourceVersion: "173"
    uid: 770fdd5e-7852-49e3-98f9-ebcc77e9e0ff
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:route-controller
  subjects:
  - kind: ServiceAccount
    name: route-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:service-account-controller
    resourceVersion: "174"
    uid: e257e78c-a7ca-4423-af55-86c6a8fac459
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:service-account-controller
  subjects:
  - kind: ServiceAccount
    name: service-account-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:service-controller
    resourceVersion: "175"
    uid: 7273e0f1-63e0-4722-93d9-e34c9b052614
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:service-controller
  subjects:
  - kind: ServiceAccount
    name: service-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:statefulset-controller
    resourceVersion: "176"
    uid: b20a3149-1a30-4f10-9831-a41c211ed727
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:statefulset-controller
  subjects:
  - kind: ServiceAccount
    name: statefulset-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:ttl-after-finished-controller
    resourceVersion: "181"
    uid: a00a029b-aee9-40a1-ae3e-fe96dd225119
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:ttl-after-finished-controller
  subjects:
  - kind: ServiceAccount
    name: ttl-after-finished-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:ttl-controller
    resourceVersion: "177"
    uid: dc86f007-5538-420b-a392-17f7ffd91215
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:ttl-controller
  subjects:
  - kind: ServiceAccount
    name: ttl-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:validatingadmissionpolicy-status-controller
    resourceVersion: "183"
    uid: b39f90a0-ed97-487f-ab19-4eaa8d6bff57
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:validatingadmissionpolicy-status-controller
  subjects:
  - kind: ServiceAccount
    name: validatingadmissionpolicy-status-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:09:31Z"
    labels:
      eks.amazonaws.com/component: coredns
      k8s-app: kube-dns
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:coredns
    resourceVersion: "684"
    uid: 3312b2df-65c9-4de7-b63c-82b5b92d31b5
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:coredns
  subjects:
  - kind: ServiceAccount
    name: coredns
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:discovery
    resourceVersion: "142"
    uid: 6e752142-52c5-4893-8ce9-46c72f39ea1a
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:discovery
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:authenticated
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:kube-controller-manager
    resourceVersion: "146"
    uid: 3c8b321f-7b33-48dc-8ae7-7cf7495737ab
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:kube-controller-manager
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:kube-controller-manager
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:kube-dns
    resourceVersion: "147"
    uid: d19b8f4a-6ef7-41da-95ac-09a40f6b1698
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:kube-dns
  subjects:
  - kind: ServiceAccount
    name: kube-dns
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:kube-scheduler
    resourceVersion: "148"
    uid: 8a94587b-c97c-4a45-9bf2-068e0c0fea41
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:kube-scheduler
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:kube-scheduler
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:monitoring
    resourceVersion: "141"
    uid: c017dcb9-60b7-451a-88b5-d7d4a0636094
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:monitoring
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:monitoring
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:node
    resourceVersion: "150"
    uid: afca2c90-7ac3-463b-a1ed-9f7d6e5bc918
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:node
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:node-proxier
    resourceVersion: "145"
    uid: 9cdec5fd-26f5-48cf-90bd-2936ff7d5321
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:node-proxier
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:kube-proxy
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:public-info-viewer
    resourceVersion: "144"
    uid: 67e36e6c-1164-4b05-bf99-1e954713b928
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:public-info-viewer
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:authenticated
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:unauthenticated
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:service-account-issuer-discovery
    resourceVersion: "151"
    uid: de9377f5-4468-4c82-8da3-6250c665abf3
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:service-account-issuer-discovery
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:serviceaccounts
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-06-28T18:07:14Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:volume-scheduler
    resourceVersion: "149"
    uid: 97642437-a5c9-49ea-a2ac-a769a5f3258b
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:volume-scheduler
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:kube-scheduler
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"vpc-resource-controller-rolebinding"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"vpc-resource-controller-role"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:vpc-resource-controller"}]}
    creationTimestamp: "2025-06-28T18:07:17Z"
    name: vpc-resource-controller-rolebinding
    resourceVersion: "307"
    uid: 8b45ccc6-e64c-427b-aecc-e1592aeb9381
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: vpc-resource-controller-role
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:vpc-resource-controller
kind: List
metadata:
  resourceVersion: ""
apiVersion: v1
items: []
kind: List
metadata:
  resourceVersion: ""
apiVersion: v1
items:
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.14.0
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.14.0"},"name":"cninodes.vpcresources.k8s.aws"},"spec":{"group":"vpcresources.k8s.aws","names":{"kind":"CNINode","listKind":"CNINodeList","plural":"cninodes","shortNames":["cnd"],"singular":"cninode"},"scope":"Cluster","versions":[{"additionalPrinterColumns":[{"description":"The features delegated to VPC resource controller","jsonPath":".spec.features","name":"Features","type":"string"}],"name":"v1alpha1","schema":{"openAPIV3Schema":{"properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"Important: Run \"make\" to regenerate code after modifying this file\nCNINodeSpec defines the desired state of CNINode","properties":{"features":{"items":{"description":"Feature is a type of feature being supported by VPC resource controller and other AWS Services","properties":{"name":{"description":"FeatureName is a type of feature name supported by AWS VPC CNI. It can be Security Group for Pods, custom networking, or others","type":"string"},"value":{"type":"string"}},"type":"object"},"type":"array"},"tags":{"additionalProperties":{"type":"string"},"description":"Additional tag key/value added to all network interfaces provisioned by the vpc-resource-controller and VPC-CNI","type":"object"}},"type":"object"},"status":{"description":"CNINodeStatus defines the managed VPC resources.","type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{}}]}}
    creationTimestamp: "2025-06-28T18:07:17Z"
    generation: 1
    name: cninodes.vpcresources.k8s.aws
    resourceVersion: "1617"
    uid: 38d23f9f-98fc-47f7-8170-4aa4a816b1e3
  spec:
    conversion:
      strategy: None
    group: vpcresources.k8s.aws
    names:
      kind: CNINode
      listKind: CNINodeList
      plural: cninodes
      shortNames:
      - cnd
      singular: cninode
    scope: Cluster
    versions:
    - additionalPrinterColumns:
      - description: The features delegated to VPC resource controller
        jsonPath: .spec.features
        name: Features
        type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: |-
                Important: Run "make" to regenerate code after modifying this file
                CNINodeSpec defines the desired state of CNINode
              properties:
                features:
                  items:
                    description: Feature is a type of feature being supported by VPC
                      resource controller and other AWS Services
                    properties:
                      name:
                        description: FeatureName is a type of feature name supported
                          by AWS VPC CNI. It can be Security Group for Pods, custom
                          networking, or others
                        type: string
                      value:
                        type: string
                    type: object
                  type: array
                tags:
                  additionalProperties:
                    type: string
                  description: Additional tag key/value added to all network interfaces
                    provisioned by the vpc-resource-controller and VPC-CNI
                  type: object
              type: object
            status:
              description: CNINodeStatus defines the managed VPC resources.
              type: object
          type: object
      served: true
      storage: true
      subresources: {}
  status:
    acceptedNames:
      kind: CNINode
      listKind: CNINodeList
      plural: cninodes
      shortNames:
      - cnd
      singular: cninode
    conditions:
    - lastTransitionTime: "2025-06-28T18:07:17Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2025-06-28T18:07:17Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2025-06-28T18:09:32Z"
    generation: 1
    name: eniconfigs.crd.k8s.amazonaws.com
    resourceVersion: "698"
    uid: 3f028cbd-1856-452c-8e49-0941d45ba47c
  spec:
    conversion:
      strategy: None
    group: crd.k8s.amazonaws.com
    names:
      kind: ENIConfig
      listKind: ENIConfigList
      plural: eniconfigs
      singular: eniconfig
    scope: Cluster
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ENIConfig is the Schema for the eniconfigs API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ENIConfigSpec defines the desired state of ENIConfig
              properties:
                securityGroups:
                  items:
                    type: string
                  type: array
                subnet:
                  type: string
              required:
              - subnet
              type: object
            status:
              description: ENIConfigStatus defines the observed state of ENIConfig
              type: object
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: true
  status:
    acceptedNames:
      kind: ENIConfig
      listKind: ENIConfigList
      plural: eniconfigs
      singular: eniconfig
    conditions:
    - lastTransitionTime: "2025-06-28T18:09:32Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2025-06-28T18:09:32Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.16.5
    creationTimestamp: "2025-06-28T18:15:37Z"
    generation: 1
    name: nodediagnostics.eks.amazonaws.com
    resourceVersion: "1919"
    uid: 355e3d82-e193-410d-b52b-d6907aefdea8
  spec:
    conversion:
      strategy: None
    group: eks.amazonaws.com
    names:
      kind: NodeDiagnostic
      listKind: NodeDiagnosticList
      plural: nodediagnostics
      singular: nodediagnostic
    scope: Cluster
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: |-
            The name of the NodeDiagnostic resource is meant to match the name of the
            node which should perform the diagnostic tasks
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              properties:
                logCapture:
                  description: |-
                    LogCapture is a definition for a diagnostic task that will package relevant
                    logs and stats into a tarball and deliver it to a provided destination.
                  properties:
                    categories:
                      default:
                      - All
                      description: Categories are log source groups for the LogCapture
                        task.
                      items:
                        description: |-
                          LogCategory is a grouping of log sources to read from when performing a
                          LogCapture task.
                        enum:
                        - Base
                        - Device
                        - Networking
                        - Runtime
                        - System
                        - All
                        type: string
                      type: array
                    destination:
                      description: UploadDestination is a URL describing where to
                        deliver a diagnostic artifact.
                      type: string
                  required:
                  - destination
                  type: object
              type: object
            status:
              properties:
                captureStatuses:
                  items:
                    description: CaptureStatus describes the type and state of a capture
                      task.
                    properties:
                      state:
                        properties:
                          completed:
                            properties:
                              finishedAt:
                                format: date-time
                                type: string
                              message:
                                type: string
                              reason:
                                type: string
                              startedAt:
                                format: date-time
                                type: string
                            required:
                            - finishedAt
                            - message
                            - reason
                            - startedAt
                            type: object
                          running:
                            properties:
                              startedAt:
                                format: date-time
                                type: string
                            required:
                            - startedAt
                            type: object
                        type: object
                      type:
                        description: The set of diagnostic tasks supported by the
                          NodeDiagnostic resource.
                        type: string
                    required:
                    - state
                    - type
                    type: object
                  type: array
                conditions:
                  items:
                    description: Condition aliases the upstream type and adds additional
                      helper methods
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: NodeDiagnostic
      listKind: NodeDiagnosticList
      plural: nodediagnostics
      singular: nodediagnostic
    conditions:
    - lastTransitionTime: "2025-06-28T18:15:37Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2025-06-28T18:15:37Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.11.3
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.11.3"},"creationTimestamp":null,"labels":{"app.kubernetes.io/name":"amazon-network-policy-controller-k8s"},"name":"policyendpoints.networking.k8s.aws"},"spec":{"group":"networking.k8s.aws","names":{"kind":"PolicyEndpoint","listKind":"PolicyEndpointList","plural":"policyendpoints","singular":"policyendpoint"},"scope":"Namespaced","versions":[{"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"PolicyEndpoint is the Schema for the policyendpoints API","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"PolicyEndpointSpec defines the desired state of PolicyEndpoint","properties":{"egress":{"description":"Egress is the list of egress rules containing resolved network addresses","items":{"description":"EndpointInfo defines the network endpoint information for the policy ingress/egress","properties":{"cidr":{"description":"CIDR is the network address(s) of the endpoint","type":"string"},"except":{"description":"Except is the exceptions to the CIDR ranges mentioned above.","items":{"type":"string"},"type":"array"},"ports":{"description":"Ports is the list of ports","items":{"description":"Port contains information about the transport port/protocol","properties":{"endPort":{"description":"Endport specifies the port range port to endPort port must be defined and an integer, endPort \u003e port","format":"int32","type":"integer"},"port":{"description":"Port specifies the numerical port for the protocol. If empty applies to all ports","format":"int32","type":"integer"},"protocol":{"default":"TCP","description":"Protocol specifies the transport protocol, default TCP","type":"string"}},"type":"object"},"type":"array"}},"required":["cidr"],"type":"object"},"type":"array"},"ingress":{"description":"Ingress is the list of ingress rules containing resolved network addresses","items":{"description":"EndpointInfo defines the network endpoint information for the policy ingress/egress","properties":{"cidr":{"description":"CIDR is the network address(s) of the endpoint","type":"string"},"except":{"description":"Except is the exceptions to the CIDR ranges mentioned above.","items":{"type":"string"},"type":"array"},"ports":{"description":"Ports is the list of ports","items":{"description":"Port contains information about the transport port/protocol","properties":{"endPort":{"description":"Endport specifies the port range port to endPort port must be defined and an integer, endPort \u003e port","format":"int32","type":"integer"},"port":{"description":"Port specifies the numerical port for the protocol. If empty applies to all ports","format":"int32","type":"integer"},"protocol":{"default":"TCP","description":"Protocol specifies the transport protocol, default TCP","type":"string"}},"type":"object"},"type":"array"}},"required":["cidr"],"type":"object"},"type":"array"},"podIsolation":{"description":"PodIsolation specifies whether the pod needs to be isolated for a particular traffic direction Ingress or Egress, or both. If default isolation is not specified, and there are no ingress/egress rules, then the pod is not isolated from the point of view of this policy. This follows the NetworkPolicy spec.PolicyTypes.","items":{"description":"PolicyType string describes the NetworkPolicy type This type is beta-level in 1.8","type":"string"},"type":"array"},"podSelector":{"description":"PodSelector is the podSelector from the policy resource","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object","x-kubernetes-map-type":"atomic"},"podSelectorEndpoints":{"description":"PodSelectorEndpoints contains information about the pods matching the podSelector","items":{"description":"PodEndpoint defines the summary information for the pods","properties":{"hostIP":{"description":"HostIP is the IP address of the host the pod is currently running on","type":"string"},"name":{"description":"Name is the pod name","type":"string"},"namespace":{"description":"Namespace is the pod namespace","type":"string"},"podIP":{"description":"PodIP is the IP address of the pod","type":"string"}},"required":["hostIP","name","namespace","podIP"],"type":"object"},"type":"array"},"policyRef":{"description":"PolicyRef is a reference to the Kubernetes NetworkPolicy resource.","properties":{"name":{"description":"Name is the name of the Policy","type":"string"},"namespace":{"description":"Namespace is the namespace of the Policy","type":"string"}},"required":["name","namespace"],"type":"object"}},"required":["policyRef"],"type":"object"},"status":{"description":"PolicyEndpointStatus defines the observed state of PolicyEndpoint","type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}}]}}
    creationTimestamp: "2025-06-28T18:07:17Z"
    generation: 1
    labels:
      app.kubernetes.io/name: amazon-network-policy-controller-k8s
    name: policyendpoints.networking.k8s.aws
    resourceVersion: "1613"
    uid: b27c1f32-5bcf-4ddc-a90f-ef8b9ad5f78d
  spec:
    conversion:
      strategy: None
    group: networking.k8s.aws
    names:
      kind: PolicyEndpoint
      listKind: PolicyEndpointList
      plural: policyendpoints
      singular: policyendpoint
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: PolicyEndpoint is the Schema for the policyendpoints API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: PolicyEndpointSpec defines the desired state of PolicyEndpoint
              properties:
                egress:
                  description: Egress is the list of egress rules containing resolved
                    network addresses
                  items:
                    description: EndpointInfo defines the network endpoint information
                      for the policy ingress/egress
                    properties:
                      cidr:
                        description: CIDR is the network address(s) of the endpoint
                        type: string
                      except:
                        description: Except is the exceptions to the CIDR ranges mentioned
                          above.
                        items:
                          type: string
                        type: array
                      ports:
                        description: Ports is the list of ports
                        items:
                          description: Port contains information about the transport
                            port/protocol
                          properties:
                            endPort:
                              description: Endport specifies the port range port to
                                endPort port must be defined and an integer, endPort
                                > port
                              format: int32
                              type: integer
                            port:
                              description: Port specifies the numerical port for the
                                protocol. If empty applies to all ports
                              format: int32
                              type: integer
                            protocol:
                              default: TCP
                              description: Protocol specifies the transport protocol,
                                default TCP
                              type: string
                          type: object
                        type: array
                    required:
                    - cidr
                    type: object
                  type: array
                ingress:
                  description: Ingress is the list of ingress rules containing resolved
                    network addresses
                  items:
                    description: EndpointInfo defines the network endpoint information
                      for the policy ingress/egress
                    properties:
                      cidr:
                        description: CIDR is the network address(s) of the endpoint
                        type: string
                      except:
                        description: Except is the exceptions to the CIDR ranges mentioned
                          above.
                        items:
                          type: string
                        type: array
                      ports:
                        description: Ports is the list of ports
                        items:
                          description: Port contains information about the transport
                            port/protocol
                          properties:
                            endPort:
                              description: Endport specifies the port range port to
                                endPort port must be defined and an integer, endPort
                                > port
                              format: int32
                              type: integer
                            port:
                              description: Port specifies the numerical port for the
                                protocol. If empty applies to all ports
                              format: int32
                              type: integer
                            protocol:
                              default: TCP
                              description: Protocol specifies the transport protocol,
                                default TCP
                              type: string
                          type: object
                        type: array
                    required:
                    - cidr
                    type: object
                  type: array
                podIsolation:
                  description: PodIsolation specifies whether the pod needs to be
                    isolated for a particular traffic direction Ingress or Egress,
                    or both. If default isolation is not specified, and there are
                    no ingress/egress rules, then the pod is not isolated from the
                    point of view of this policy. This follows the NetworkPolicy spec.PolicyTypes.
                  items:
                    description: PolicyType string describes the NetworkPolicy type
                      This type is beta-level in 1.8
                    type: string
                  type: array
                podSelector:
                  description: PodSelector is the podSelector from the policy resource
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                  x-kubernetes-map-type: atomic
                podSelectorEndpoints:
                  description: PodSelectorEndpoints contains information about the
                    pods matching the podSelector
                  items:
                    description: PodEndpoint defines the summary information for the
                      pods
                    properties:
                      hostIP:
                        description: HostIP is the IP address of the host the pod
                          is currently running on
                        type: string
                      name:
                        description: Name is the pod name
                        type: string
                      namespace:
                        description: Namespace is the pod namespace
                        type: string
                      podIP:
                        description: PodIP is the IP address of the pod
                        type: string
                    required:
                    - hostIP
                    - name
                    - namespace
                    - podIP
                    type: object
                  type: array
                policyRef:
                  description: PolicyRef is a reference to the Kubernetes NetworkPolicy
                    resource.
                  properties:
                    name:
                      description: Name is the name of the Policy
                      type: string
                    namespace:
                      description: Namespace is the namespace of the Policy
                      type: string
                  required:
                  - name
                  - namespace
                  type: object
              required:
              - policyRef
              type: object
            status:
              description: PolicyEndpointStatus defines the observed state of PolicyEndpoint
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: PolicyEndpoint
      listKind: PolicyEndpointList
      plural: policyendpoints
      singular: policyendpoint
    conditions:
    - lastTransitionTime: "2025-06-28T18:07:17Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2025-06-28T18:07:17Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.14.0
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.14.0"},"name":"securitygrouppolicies.vpcresources.k8s.aws"},"spec":{"group":"vpcresources.k8s.aws","names":{"kind":"SecurityGroupPolicy","listKind":"SecurityGroupPolicyList","plural":"securitygrouppolicies","shortNames":["sgp"],"singular":"securitygrouppolicy"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"description":"The security group IDs to apply to the elastic network interface of pods that match this policy","jsonPath":".spec.securityGroups.groupIds","name":"Security-Group-Ids","type":"string"}],"name":"v1beta1","schema":{"openAPIV3Schema":{"description":"Custom Resource Definition for applying security groups to pods","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"SecurityGroupPolicySpec defines the desired state of SecurityGroupPolicy","properties":{"podSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object","x-kubernetes-map-type":"atomic"},"securityGroups":{"description":"GroupIds contains the list of security groups that will be applied to the network interface of the pod matching the criteria.","properties":{"groupIds":{"description":"Groups is the list of EC2 Security Groups Ids that need to be applied to the ENI of a Pod.","items":{"type":"string"},"maxItems":5,"minItems":1,"type":"array"}},"type":"object"},"serviceAccountSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object","x-kubernetes-map-type":"atomic"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{}}]}}
    creationTimestamp: "2025-06-28T18:07:17Z"
    generation: 1
    name: securitygrouppolicies.vpcresources.k8s.aws
    resourceVersion: "1616"
    uid: 5daaef42-fe11-4a48-aa46-6fa3c4040369
  spec:
    conversion:
      strategy: None
    group: vpcresources.k8s.aws
    names:
      kind: SecurityGroupPolicy
      listKind: SecurityGroupPolicyList
      plural: securitygrouppolicies
      shortNames:
      - sgp
      singular: securitygrouppolicy
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: The security group IDs to apply to the elastic network interface
          of pods that match this policy
        jsonPath: .spec.securityGroups.groupIds
        name: Security-Group-Ids
        type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: Custom Resource Definition for applying security groups to
            pods
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: SecurityGroupPolicySpec defines the desired state of SecurityGroupPolicy
              properties:
                podSelector:
                  description: |-
                    A label selector is a label query over a set of resources. The result of matchLabels and
                    matchExpressions are ANDed. An empty label selector matches all objects. A null
                    label selector matches no objects.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: |-
                          A label selector requirement is a selector that contains values, a key, and an operator that
                          relates the key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: |-
                              operator represents a key's relationship to a set of values.
                              Valid operators are In, NotIn, Exists and DoesNotExist.
                            type: string
                          values:
                            description: |-
                              values is an array of string values. If the operator is In or NotIn,
                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                              the values array must be empty. This array is replaced during a strategic
                              merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: |-
                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                      type: object
                  type: object
                  x-kubernetes-map-type: atomic
                securityGroups:
                  description: GroupIds contains the list of security groups that
                    will be applied to the network interface of the pod matching the
                    criteria.
                  properties:
                    groupIds:
                      description: Groups is the list of EC2 Security Groups Ids that
                        need to be applied to the ENI of a Pod.
                      items:
                        type: string
                      maxItems: 5
                      minItems: 1
                      type: array
                  type: object
                serviceAccountSelector:
                  description: |-
                    A label selector is a label query over a set of resources. The result of matchLabels and
                    matchExpressions are ANDed. An empty label selector matches all objects. A null
                    label selector matches no objects.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: |-
                          A label selector requirement is a selector that contains values, a key, and an operator that
                          relates the key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: |-
                              operator represents a key's relationship to a set of values.
                              Valid operators are In, NotIn, Exists and DoesNotExist.
                            type: string
                          values:
                            description: |-
                              values is an array of string values. If the operator is In or NotIn,
                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                              the values array must be empty. This array is replaced during a strategic
                              merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: |-
                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                      type: object
                  type: object
                  x-kubernetes-map-type: atomic
              type: object
          type: object
      served: true
      storage: true
      subresources: {}
  status:
    acceptedNames:
      kind: SecurityGroupPolicy
      listKind: SecurityGroupPolicyList
      plural: securitygrouppolicies
      shortNames:
      - sgp
      singular: securitygrouppolicy
    conditions:
    - lastTransitionTime: "2025-06-28T18:07:17Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2025-06-28T18:07:17Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
kind: List
metadata:
  resourceVersion: ""
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.14.0"},"name":"cninodes.vpcresources.k8s.aws"},"spec":{"group":"vpcresources.k8s.aws","names":{"kind":"CNINode","listKind":"CNINodeList","plural":"cninodes","shortNames":["cnd"],"singular":"cninode"},"scope":"Cluster","versions":[{"additionalPrinterColumns":[{"description":"The features delegated to VPC resource controller","jsonPath":".spec.features","name":"Features","type":"string"}],"name":"v1alpha1","schema":{"openAPIV3Schema":{"properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"Important: Run \"make\" to regenerate code after modifying this file\nCNINodeSpec defines the desired state of CNINode","properties":{"features":{"items":{"description":"Feature is a type of feature being supported by VPC resource controller and other AWS Services","properties":{"name":{"description":"FeatureName is a type of feature name supported by AWS VPC CNI. It can be Security Group for Pods, custom networking, or others","type":"string"},"value":{"type":"string"}},"type":"object"},"type":"array"},"tags":{"additionalProperties":{"type":"string"},"description":"Additional tag key/value added to all network interfaces provisioned by the vpc-resource-controller and VPC-CNI","type":"object"}},"type":"object"},"status":{"description":"CNINodeStatus defines the managed VPC resources.","type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{}}]}}
  creationTimestamp: "2025-06-28T18:07:17Z"
  generation: 1
  name: cninodes.vpcresources.k8s.aws
  resourceVersion: "1617"
  uid: 38d23f9f-98fc-47f7-8170-4aa4a816b1e3
spec:
  conversion:
    strategy: None
  group: vpcresources.k8s.aws
  names:
    kind: CNINode
    listKind: CNINodeList
    plural: cninodes
    shortNames:
    - cnd
    singular: cninode
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: The features delegated to VPC resource controller
      jsonPath: .spec.features
      name: Features
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              Important: Run "make" to regenerate code after modifying this file
              CNINodeSpec defines the desired state of CNINode
            properties:
              features:
                items:
                  description: Feature is a type of feature being supported by VPC
                    resource controller and other AWS Services
                  properties:
                    name:
                      description: FeatureName is a type of feature name supported
                        by AWS VPC CNI. It can be Security Group for Pods, custom
                        networking, or others
                      type: string
                    value:
                      type: string
                  type: object
                type: array
              tags:
                additionalProperties:
                  type: string
                description: Additional tag key/value added to all network interfaces
                  provisioned by the vpc-resource-controller and VPC-CNI
                type: object
            type: object
          status:
            description: CNINodeStatus defines the managed VPC resources.
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: CNINode
    listKind: CNINodeList
    plural: cninodes
    shortNames:
    - cnd
    singular: cninode
  conditions:
  - lastTransitionTime: "2025-06-28T18:07:17Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2025-06-28T18:07:17Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1alpha1
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: "2025-06-28T18:09:32Z"
  generation: 1
  name: eniconfigs.crd.k8s.amazonaws.com
  resourceVersion: "698"
  uid: 3f028cbd-1856-452c-8e49-0941d45ba47c
spec:
  conversion:
    strategy: None
  group: crd.k8s.amazonaws.com
  names:
    kind: ENIConfig
    listKind: ENIConfigList
    plural: eniconfigs
    singular: eniconfig
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ENIConfig is the Schema for the eniconfigs API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ENIConfigSpec defines the desired state of ENIConfig
            properties:
              securityGroups:
                items:
                  type: string
                type: array
              subnet:
                type: string
            required:
            - subnet
            type: object
          status:
            description: ENIConfigStatus defines the observed state of ENIConfig
            type: object
        type: object
        x-kubernetes-preserve-unknown-fields: true
    served: true
    storage: true
status:
  acceptedNames:
    kind: ENIConfig
    listKind: ENIConfigList
    plural: eniconfigs
    singular: eniconfig
  conditions:
  - lastTransitionTime: "2025-06-28T18:09:32Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2025-06-28T18:09:32Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1alpha1
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.5
  creationTimestamp: "2025-06-28T18:15:37Z"
  generation: 1
  name: nodediagnostics.eks.amazonaws.com
  resourceVersion: "1919"
  uid: 355e3d82-e193-410d-b52b-d6907aefdea8
spec:
  conversion:
    strategy: None
  group: eks.amazonaws.com
  names:
    kind: NodeDiagnostic
    listKind: NodeDiagnosticList
    plural: nodediagnostics
    singular: nodediagnostic
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          The name of the NodeDiagnostic resource is meant to match the name of the
          node which should perform the diagnostic tasks
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              logCapture:
                description: |-
                  LogCapture is a definition for a diagnostic task that will package relevant
                  logs and stats into a tarball and deliver it to a provided destination.
                properties:
                  categories:
                    default:
                    - All
                    description: Categories are log source groups for the LogCapture
                      task.
                    items:
                      description: |-
                        LogCategory is a grouping of log sources to read from when performing a
                        LogCapture task.
                      enum:
                      - Base
                      - Device
                      - Networking
                      - Runtime
                      - System
                      - All
                      type: string
                    type: array
                  destination:
                    description: UploadDestination is a URL describing where to deliver
                      a diagnostic artifact.
                    type: string
                required:
                - destination
                type: object
            type: object
          status:
            properties:
              captureStatuses:
                items:
                  description: CaptureStatus describes the type and state of a capture
                    task.
                  properties:
                    state:
                      properties:
                        completed:
                          properties:
                            finishedAt:
                              format: date-time
                              type: string
                            message:
                              type: string
                            reason:
                              type: string
                            startedAt:
                              format: date-time
                              type: string
                          required:
                          - finishedAt
                          - message
                          - reason
                          - startedAt
                          type: object
                        running:
                          properties:
                            startedAt:
                              format: date-time
                              type: string
                          required:
                          - startedAt
                          type: object
                      type: object
                    type:
                      description: The set of diagnostic tasks supported by the NodeDiagnostic
                        resource.
                      type: string
                  required:
                  - state
                  - type
                  type: object
                type: array
              conditions:
                items:
                  description: Condition aliases the upstream type and adds additional
                    helper methods
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: NodeDiagnostic
    listKind: NodeDiagnosticList
    plural: nodediagnostics
    singular: nodediagnostic
  conditions:
  - lastTransitionTime: "2025-06-28T18:15:37Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2025-06-28T18:15:37Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1alpha1
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.11.3"},"creationTimestamp":null,"labels":{"app.kubernetes.io/name":"amazon-network-policy-controller-k8s"},"name":"policyendpoints.networking.k8s.aws"},"spec":{"group":"networking.k8s.aws","names":{"kind":"PolicyEndpoint","listKind":"PolicyEndpointList","plural":"policyendpoints","singular":"policyendpoint"},"scope":"Namespaced","versions":[{"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"PolicyEndpoint is the Schema for the policyendpoints API","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"PolicyEndpointSpec defines the desired state of PolicyEndpoint","properties":{"egress":{"description":"Egress is the list of egress rules containing resolved network addresses","items":{"description":"EndpointInfo defines the network endpoint information for the policy ingress/egress","properties":{"cidr":{"description":"CIDR is the network address(s) of the endpoint","type":"string"},"except":{"description":"Except is the exceptions to the CIDR ranges mentioned above.","items":{"type":"string"},"type":"array"},"ports":{"description":"Ports is the list of ports","items":{"description":"Port contains information about the transport port/protocol","properties":{"endPort":{"description":"Endport specifies the port range port to endPort port must be defined and an integer, endPort \u003e port","format":"int32","type":"integer"},"port":{"description":"Port specifies the numerical port for the protocol. If empty applies to all ports","format":"int32","type":"integer"},"protocol":{"default":"TCP","description":"Protocol specifies the transport protocol, default TCP","type":"string"}},"type":"object"},"type":"array"}},"required":["cidr"],"type":"object"},"type":"array"},"ingress":{"description":"Ingress is the list of ingress rules containing resolved network addresses","items":{"description":"EndpointInfo defines the network endpoint information for the policy ingress/egress","properties":{"cidr":{"description":"CIDR is the network address(s) of the endpoint","type":"string"},"except":{"description":"Except is the exceptions to the CIDR ranges mentioned above.","items":{"type":"string"},"type":"array"},"ports":{"description":"Ports is the list of ports","items":{"description":"Port contains information about the transport port/protocol","properties":{"endPort":{"description":"Endport specifies the port range port to endPort port must be defined and an integer, endPort \u003e port","format":"int32","type":"integer"},"port":{"description":"Port specifies the numerical port for the protocol. If empty applies to all ports","format":"int32","type":"integer"},"protocol":{"default":"TCP","description":"Protocol specifies the transport protocol, default TCP","type":"string"}},"type":"object"},"type":"array"}},"required":["cidr"],"type":"object"},"type":"array"},"podIsolation":{"description":"PodIsolation specifies whether the pod needs to be isolated for a particular traffic direction Ingress or Egress, or both. If default isolation is not specified, and there are no ingress/egress rules, then the pod is not isolated from the point of view of this policy. This follows the NetworkPolicy spec.PolicyTypes.","items":{"description":"PolicyType string describes the NetworkPolicy type This type is beta-level in 1.8","type":"string"},"type":"array"},"podSelector":{"description":"PodSelector is the podSelector from the policy resource","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object","x-kubernetes-map-type":"atomic"},"podSelectorEndpoints":{"description":"PodSelectorEndpoints contains information about the pods matching the podSelector","items":{"description":"PodEndpoint defines the summary information for the pods","properties":{"hostIP":{"description":"HostIP is the IP address of the host the pod is currently running on","type":"string"},"name":{"description":"Name is the pod name","type":"string"},"namespace":{"description":"Namespace is the pod namespace","type":"string"},"podIP":{"description":"PodIP is the IP address of the pod","type":"string"}},"required":["hostIP","name","namespace","podIP"],"type":"object"},"type":"array"},"policyRef":{"description":"PolicyRef is a reference to the Kubernetes NetworkPolicy resource.","properties":{"name":{"description":"Name is the name of the Policy","type":"string"},"namespace":{"description":"Namespace is the namespace of the Policy","type":"string"}},"required":["name","namespace"],"type":"object"}},"required":["policyRef"],"type":"object"},"status":{"description":"PolicyEndpointStatus defines the observed state of PolicyEndpoint","type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}}]}}
  creationTimestamp: "2025-06-28T18:07:17Z"
  generation: 1
  labels:
    app.kubernetes.io/name: amazon-network-policy-controller-k8s
  name: policyendpoints.networking.k8s.aws
  resourceVersion: "1613"
  uid: b27c1f32-5bcf-4ddc-a90f-ef8b9ad5f78d
spec:
  conversion:
    strategy: None
  group: networking.k8s.aws
  names:
    kind: PolicyEndpoint
    listKind: PolicyEndpointList
    plural: policyendpoints
    singular: policyendpoint
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PolicyEndpoint is the Schema for the policyendpoints API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PolicyEndpointSpec defines the desired state of PolicyEndpoint
            properties:
              egress:
                description: Egress is the list of egress rules containing resolved
                  network addresses
                items:
                  description: EndpointInfo defines the network endpoint information
                    for the policy ingress/egress
                  properties:
                    cidr:
                      description: CIDR is the network address(s) of the endpoint
                      type: string
                    except:
                      description: Except is the exceptions to the CIDR ranges mentioned
                        above.
                      items:
                        type: string
                      type: array
                    ports:
                      description: Ports is the list of ports
                      items:
                        description: Port contains information about the transport
                          port/protocol
                        properties:
                          endPort:
                            description: Endport specifies the port range port to
                              endPort port must be defined and an integer, endPort
                              > port
                            format: int32
                            type: integer
                          port:
                            description: Port specifies the numerical port for the
                              protocol. If empty applies to all ports
                            format: int32
                            type: integer
                          protocol:
                            default: TCP
                            description: Protocol specifies the transport protocol,
                              default TCP
                            type: string
                        type: object
                      type: array
                  required:
                  - cidr
                  type: object
                type: array
              ingress:
                description: Ingress is the list of ingress rules containing resolved
                  network addresses
                items:
                  description: EndpointInfo defines the network endpoint information
                    for the policy ingress/egress
                  properties:
                    cidr:
                      description: CIDR is the network address(s) of the endpoint
                      type: string
                    except:
                      description: Except is the exceptions to the CIDR ranges mentioned
                        above.
                      items:
                        type: string
                      type: array
                    ports:
                      description: Ports is the list of ports
                      items:
                        description: Port contains information about the transport
                          port/protocol
                        properties:
                          endPort:
                            description: Endport specifies the port range port to
                              endPort port must be defined and an integer, endPort
                              > port
                            format: int32
                            type: integer
                          port:
                            description: Port specifies the numerical port for the
                              protocol. If empty applies to all ports
                            format: int32
                            type: integer
                          protocol:
                            default: TCP
                            description: Protocol specifies the transport protocol,
                              default TCP
                            type: string
                        type: object
                      type: array
                  required:
                  - cidr
                  type: object
                type: array
              podIsolation:
                description: PodIsolation specifies whether the pod needs to be isolated
                  for a particular traffic direction Ingress or Egress, or both. If
                  default isolation is not specified, and there are no ingress/egress
                  rules, then the pod is not isolated from the point of view of this
                  policy. This follows the NetworkPolicy spec.PolicyTypes.
                items:
                  description: PolicyType string describes the NetworkPolicy type
                    This type is beta-level in 1.8
                  type: string
                type: array
              podSelector:
                description: PodSelector is the podSelector from the policy resource
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              podSelectorEndpoints:
                description: PodSelectorEndpoints contains information about the pods
                  matching the podSelector
                items:
                  description: PodEndpoint defines the summary information for the
                    pods
                  properties:
                    hostIP:
                      description: HostIP is the IP address of the host the pod is
                        currently running on
                      type: string
                    name:
                      description: Name is the pod name
                      type: string
                    namespace:
                      description: Namespace is the pod namespace
                      type: string
                    podIP:
                      description: PodIP is the IP address of the pod
                      type: string
                  required:
                  - hostIP
                  - name
                  - namespace
                  - podIP
                  type: object
                type: array
              policyRef:
                description: PolicyRef is a reference to the Kubernetes NetworkPolicy
                  resource.
                properties:
                  name:
                    description: Name is the name of the Policy
                    type: string
                  namespace:
                    description: Namespace is the namespace of the Policy
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - policyRef
            type: object
          status:
            description: PolicyEndpointStatus defines the observed state of PolicyEndpoint
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: PolicyEndpoint
    listKind: PolicyEndpointList
    plural: policyendpoints
    singular: policyendpoint
  conditions:
  - lastTransitionTime: "2025-06-28T18:07:17Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2025-06-28T18:07:17Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1alpha1
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.14.0"},"name":"securitygrouppolicies.vpcresources.k8s.aws"},"spec":{"group":"vpcresources.k8s.aws","names":{"kind":"SecurityGroupPolicy","listKind":"SecurityGroupPolicyList","plural":"securitygrouppolicies","shortNames":["sgp"],"singular":"securitygrouppolicy"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"description":"The security group IDs to apply to the elastic network interface of pods that match this policy","jsonPath":".spec.securityGroups.groupIds","name":"Security-Group-Ids","type":"string"}],"name":"v1beta1","schema":{"openAPIV3Schema":{"description":"Custom Resource Definition for applying security groups to pods","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"SecurityGroupPolicySpec defines the desired state of SecurityGroupPolicy","properties":{"podSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object","x-kubernetes-map-type":"atomic"},"securityGroups":{"description":"GroupIds contains the list of security groups that will be applied to the network interface of the pod matching the criteria.","properties":{"groupIds":{"description":"Groups is the list of EC2 Security Groups Ids that need to be applied to the ENI of a Pod.","items":{"type":"string"},"maxItems":5,"minItems":1,"type":"array"}},"type":"object"},"serviceAccountSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object","x-kubernetes-map-type":"atomic"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{}}]}}
  creationTimestamp: "2025-06-28T18:07:17Z"
  generation: 1
  name: securitygrouppolicies.vpcresources.k8s.aws
  resourceVersion: "1616"
  uid: 5daaef42-fe11-4a48-aa46-6fa3c4040369
spec:
  conversion:
    strategy: None
  group: vpcresources.k8s.aws
  names:
    kind: SecurityGroupPolicy
    listKind: SecurityGroupPolicyList
    plural: securitygrouppolicies
    shortNames:
    - sgp
    singular: securitygrouppolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The security group IDs to apply to the elastic network interface
        of pods that match this policy
      jsonPath: .spec.securityGroups.groupIds
      name: Security-Group-Ids
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Custom Resource Definition for applying security groups to pods
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: SecurityGroupPolicySpec defines the desired state of SecurityGroupPolicy
            properties:
              podSelector:
                description: |-
                  A label selector is a label query over a set of resources. The result of matchLabels and
                  matchExpressions are ANDed. An empty label selector matches all objects. A null
                  label selector matches no objects.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              securityGroups:
                description: GroupIds contains the list of security groups that will
                  be applied to the network interface of the pod matching the criteria.
                properties:
                  groupIds:
                    description: Groups is the list of EC2 Security Groups Ids that
                      need to be applied to the ENI of a Pod.
                    items:
                      type: string
                    maxItems: 5
                    minItems: 1
                    type: array
                type: object
              serviceAccountSelector:
                description: |-
                  A label selector is a label query over a set of resources. The result of matchLabels and
                  matchExpressions are ANDed. An empty label selector matches all objects. A null
                  label selector matches no objects.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: SecurityGroupPolicy
    listKind: SecurityGroupPolicyList
    plural: securitygrouppolicies
    shortNames:
    - sgp
    singular: securitygrouppolicy
  conditions:
  - lastTransitionTime: "2025-06-28T18:07:17Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2025-06-28T18:07:17Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1beta1
